/* Generated by Cython 0.29.2 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_2"
#define CYTHON_HEX_VERSION 0x001D02F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_USE_DICT_VERSIONS
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
        static PY_UINT64_T __pyx_dict_version = 0;\
        static PyObject *__pyx_dict_cached_value = NULL;\
        if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
            (VAR) = __pyx_dict_cached_value;\
        } else {\
            (VAR) = __pyx_dict_cached_value = (LOOKUP);\
            __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
        }\
    }
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0; // PyThread_create_key reports success always
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif // TSS (Thread Specific Storage) API
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__pymirrors
#define __PYX_HAVE_API__pymirrors
/* Early includes */
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "mirror_calculation.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "mirror_lib_v04.pyx",
  "__init__.pxd",
  "type.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":776
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":778
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":779
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":783
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":784
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":785
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":786
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":790
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":791
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":800
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":801
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":802
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":804
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":805
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":806
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":808
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":809
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":811
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":812
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":813
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);


/*--- Type declarations ---*/
struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":815
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":816
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":817
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":819
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */
struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry {
  PyObject_HEAD
  PyObject *__pyx_v_telescope;
};


/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_TrueDivideObjC(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunction.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code)\
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_TrueDivideObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_TrueDivideObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_SubtractObjC(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* PyObjectFormat.proto */
#if CYTHON_USE_UNICODE_WRITER
static PyObject* __Pyx_PyObject_Format(PyObject* s, PyObject* f);
#else
#define __Pyx_PyObject_Format(s, f) PyObject_Format(s, f)
#endif

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_RemainderObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_RemainderObjC(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceRemainder(op1, op2) : PyNumber_Remainder(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_RemainderObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceRemainder(op1, op2) : PyNumber_Remainder(op1, op2))
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_NeObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_NeObjC(op1, op2, floatval, inplace)\
    (PyObject_RichCompare(op1, op2, Py_NE))
    #endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_SubtractCObj(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_EqObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_EqObjC(op1, op2, floatval, inplace)\
    (PyObject_RichCompare(op1, op2, Py_EQ))
    #endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_AddObjC(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_AddCObj(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* py_abs.proto */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *num);
#define __Pyx_PyNumber_Absolute(x)\
    ((likely(PyLong_CheckExact(x))) ?\
         (likely(Py_SIZE(x) >= 0) ? (Py_INCREF(x), (x)) : __Pyx_PyLong_AbsNeg(x)) :\
         PyNumber_Absolute(x))
#else
#define __Pyx_PyNumber_Absolute(x)  PyNumber_Absolute(x)
#endif

/* PyObjectFormatAndDecref.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f);
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_FloorDivideObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_FloorDivideObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceFloorDivide(op1, op2) : PyNumber_FloorDivide(op1, op2))
#endif

/* SliceObject.proto */
#define __Pyx_PyObject_DelSlice(obj, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)\
    __Pyx_PyObject_SetSlice(obj, (PyObject*)NULL, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_TrueDivideCObj(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* FromPy.proto */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject*);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cython' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'pymirrors' */
static PyTypeObject *__pyx_ptype_9pymirrors___pyx_scope_struct__get_geometry = 0;
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_long = { "long", NULL, sizeof(long), { 0 }, 0, IS_UNSIGNED(long) ? 'U' : 'I', IS_UNSIGNED(long), 0 };
#define __Pyx_MODULE_NAME "pymirrors"
extern int __pyx_module_is_main_pymirrors;
int __pyx_module_is_main_pymirrors = 0;

/* Implementation of 'pymirrors' */
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_exit;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_N[] = "N";
static const char __pyx_k_T[] = "T";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d = ";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_m[] = "m";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_4f[] = ".4f";
static const char __pyx_k_5f[] = ".5f";
static const char __pyx_k_8f[] = ".8f";
static const char __pyx_k_AL[] = "AL";
static const char __pyx_k_ID[] = "ID";
static const char __pyx_k_OX[] = "OX";
static const char __pyx_k_a2[] = "a2";
static const char __pyx_k_al[] = "al";
static const char __pyx_k_ap[] = "ap";
static const char __pyx_k_ax[] = "ax";
static const char __pyx_k_ca[] = "ca";
static const char __pyx_k_cs[] = "cs";
static const char __pyx_k_dd[] = "dd";
static const char __pyx_k_f8[] = "f8";
static const char __pyx_k_fg[] = "fg";
static const char __pyx_k_i2[] = "i2";
static const char __pyx_k_i4[] = "i4";
static const char __pyx_k_ia[] = "ia";
static const char __pyx_k_ib[] = "ib";
static const char __pyx_k_ic[] = "ic";
static const char __pyx_k_it[] = "it";
static const char __pyx_k_ix[] = "ix";
static const char __pyx_k_iy[] = "iy";
static const char __pyx_k_n1[] = "n1";
static const char __pyx_k_n2[] = "n2";
static const char __pyx_k_n3[] = "n3";
static const char __pyx_k_nn[] = "nn";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_ox[] = "ox";
static const char __pyx_k_p0[] = "p0";
static const char __pyx_k_pi[] = "pi";
static const char __pyx_k_pl[] = "pl";
static const char __pyx_k_rx[] = "rx";
static const char __pyx_k_ry[] = "ry";
static const char __pyx_k_sa[] = "sa";
static const char __pyx_k_sn[] = "sn";
static const char __pyx_k_sx[] = "sx";
static const char __pyx_k_sy[] = "sy";
static const char __pyx_k_t1[] = "t1";
static const char __pyx_k_t2[] = "t2";
static const char __pyx_k_th[] = "th";
static const char __pyx_k_tm[] = "tm";
static const char __pyx_k_ww[] = "ww";
static const char __pyx_k_x1[] = "x1";
static const char __pyx_k_x2[] = "x2";
static const char __pyx_k_xc[] = "xc";
static const char __pyx_k_xf[] = "xf";
static const char __pyx_k_y1[] = "y1";
static const char __pyx_k_y2[] = "y2";
static const char __pyx_k_yc[] = "yc";
static const char __pyx_k_GTC[] = "GTC";
static const char __pyx_k__10[] = "";
static const char __pyx_k__17[] = "_";
static const char __pyx_k__76[] = "\r";
static const char __pyx_k__87[] = "?";
static const char __pyx_k__89[] = ".";
static const char __pyx_k__90[] = " (";
static const char __pyx_k_a_2[] = "a = ";
static const char __pyx_k_abs[] = "abs";
static const char __pyx_k_alp[] = "alp";
static const char __pyx_k_ang[] = "ang";
static const char __pyx_k_aux[] = "aux";
static const char __pyx_k_ax1[] = "ax1";
static const char __pyx_k_ax2[] = "ax2";
static const char __pyx_k_clf[] = "clf";
static const char __pyx_k_cnt[] = "cnt";
static const char __pyx_k_cos[] = "cos";
static const char __pyx_k_d1s[] = "d1s";
static const char __pyx_k_d2s[] = "d2s";
static const char __pyx_k_d_2[] = "d";
static const char __pyx_k_d_c[] = "d_c";
static const char __pyx_k_d_d[] = "d_d";
static const char __pyx_k_d_s[] = "d_s";
static const char __pyx_k_dif[] = "dif";
static const char __pyx_k_dmm[] = "dmm";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_dot[] = "dot";
static const char __pyx_k_dum[] = "dum";
static const char __pyx_k_e_1[] = "e_1";
static const char __pyx_k_e_2[] = "e_2";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_esx[] = "esx";
static const char __pyx_k_esy[] = "esy";
static const char __pyx_k_exp[] = "exp";
static const char __pyx_k_fg1[] = "fg1";
static const char __pyx_k_fg2[] = "fg2";
static const char __pyx_k_i_1[] = "i_1";
static const char __pyx_k_i_2[] = "%i";
static const char __pyx_k_i_i[] = " %i -> %i";
static const char __pyx_k_ind[] = "ind";
static const char __pyx_k_inf[] = "inf";
static const char __pyx_k_ion[] = "ion";
static const char __pyx_k_isx[] = "isx";
static const char __pyx_k_isy[] = "isy";
static const char __pyx_k_it1[] = "it1";
static const char __pyx_k_it3[] = "it3";
static const char __pyx_k_itn[] = "itn";
static const char __pyx_k_ixs[] = "ixs";
static const char __pyx_k_iys[] = "iys";
static const char __pyx_k_k_1[] = "k_1";
static const char __pyx_k_k_2[] = "k_2";
static const char __pyx_k_k_g[] = "k_g";
static const char __pyx_k_lam[] = "lam";
static const char __pyx_k_mat[] = "mat";
static const char __pyx_k_max[] = "max";
static const char __pyx_k_min[] = "min";
static const char __pyx_k_n_c[] = "n_c";
static const char __pyx_k_n_d[] = "n_d";
static const char __pyx_k_n_g[] = "n_g";
static const char __pyx_k_n_s[] = "n_s";
static const char __pyx_k_n_x[] = "n_x";
static const char __pyx_k_n_y[] = "n_y";
static const char __pyx_k_nan[] = "nan";
static const char __pyx_k_nds[] = "nds";
static const char __pyx_k_num[] = "num";
static const char __pyx_k_off[] = "off";
static const char __pyx_k_out[] = "out";
static const char __pyx_k_pdb[] = "pdb";
static const char __pyx_k_rad[] = "rad";
static const char __pyx_k_ref[] = "ref";
static const char __pyx_k_res[] = "res";
static const char __pyx_k_rex[] = "rex";
static const char __pyx_k_rey[] = "rey";
static const char __pyx_k_rix[] = "rix";
static const char __pyx_k_riy[] = "riy";
static const char __pyx_k_rot[] = "rot";
static const char __pyx_k_rtd[] = "rtd";
static const char __pyx_k_sdx[] = "sdx";
static const char __pyx_k_sdy[] = "sdy";
static const char __pyx_k_sec[] = " sec.)";
static const char __pyx_k_sin[] = "sin";
static const char __pyx_k_six[] = "six";
static const char __pyx_k_siy[] = "siy";
static const char __pyx_k_sol[] = "sol";
static const char __pyx_k_srs[] = "srs";
static const char __pyx_k_sum[] = "sum";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_tau[] = "tau";
static const char __pyx_k_th1[] = "th1";
static const char __pyx_k_tm1[] = "tm1";
static const char __pyx_k_tm2[] = "tm2";
static const char __pyx_k_tm3[] = "tm3";
static const char __pyx_k_tm4[] = "tm4";
static const char __pyx_k_txt[] = "txt";
static const char __pyx_k_uts[] = "uts";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_vec[] = "vec";
static const char __pyx_k_ww2[] = "ww2";
static const char __pyx_k_wwn[] = "wwn";
static const char __pyx_k_wws[] = "wws";
static const char __pyx_k_x1d[] = "x1d";
static const char __pyx_k_xer[] = "xer";
static const char __pyx_k_xir[] = "xir";
static const char __pyx_k_xs1[] = "xs1";
static const char __pyx_k_xs2[] = "xs2";
static const char __pyx_k_y1d[] = "y1d";
static const char __pyx_k_yer[] = "yer";
static const char __pyx_k_yir[] = "yir";
static const char __pyx_k_z_1[] = "z_1";
static const char __pyx_k_z_2[] = "z_2";
static const char __pyx_k_zs1[] = "zs1";
static const char __pyx_k_zs2[] = "zs2";
static const char __pyx_k_AGTC[] = "AGTC";
static const char __pyx_k_DUST[] = "DUST";
static const char __pyx_k_EELT[] = "EELT";
static const char __pyx_k_PLOT[] = " !! PLOT !!";
static const char __pyx_k_SGTC[] = "SGTC";
static const char __pyx_k__110[] = "*";
static const char __pyx_k_adif[] = "adif";
static const char __pyx_k_angs[] = "angs";
static const char __pyx_k_area[] = "area";
static const char __pyx_k_axis[] = "axis";
static const char __pyx_k_azis[] = "azis";
static const char __pyx_k_beam[] = "beam";
static const char __pyx_k_ceil[] = "ceil";
static const char __pyx_k_cte1[] = "cte1";
static const char __pyx_k_cte2[] = "cte2";
static const char __pyx_k_ctea[] = "ctea";
static const char __pyx_k_cteb[] = "cteb";
static const char __pyx_k_ctei[] = "ctei";
static const char __pyx_k_ctel[] = "ctel";
static const char __pyx_k_cteq[] = "cteq";
static const char __pyx_k_d11d[] = "d11d";
static const char __pyx_k_d21d[] = "d21d";
static const char __pyx_k_d_ox[] = "d_ox";
static const char __pyx_k_df_1[] = "df_1";
static const char __pyx_k_df_2[] = "df_2";
static const char __pyx_k_diff[] = "diff";
static const char __pyx_k_dist[] = "dist";
static const char __pyx_k_draw[] = "draw";
static const char __pyx_k_dtor[] = "dtor";
static const char __pyx_k_elem[] = "elem";
static const char __pyx_k_exit[] = "exit";
static const char __pyx_k_fr_1[] = "fr_1";
static const char __pyx_k_frac[] = "frac";
static const char __pyx_k_i_22[] = "i_22";
static const char __pyx_k_igxs[] = "igxs";
static const char __pyx_k_igys[] = "igys";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_int1[] = "int1";
static const char __pyx_k_int3[] = "int3";
static const char __pyx_k_isin[] = "isin";
static const char __pyx_k_it_a[] = "it_a";
static const char __pyx_k_it_x[] = "it_x";
static const char __pyx_k_it_y[] = "it_y";
static const char __pyx_k_ix1s[] = "ix1s";
static const char __pyx_k_iy1s[] = "iy1s";
static const char __pyx_k_k_ox[] = "k_ox";
static const char __pyx_k_lamb[] = "lamb";
static const char __pyx_k_last[] = "last";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mean[] = "mean";
static const char __pyx_k_mmpd[] = "mmpd";
static const char __pyx_k_n_in[] = "n_in";
static const char __pyx_k_n_ox[] = "n_ox";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_none[] = "none";
static const char __pyx_k_norm[] = "norm";
static const char __pyx_k_nsol[] = "nsol";
static const char __pyx_k_ntot[] = "ntot";
static const char __pyx_k_num2[] = "num2";
static const char __pyx_k_ones[] = "ones";
static const char __pyx_k_plot[] = "plot";
static const char __pyx_k_rads[] = "rads";
static const char __pyx_k_rc_1[] = "rc_1";
static const char __pyx_k_rc_2[] = "rc_2";
static const char __pyx_k_real[] = "real";
static const char __pyx_k_seed[] = "seed";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_show[] = "show";
static const char __pyx_k_sign[] = "sign";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_sol1[] = "sol1";
static const char __pyx_k_sol2[] = "sol2";
static const char __pyx_k_sort[] = "sort";
static const char __pyx_k_sqrt[] = "sqrt";
static const char __pyx_k_step[] = "step";
static const char __pyx_k_stop[] = "stop";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_th_1[] = "th_1";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_totn[] = "totn";
static const char __pyx_k_tpar[] = "tpar";
static const char __pyx_k_tper[] = "tper";
static const char __pyx_k_vmax[] = "vmax";
static const char __pyx_k_wpos[] = "wpos";
static const char __pyx_k_wwn2[] = "wwn2";
static const char __pyx_k_xpos[] = "xpos";
static const char __pyx_k_ypos[] = "ypos";
static const char __pyx_k_AEELT[] = "AEELT";
static const char __pyx_k_EQUAL[] = "EQUAL";
static const char __pyx_k_SEELT[] = "SEELT";
static const char __pyx_k_a_alp[] = "a_alp";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_avail[] = "avail";
static const char __pyx_k_beams[] = "beams";
static const char __pyx_k_cdarr[] = "cdarr";
static const char __pyx_k_cdust[] = "cdust";
static const char __pyx_k_ckarr[] = "ckarr";
static const char __pyx_k_clamb[] = "clamb";
static const char __pyx_k_cnarr[] = "cnarr";
static const char __pyx_k_color[] = "color";
static const char __pyx_k_d_mir[] = "d_mir";
static const char __pyx_k_dangs[] = "dangs";
static const char __pyx_k_diff2[] = "diff2";
static const char __pyx_k_diffs[] = "diffs";
static const char __pyx_k_dim_x[] = "dim_x";
static const char __pyx_k_dim_y[] = "dim_y";
static const char __pyx_k_drads[] = "drads";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_dumgx[] = "dumgx";
static const char __pyx_k_dumgy[] = "dumgy";
static const char __pyx_k_dumxg[] = "dumxg";
static const char __pyx_k_dumyg[] = "dumyg";
static const char __pyx_k_equal[] = "equal";
static const char __pyx_k_floor[] = "floor";
static const char __pyx_k_flush[] = "flush";
static const char __pyx_k_fsort[] = "fsort";
static const char __pyx_k_hangs[] = "hangs";
static const char __pyx_k_i_2_2[] = "i_2";
static const char __pyx_k_iangs[] = "iangs";
static const char __pyx_k_ideal[] = "ideal";
static const char __pyx_k_igrad[] = "igrad";
static const char __pyx_k_int16[] = "int16";
static const char __pyx_k_int32[] = "int32";
static const char __pyx_k_int64[] = "int64";
static const char __pyx_k_irads[] = "irads";
static const char __pyx_k_isol1[] = "isol1";
static const char __pyx_k_isol2[] = "isol2";
static const char __pyx_k_it2_a[] = "it2_a";
static const char __pyx_k_itnum[] = "itnum";
static const char __pyx_k_ixpos[] = "ixpos";
static const char __pyx_k_iypos[] = "iypos";
static const char __pyx_k_k_out[] = "k_out";
static const char __pyx_k_l_inc[] = "l_inc";
static const char __pyx_k_m_inc[] = "m_inc";
static const char __pyx_k_mltch[] = "mltch";
static const char __pyx_k_n_inc[] = "n_inc";
static const char __pyx_k_n_out[] = "n_out";
static const char __pyx_k_ncols[] = "ncols";
static const char __pyx_k_ndf_2[] = "ndf_2";
static const char __pyx_k_nrc_2[] = "nrc_2";
static const char __pyx_k_nrefs[] = "nrefs";
static const char __pyx_k_nrows[] = "nrows";
static const char __pyx_k_ntot2[] = "ntot2";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_polar[] = "polar";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_rad1d[] = "rad1d";
static const char __pyx_k_randn[] = "randn";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_rdist[] = "rdist";
static const char __pyx_k_resgx[] = "resgx";
static const char __pyx_k_resgy[] = "resgy";
static const char __pyx_k_round[] = "round";
static const char __pyx_k_sangs[] = "sangs";
static const char __pyx_k_sazis[] = "sazis";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_snell[] = "snell";
static const char __pyx_k_srads[] = "srads";
static const char __pyx_k_stcnt[] = "stcnt";
static const char __pyx_k_step2[] = "step2";
static const char __pyx_k_t_i_i[] = " t=%i(/%i) ; ";
static const char __pyx_k_tarea[] = "tarea";
static const char __pyx_k_tau_d[] = "tau_d";
static const char __pyx_k_tau_o[] = "tau_o";
static const char __pyx_k_teles[] = "teles";
static const char __pyx_k_thick[] = "thick";
static const char __pyx_k_tlong[] = "tlong";
static const char __pyx_k_touse[] = "touse";
static const char __pyx_k_tpar1[] = "tpar1";
static const char __pyx_k_tpar2[] = "tpar2";
static const char __pyx_k_tper1[] = "tper1";
static const char __pyx_k_tper2[] = "tper2";
static const char __pyx_k_tstep[] = "tstep";
static const char __pyx_k_upper[] = "upper";
static const char __pyx_k_where[] = "where";
static const char __pyx_k_x_alp[] = "x_alp";
static const char __pyx_k_x_sec[] = "x_sec";
static const char __pyx_k_y_alp[] = "y_alp";
static const char __pyx_k_y_sec[] = "y_sec";
static const char __pyx_k_zeros[] = "zeros";
static const char __pyx_k_Dthick[] = "Dthick";
static const char __pyx_k_LINEAL[] = "LINEAL";
static const char __pyx_k_Ntimes[] = "Ntimes";
static const char __pyx_k_RANDOM[] = "RANDOM";
static const char __pyx_k_adiff1[] = "adiff1";
static const char __pyx_k_adiff2[] = "adiff2";
static const char __pyx_k_anular[] = "anular";
static const char __pyx_k_arange[] = "arange";
static const char __pyx_k_arccos[] = "arccos";
static const char __pyx_k_arcsin[] = "arcsin";
static const char __pyx_k_area1d[] = "area1d";
static const char __pyx_k_area_2[] = " area=";
static const char __pyx_k_astype[] = "astype";
static const char __pyx_k_azi360[] = "azi360";
static const char __pyx_k_cnrays[] = "cnrays";
static const char __pyx_k_colors[] = "colors";
static const char __pyx_k_condit[] = "condit";
static const char __pyx_k_costhU[] = "costhU";
static const char __pyx_k_deltat[] = "deltat";
static const char __pyx_k_diam_1[] = "diam_1";
static const char __pyx_k_dtheta[] = "dtheta";
static const char __pyx_k_dumrad[] = "dumrad";
static const char __pyx_k_extent[] = "extent";
static const char __pyx_k_factor[] = "factor";
static const char __pyx_k_family[] = "family";
static const char __pyx_k_figure[] = "figure";
static const char __pyx_k_hstack[] = "hstack";
static const char __pyx_k_igarea[] = "igarea";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_ishape[] = "ishape";
static const char __pyx_k_it_nn2[] = "it_nn2";
static const char __pyx_k_it_nnn[] = "it_nnn";
static const char __pyx_k_it_sgm[] = "it_sgm";
static const char __pyx_k_it_th1[] = "it_th1";
static const char __pyx_k_it_tms[] = "it_tms";
static const char __pyx_k_it_ttt[] = "it_ttt";
static const char __pyx_k_iteles[] = "iteles";
static const char __pyx_k_lam_in[] = "lam_in";
static const char __pyx_k_layout[] = "layout";
static const char __pyx_k_marker[] = "marker";
static const char __pyx_k_mirror[] = "mirror";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_object[] = "object";
static const char __pyx_k_offset[] = "offset";
static const char __pyx_k_period[] = "period";
static const char __pyx_k_radius[] = "radius";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_remove[] = "remove";
static const char __pyx_k_resrad[] = "resrad";
static const char __pyx_k_result[] = "result";
static const char __pyx_k_sxprim[] = "sxprim";
static const char __pyx_k_syprim[] = "syprim";
static const char __pyx_k_th_m_d[] = "th_m_d";
static const char __pyx_k_th_m_o[] = "th_m_o";
static const char __pyx_k_th_max[] = "th_max";
static const char __pyx_k_theta1[] = "theta1";
static const char __pyx_k_theta2[] = "theta2";
static const char __pyx_k_theta3[] = "theta3";
static const char __pyx_k_thetas[] = "thetas";
static const char __pyx_k_upplim[] = "upplim";
static const char __pyx_k_vstack[] = "vstack";
static const char __pyx_k_vx_alp[] = "vx_alp";
static const char __pyx_k_vy_alp[] = "vy_alp";
static const char __pyx_k_vz_alp[] = "vz_alp";
static const char __pyx_k_x_even[] = "x_even";
static const char __pyx_k_x_odds[] = "x_odds";
static const char __pyx_k_y_even[] = "y_even";
static const char __pyx_k_y_odds[] = "y_odds";
static const char __pyx_k_2_np_pi[] = " / 2. / np.pi";
static const char __pyx_k_Nfamily[] = "Nfamily";
static const char __pyx_k_Not_yet[] = "Not yet";
static const char __pyx_k_ang_ref[] = "ang_ref";
static const char __pyx_k_arctan2[] = "arctan2";
static const char __pyx_k_argsort[] = "argsort";
static const char __pyx_k_avg_res[] = "avg_res";
static const char __pyx_k_azi_val[] = "azi_val";
static const char __pyx_k_azimuth[] = "azimuth";
static const char __pyx_k_cinside[] = "cinside";
static const char __pyx_k_condit2[] = "condit2";
static const char __pyx_k_contour[] = "contour";
static const char __pyx_k_degrees[] = "degrees";
static const char __pyx_k_dir_cos[] = "dir_cos";
static const char __pyx_k_elem_ox[] = "elem_ox";
static const char __pyx_k_flatten[] = "flatten";
static const char __pyx_k_float64[] = "float64";
static const char __pyx_k_i_4f_8e[] = " %i  ;  %.4f  ;  %.8e";
static const char __pyx_k_ideltat[] = "ideltat";
static const char __pyx_k_iff_azi[] = "iff_azi";
static const char __pyx_k_indexes[] = "indexes";
static const char __pyx_k_iperiod[] = "iperiod";
static const char __pyx_k_iradius[] = "iradius";
static const char __pyx_k_it_done[] = " -> it done! ";
static const char __pyx_k_it_sort[] = "it_sort";
static const char __pyx_k_lamb_mu[] = "lamb_mu";
static const char __pyx_k_nrays_i[] = " nrays=%i ; ";
static const char __pyx_k_num_esp[] = "num_esp";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_primary[] = "primary:";
static const char __pyx_k_rad_max[] = "rad_max";
static const char __pyx_k_rad_min[] = "rad_min";
static const char __pyx_k_ref_pos[] = "ref_pos";
static const char __pyx_k_ref_val[] = "ref_val";
static const char __pyx_k_resarea[] = "resarea";
static const char __pyx_k_reshape[] = "reshape";
static const char __pyx_k_scatter[] = "scatter";
static const char __pyx_k_sec_num[] = "sec_num";
static const char __pyx_k_vectors[] = "vectors";
static const char __pyx_k_verbose[] = "verbose";
static const char __pyx_k_x_alpha[] = "x_alpha";
static const char __pyx_k_y_alpha[] = "y_alpha";
static const char __pyx_k_zerodux[] = "zerodux";
static const char __pyx_k_LINEAL_2[] = "\tLINEAL";
static const char __pyx_k_RANDOM_2[] = "\tRANDOM";
static const char __pyx_k_SYMMETRY[] = "SYMMETRY";
static const char __pyx_k_angstrom[] = "angstrom";
static const char __pyx_k_cnlayers[] = "cnlayers";
static const char __pyx_k_elem_esp[] = "elem_esp";
static const char __pyx_k_families[] = "families";
static const char __pyx_k_init_val[] = "init_val";
static const char __pyx_k_interp1d[] = "interp1d";
static const char __pyx_k_interpol[] = "interpol";
static const char __pyx_k_inum_esp[] = "inum_esp";
static const char __pyx_k_irad_max[] = "irad_max";
static const char __pyx_k_irad_min[] = "irad_min";
static const char __pyx_k_it_index[] = "it_index";
static const char __pyx_k_itf_sort[] = "itf_sort";
static const char __pyx_k_linspace[] = "linspace";
static const char __pyx_k_material[] = "material";
static const char __pyx_k_meshgrid[] = "meshgrid";
static const char __pyx_k_npts_seg[] = "npts_seg";
static const char __pyx_k_nthreads[] = "nthreads";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_res_full[] = "res_full";
static const char __pyx_k_segments[] = "segments";
static const char __pyx_k_set_xlim[] = "set_xlim";
static const char __pyx_k_set_ylim[] = "set_ylim";
static const char __pyx_k_subplots[] = "subplots";
static const char __pyx_k_thetaref[] = "thetaref";
static const char __pyx_k_time_map[] = "time_map";
static const char __pyx_k_AZIMUTHAL[] = "AZIMUTHAL";
static const char __pyx_k_SYMMETRIC[] = "SYMMETRIC";
static const char __pyx_k_Secondary[] = "Secondary:";
static const char __pyx_k_apy_utils[] = "apy_utils";
static const char __pyx_k_calculate[] = "calculate";
static const char __pyx_k_cartesian[] = "cartesian";
static const char __pyx_k_chex_syst[] = "chex_syst";
static const char __pyx_k_cleandust[] = "cleandust";
static const char __pyx_k_dir_cos_i[] = "dir_cos_i";
static const char __pyx_k_edgecolor[] = "edgecolor";
static const char __pyx_k_get_mdust[] = "get_mdust";
static const char __pyx_k_get_order[] = "get_order";
static const char __pyx_k_get_times[] = "get_times";
static const char __pyx_k_hexagonal[] = "hexagonal";
static const char __pyx_k_init_beam[] = "init_beam";
static const char __pyx_k_linestyle[] = "linestyle";
static const char __pyx_k_materials[] = "materials";
static const char __pyx_k_mean_dust[] = "mean_dust";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_mmpa_full[] = "mmpa_full";
static const char __pyx_k_primary_2[] = "primary";
static const char __pyx_k_pymirrors[] = "pymirrors";
static const char __pyx_k_rads_even[] = "rads_even";
static const char __pyx_k_rads_odds[] = "rads_odds";
static const char __pyx_k_rotate_2d[] = "rotate_2d";
static const char __pyx_k_secondary[] = "secondary";
static const char __pyx_k_set_trace[] = "set_trace";
static const char __pyx_k_telescope[] = "telescope";
static const char __pyx_k_Nperfamily[] = "Nperfamily";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_check_rays[] = "check_rays";
static const char __pyx_k_dir_cos_n1[] = "dir_cos_n1";
static const char __pyx_k_dir_cos_n2[] = "dir_cos_n2";
static const char __pyx_k_dir_cos_o1[] = "dir_cos_o1";
static const char __pyx_k_get_mirror[] = "get_mirror";
static const char __pyx_k_markersize[] = "markersize";
static const char __pyx_k_mirror_obj[] = "mirror_obj";
static const char __pyx_k_osecondary[] = "osecondary";
static const char __pyx_k_set_aspect[] = "set_aspect";
static const char __pyx_k_sqr_meters[] = " sqr. meters.";
static const char __pyx_k_AZIMUTHAL_2[] = "\tAZIMUTHAL";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_SYMMETRIC_2[] = "\tSYMMETRIC";
static const char __pyx_k_aux_seg_chg[] = "aux_seg_chg";
static const char __pyx_k_concatenate[] = "concatenate";
static const char __pyx_k_dirt_timing[] = "dirt_timing";
static const char __pyx_k_primary_obj[] = "primary_obj";
static const char __pyx_k_sec_num_esp[] = "sec_num_esp";
static const char __pyx_k_x_fact_even[] = "x_fact_even";
static const char __pyx_k_x_fact_odds[] = "x_fact_odds";
static const char __pyx_k_y_fact_even[] = "y_fact_even";
static const char __pyx_k_y_fact_odds[] = "y_fact_odds";
static const char __pyx_k_Get_geometry[] = "Get geometry:";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_get_geometry[] = "get_geometry";
static const char __pyx_k_to_be_rolled[] = "to_be_rolled";
static const char __pyx_k_Shape_unknown[] = "\tShape unknown!";
static const char __pyx_k_SimulatedTime[] = "SimulatedTime";
static const char __pyx_k_check_primary[] = "check_primary";
static const char __pyx_k_complementary[] = "complementary";
static const char __pyx_k_get_times_new[] = "get_times_new";
static const char __pyx_k_init_dust_val[] = "init_dust_val";
static const char __pyx_k_last_dust_val[] = "last_dust_val";
static const char __pyx_k_new_get_mdust[] = "new_get_mdust";
static const char __pyx_k_primary_shape[] = "primary_shape";
static const char __pyx_k_SimulatedTimes[] = "SimulatedTimes";
static const char __pyx_k_Unknown_layout[] = "\t Unknown layout: ";
static const char __pyx_k_get_conic_sols[] = "get_conic_sols";
static const char __pyx_k_ginit_dust_val[] = "ginit_dust_val";
static const char __pyx_k_init_telescope[] = "init_telescope";
static const char __pyx_k_iprimary_shape[] = "iprimary_shape";
static const char __pyx_k_multiplechange[] = "multiplechange";
static const char __pyx_k_new2_get_gcurv[] = "new2_get_gcurv";
static const char __pyx_k_rad_to_azi_rat[] = "rad_to_azi_rat";
static const char __pyx_k_sec_ext_radius[] = "sec_ext_radius";
static const char __pyx_k_sec_int_radius[] = "sec_int_radius";
static const char __pyx_k_excess_sim_step[] = "excess_sim_step";
static const char __pyx_k_for_ray_tracing[] = " for ray tracing!";
static const char __pyx_k_isec_ext_radius[] = "isec_ext_radius";
static const char __pyx_k_isec_int_radius[] = "isec_int_radius";
static const char __pyx_k_secondary_shape[] = "secondary_shape";
static const char __pyx_k_Unknown_layout_2[] = "\tUnknown layout.";
static const char __pyx_k_check_primary_id[] = "check_primary_id";
static const char __pyx_k_cleandustcadence[] = "cleandustcadence";
static const char __pyx_k_get_intersection[] = "get_intersection";
static const char __pyx_k_get_mueller_time[] = "get_mueller_time";
static const char __pyx_k_get_primary_rays[] = "get_primary_rays";
static const char __pyx_k_bu_ginit_dust_val[] = "bu_ginit_dust_val";
static const char __pyx_k_matplotlib_pyplot[] = "matplotlib.pyplot";
static const char __pyx_k_scipy_interpolate[] = "scipy.interpolate";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_mirror_lib_v04_pyx[] = "mirror_lib_v04.pyx";
static const char __pyx_k_days_between_change[] = "days_between_change";
static const char __pyx_k_Segment_id_i_nrays_i[] = " Segment id[#]=%i ; nrays= %i";
static const char __pyx_k_get_primary_geometry[] = "get_primary_geometry";
static const char __pyx_k_Primary_shape_unknown[] = "Primary shape unknown!";
static const char __pyx_k_get_direction_cosines[] = "get_direction_cosines";
static const char __pyx_k_get_mdust_locals_tpar[] = "get_mdust.<locals>.tpar";
static const char __pyx_k_get_mdust_locals_tper[] = "get_mdust.<locals>.tper";
static const char __pyx_k_init_beam_locals_beam[] = "init_beam.<locals>.beam";
static const char __pyx_k_days_for_each_timestep[] = "days_for_each_timestep";
static const char __pyx_k_get_intersection_focus[] = "get_intersection_focus";
static const char __pyx_k_get_mdust_locals_snell[] = "get_mdust.<locals>.snell";
static const char __pyx_k_get_secondary_geometry[] = "get_secondary_geometry";
static const char __pyx_k_Segment_i_dust_value_4f[] = " Segment %i dust value: %.4f";
static const char __pyx_k_Multiplechange_MUST_be_1[] = "\tMultiplechange MUST be >=1!";
static const char __pyx_k_dirt_timing_locals_thick[] = "dirt_timing.<locals>.thick";
static const char __pyx_k_dirt_timing_locals_Dthick[] = "dirt_timing.<locals>.Dthick";
static const char __pyx_k_dirt_timing_locals_indexes[] = "dirt_timing.<locals>.indexes";
static const char __pyx_k_dirt_timing_locals_zerodux[] = "dirt_timing.<locals>.zerodux";
static const char __pyx_k_primary_locals_primary_obj[] = "primary.<locals>.primary_obj";
static const char __pyx_k_Number_of_simulated_steps_i[] = "\tNumber of simulated steps: %i";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_secondary_locals_mirror_obj[] = "secondary.<locals>.mirror_obj";
static const char __pyx_k_Unknown_primary_mirror_shape[] = "\tUnknown primary mirror shape!";
static const char __pyx_k_dirt_timing_locals_materials[] = "dirt_timing.<locals>.materials";
static const char __pyx_k_init_beam_locals_beam___init[] = "init_beam.<locals>.beam.__init__";
static const char __pyx_k_initial_num_cln_since_last_sch[] = "initial_num_cln_since_last_sch";
static const char __pyx_k_only_GTC_or_EELT_are_available[] = "only GTC or EELT are available!";
static const char __pyx_k_Allowed_options_are_polar_carte[] = "\t Allowed options are: \"polar\", \"cartesian\"";
static const char __pyx_k_Area_covered_by_the_primary_mir[] = " Area covered by the primary mirror: ";
static const char __pyx_k_Multiplechange_MUST_be_an_integ[] = "\tMultiplechange MUST be an integer!";
static const char __pyx_k_Multiplechange_MUST_give_MODULU[] = "\tMultiplechange MUST give MODULUS(N,MLT)==0";
static const char __pyx_k_Number_of_simulated_steps_in_be[] = "\tNumber of simulated steps in between mirror changes: %i";
static const char __pyx_k_Total_number_of_rays_considered[] = "Total number of rays considered: %i";
static const char __pyx_k_Warning_number_of_segments_insi[] = "\t Warning!, number of segments inside maximum radius is too big";
static const char __pyx_k_deltat_and_period_are_non_0_one[] = "deltat and period are non 0, one of them must be 0!";
static const char __pyx_k_init_telescope_locals_telescope[] = "init_telescope.<locals>.telescope";
static const char __pyx_k_inital_amount_dust_in_sim_steps[] = "inital_amount_dust_in_sim_steps";
static const char __pyx_k_new2_get_gcurv_locals_get_conic[] = "new2_get_gcurv.<locals>.get_conic_sols";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_secondary_locals_mirror_obj_get[] = "secondary.<locals>.mirror_obj.get_secondary_geometry";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_At_least_one_time_step_per_chang[] = "At least one time step per change is needed, returning nan";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_THE_ORDER_MUST_BE_ONE_OF_THE_FOL[] = "THE ORDER MUST BE ONE OF THE FOLLOWINGS:";
static const char __pyx_k_deltat_and_period_are_0_one_of_t[] = "deltat and period are 0, one of them must not be 0!";
static const char __pyx_k_dirt_timing_locals_materials___i[] = "dirt_timing.<locals>.materials.__init__";
static const char __pyx_k_first_acc_amount_dust_in_sim_ste[] = "first_acc_amount_dust_in_sim_steps";
static const char __pyx_k_get_geometry_locals_check_primar[] = "get_geometry.<locals>.check_primary_id";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_new2_get_gcurv_requires_either_k[] = "new2_get_gcurv requires either k/e and r/f";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_primary_locals_primary_obj___ini[] = "primary.<locals>.primary_obj.__init__.<locals>.get_primary_geometry";
static const char __pyx_k_primary_locals_primary_obj_get_o[] = "primary.<locals>.primary_obj.get_order";
static const char __pyx_k_primary_locals_primary_obj_get_t[] = "primary.<locals>.primary_obj.get_times_new";
static const char __pyx_k_secondary_locals_mirror_obj___in[] = "secondary.<locals>.mirror_obj.__init__";
static const char __pyx_k_init_telescope_locals_telescope_2[] = "init_telescope.<locals>.telescope.__init__";
static const char __pyx_k_secondary_locals_mirror_obj_get_2[] = "secondary.<locals>.mirror_obj.get_mirror";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static const char __pyx_k_get_geometry_locals_check_primar_2[] = "get_geometry.<locals>.check_primary";
static const char __pyx_k_primary_locals_primary_obj___ini_2[] = "primary.<locals>.primary_obj.__init__";
static const char __pyx_k_primary_locals_primary_obj_get_t_2[] = "primary.<locals>.primary_obj.get_times";
static PyObject *__pyx_kp_u_2_np_pi;
static PyObject *__pyx_kp_u_4f;
static PyObject *__pyx_kp_u_5f;
static PyObject *__pyx_kp_u_8f;
static PyObject *__pyx_n_u_AEELT;
static PyObject *__pyx_n_u_AGTC;
static PyObject *__pyx_n_u_AL;
static PyObject *__pyx_n_u_AZIMUTHAL;
static PyObject *__pyx_kp_u_AZIMUTHAL_2;
static PyObject *__pyx_kp_u_Allowed_options_are_polar_carte;
static PyObject *__pyx_kp_u_Area_covered_by_the_primary_mir;
static PyObject *__pyx_kp_u_At_least_one_time_step_per_chang;
static PyObject *__pyx_n_u_DUST;
static PyObject *__pyx_n_s_Dthick;
static PyObject *__pyx_n_u_EELT;
static PyObject *__pyx_n_u_EQUAL;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_u_GTC;
static PyObject *__pyx_kp_u_Get_geometry;
static PyObject *__pyx_n_s_ID;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_u_LINEAL;
static PyObject *__pyx_kp_u_LINEAL_2;
static PyObject *__pyx_kp_u_Multiplechange_MUST_be_1;
static PyObject *__pyx_kp_u_Multiplechange_MUST_be_an_integ;
static PyObject *__pyx_kp_u_Multiplechange_MUST_give_MODULU;
static PyObject *__pyx_n_s_N;
static PyObject *__pyx_n_s_Nfamily;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_kp_u_Not_yet;
static PyObject *__pyx_n_s_Nperfamily;
static PyObject *__pyx_n_s_Ntimes;
static PyObject *__pyx_kp_u_Number_of_simulated_steps_i;
static PyObject *__pyx_kp_u_Number_of_simulated_steps_in_be;
static PyObject *__pyx_n_u_OX;
static PyObject *__pyx_kp_u_PLOT;
static PyObject *__pyx_kp_u_Primary_shape_unknown;
static PyObject *__pyx_n_u_RANDOM;
static PyObject *__pyx_kp_u_RANDOM_2;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_u_SEELT;
static PyObject *__pyx_n_u_SGTC;
static PyObject *__pyx_n_u_SYMMETRIC;
static PyObject *__pyx_kp_u_SYMMETRIC_2;
static PyObject *__pyx_n_u_SYMMETRY;
static PyObject *__pyx_kp_u_Secondary;
static PyObject *__pyx_kp_u_Segment_i_dust_value_4f;
static PyObject *__pyx_kp_u_Segment_id_i_nrays_i;
static PyObject *__pyx_kp_u_Shape_unknown;
static PyObject *__pyx_n_s_SimulatedTime;
static PyObject *__pyx_n_s_SimulatedTimes;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_kp_u_THE_ORDER_MUST_BE_ONE_OF_THE_FOL;
static PyObject *__pyx_kp_u_Total_number_of_rays_considered;
static PyObject *__pyx_kp_u_Unknown_layout;
static PyObject *__pyx_kp_u_Unknown_layout_2;
static PyObject *__pyx_kp_u_Unknown_primary_mirror_shape;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_u_Warning_number_of_segments_insi;
static PyObject *__pyx_kp_u__10;
static PyObject *__pyx_n_s__110;
static PyObject *__pyx_n_s__17;
static PyObject *__pyx_kp_u__76;
static PyObject *__pyx_kp_u__87;
static PyObject *__pyx_kp_u__89;
static PyObject *__pyx_kp_u__90;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_a2;
static PyObject *__pyx_kp_u_a_2;
static PyObject *__pyx_n_s_a_alp;
static PyObject *__pyx_n_s_abs;
static PyObject *__pyx_n_s_adif;
static PyObject *__pyx_n_s_adiff1;
static PyObject *__pyx_n_s_adiff2;
static PyObject *__pyx_n_u_al;
static PyObject *__pyx_n_s_alp;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_ang;
static PyObject *__pyx_n_s_ang_ref;
static PyObject *__pyx_n_s_angs;
static PyObject *__pyx_n_s_angstrom;
static PyObject *__pyx_n_u_anular;
static PyObject *__pyx_n_s_ap;
static PyObject *__pyx_n_s_apy_utils;
static PyObject *__pyx_n_s_arange;
static PyObject *__pyx_n_s_arccos;
static PyObject *__pyx_n_s_arcsin;
static PyObject *__pyx_n_s_arctan2;
static PyObject *__pyx_n_s_area;
static PyObject *__pyx_n_s_area1d;
static PyObject *__pyx_kp_u_area_2;
static PyObject *__pyx_n_s_argsort;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_astype;
static PyObject *__pyx_n_s_aux;
static PyObject *__pyx_n_s_aux_seg_chg;
static PyObject *__pyx_n_s_avail;
static PyObject *__pyx_n_s_avg_res;
static PyObject *__pyx_n_s_ax;
static PyObject *__pyx_n_s_ax1;
static PyObject *__pyx_n_s_ax2;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_azi360;
static PyObject *__pyx_n_s_azi_val;
static PyObject *__pyx_n_s_azimuth;
static PyObject *__pyx_n_s_azis;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_n_s_beam;
static PyObject *__pyx_n_s_beams;
static PyObject *__pyx_n_s_bu_ginit_dust_val;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_ca;
static PyObject *__pyx_n_s_calculate;
static PyObject *__pyx_n_u_cartesian;
static PyObject *__pyx_n_s_cdarr;
static PyObject *__pyx_n_s_cdust;
static PyObject *__pyx_n_s_ceil;
static PyObject *__pyx_n_s_check_primary;
static PyObject *__pyx_n_s_check_primary_id;
static PyObject *__pyx_n_s_check_rays;
static PyObject *__pyx_n_s_chex_syst;
static PyObject *__pyx_n_s_cinside;
static PyObject *__pyx_n_s_ckarr;
static PyObject *__pyx_n_s_clamb;
static PyObject *__pyx_n_s_cleandust;
static PyObject *__pyx_n_s_cleandustcadence;
static PyObject *__pyx_n_s_clf;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_cnarr;
static PyObject *__pyx_n_s_cnlayers;
static PyObject *__pyx_n_s_cnrays;
static PyObject *__pyx_n_s_cnt;
static PyObject *__pyx_n_s_color;
static PyObject *__pyx_n_s_colors;
static PyObject *__pyx_n_s_complementary;
static PyObject *__pyx_n_s_concatenate;
static PyObject *__pyx_n_s_condit;
static PyObject *__pyx_n_s_condit2;
static PyObject *__pyx_n_s_contour;
static PyObject *__pyx_n_s_cos;
static PyObject *__pyx_n_s_costhU;
static PyObject *__pyx_n_s_cs;
static PyObject *__pyx_n_s_cte1;
static PyObject *__pyx_n_s_cte2;
static PyObject *__pyx_n_s_ctea;
static PyObject *__pyx_n_s_cteb;
static PyObject *__pyx_n_s_ctei;
static PyObject *__pyx_n_s_ctel;
static PyObject *__pyx_n_s_cteq;
static PyObject *__pyx_kp_u_d;
static PyObject *__pyx_n_s_d11d;
static PyObject *__pyx_n_s_d1s;
static PyObject *__pyx_n_s_d21d;
static PyObject *__pyx_n_s_d2s;
static PyObject *__pyx_n_s_d_2;
static PyObject *__pyx_n_s_d_c;
static PyObject *__pyx_n_s_d_d;
static PyObject *__pyx_n_s_d_mir;
static PyObject *__pyx_n_s_d_ox;
static PyObject *__pyx_n_s_d_s;
static PyObject *__pyx_n_s_dangs;
static PyObject *__pyx_n_s_days_between_change;
static PyObject *__pyx_n_s_days_for_each_timestep;
static PyObject *__pyx_n_s_dd;
static PyObject *__pyx_n_s_degrees;
static PyObject *__pyx_n_s_deltat;
static PyObject *__pyx_kp_u_deltat_and_period_are_0_one_of_t;
static PyObject *__pyx_kp_u_deltat_and_period_are_non_0_one;
static PyObject *__pyx_n_s_df_1;
static PyObject *__pyx_n_s_df_2;
static PyObject *__pyx_n_s_diam_1;
static PyObject *__pyx_n_s_dif;
static PyObject *__pyx_n_s_diff;
static PyObject *__pyx_n_s_diff2;
static PyObject *__pyx_n_s_diffs;
static PyObject *__pyx_n_s_dim_x;
static PyObject *__pyx_n_s_dim_y;
static PyObject *__pyx_n_s_dir_cos;
static PyObject *__pyx_n_s_dir_cos_i;
static PyObject *__pyx_n_s_dir_cos_n1;
static PyObject *__pyx_n_s_dir_cos_n2;
static PyObject *__pyx_n_s_dir_cos_o1;
static PyObject *__pyx_n_s_dirt_timing;
static PyObject *__pyx_n_s_dirt_timing_locals_Dthick;
static PyObject *__pyx_n_s_dirt_timing_locals_indexes;
static PyObject *__pyx_n_s_dirt_timing_locals_materials;
static PyObject *__pyx_n_s_dirt_timing_locals_materials___i;
static PyObject *__pyx_n_s_dirt_timing_locals_thick;
static PyObject *__pyx_n_s_dirt_timing_locals_zerodux;
static PyObject *__pyx_n_s_dist;
static PyObject *__pyx_n_s_dmm;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_dot;
static PyObject *__pyx_n_s_drads;
static PyObject *__pyx_n_s_draw;
static PyObject *__pyx_n_s_dtheta;
static PyObject *__pyx_n_s_dtor;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_dum;
static PyObject *__pyx_n_s_dumgx;
static PyObject *__pyx_n_s_dumgy;
static PyObject *__pyx_n_s_dumrad;
static PyObject *__pyx_n_s_dumxg;
static PyObject *__pyx_n_s_dumyg;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_e_1;
static PyObject *__pyx_n_s_e_2;
static PyObject *__pyx_n_s_edgecolor;
static PyObject *__pyx_n_s_elem;
static PyObject *__pyx_n_s_elem_esp;
static PyObject *__pyx_n_s_elem_ox;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_u_equal;
static PyObject *__pyx_n_s_esx;
static PyObject *__pyx_n_s_esy;
static PyObject *__pyx_n_s_excess_sim_step;
static PyObject *__pyx_n_s_exit;
static PyObject *__pyx_n_s_exp;
static PyObject *__pyx_n_s_extent;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_u_f8;
static PyObject *__pyx_n_s_factor;
static PyObject *__pyx_n_s_families;
static PyObject *__pyx_n_s_family;
static PyObject *__pyx_n_s_fg;
static PyObject *__pyx_n_s_fg1;
static PyObject *__pyx_n_s_fg2;
static PyObject *__pyx_n_s_figure;
static PyObject *__pyx_n_s_first_acc_amount_dust_in_sim_ste;
static PyObject *__pyx_n_s_flatten;
static PyObject *__pyx_n_s_float64;
static PyObject *__pyx_n_s_floor;
static PyObject *__pyx_n_s_flush;
static PyObject *__pyx_kp_u_for_ray_tracing;
static PyObject *__pyx_n_s_fr_1;
static PyObject *__pyx_n_s_frac;
static PyObject *__pyx_n_s_fsort;
static PyObject *__pyx_n_s_get_conic_sols;
static PyObject *__pyx_n_s_get_direction_cosines;
static PyObject *__pyx_n_s_get_geometry;
static PyObject *__pyx_n_s_get_geometry_locals_check_primar;
static PyObject *__pyx_n_s_get_geometry_locals_check_primar_2;
static PyObject *__pyx_n_s_get_intersection;
static PyObject *__pyx_n_s_get_intersection_focus;
static PyObject *__pyx_n_s_get_mdust;
static PyObject *__pyx_n_s_get_mdust_locals_snell;
static PyObject *__pyx_n_s_get_mdust_locals_tpar;
static PyObject *__pyx_n_s_get_mdust_locals_tper;
static PyObject *__pyx_n_s_get_mirror;
static PyObject *__pyx_n_s_get_mueller_time;
static PyObject *__pyx_n_s_get_order;
static PyObject *__pyx_n_s_get_primary_geometry;
static PyObject *__pyx_n_s_get_primary_rays;
static PyObject *__pyx_n_s_get_secondary_geometry;
static PyObject *__pyx_n_s_get_times;
static PyObject *__pyx_n_s_get_times_new;
static PyObject *__pyx_n_s_ginit_dust_val;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_hangs;
static PyObject *__pyx_n_u_hexagonal;
static PyObject *__pyx_n_s_hstack;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_i2;
static PyObject *__pyx_n_u_i4;
static PyObject *__pyx_n_s_i_1;
static PyObject *__pyx_kp_u_i_2;
static PyObject *__pyx_n_s_i_22;
static PyObject *__pyx_n_s_i_2_2;
static PyObject *__pyx_kp_u_i_4f_8e;
static PyObject *__pyx_kp_u_i_i;
static PyObject *__pyx_n_s_ia;
static PyObject *__pyx_n_s_iangs;
static PyObject *__pyx_n_s_ib;
static PyObject *__pyx_n_s_ic;
static PyObject *__pyx_n_s_ideal;
static PyObject *__pyx_n_s_ideltat;
static PyObject *__pyx_n_s_iff_azi;
static PyObject *__pyx_n_s_igarea;
static PyObject *__pyx_n_s_igrad;
static PyObject *__pyx_n_s_igxs;
static PyObject *__pyx_n_s_igys;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_ind;
static PyObject *__pyx_n_s_indexes;
static PyObject *__pyx_n_s_inf;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_init_beam;
static PyObject *__pyx_n_s_init_beam_locals_beam;
static PyObject *__pyx_n_s_init_beam_locals_beam___init;
static PyObject *__pyx_n_s_init_dust_val;
static PyObject *__pyx_n_s_init_telescope;
static PyObject *__pyx_n_s_init_telescope_locals_telescope;
static PyObject *__pyx_n_s_init_telescope_locals_telescope_2;
static PyObject *__pyx_n_s_init_val;
static PyObject *__pyx_n_s_inital_amount_dust_in_sim_steps;
static PyObject *__pyx_n_s_initial_num_cln_since_last_sch;
static PyObject *__pyx_n_s_int1;
static PyObject *__pyx_n_s_int16;
static PyObject *__pyx_n_s_int3;
static PyObject *__pyx_n_s_int32;
static PyObject *__pyx_n_s_int64;
static PyObject *__pyx_n_s_interp1d;
static PyObject *__pyx_n_s_interpol;
static PyObject *__pyx_n_s_inum_esp;
static PyObject *__pyx_n_s_ion;
static PyObject *__pyx_n_s_iperiod;
static PyObject *__pyx_n_s_iprimary_shape;
static PyObject *__pyx_n_s_irad_max;
static PyObject *__pyx_n_s_irad_min;
static PyObject *__pyx_n_s_iradius;
static PyObject *__pyx_n_s_irads;
static PyObject *__pyx_n_s_isec_ext_radius;
static PyObject *__pyx_n_s_isec_int_radius;
static PyObject *__pyx_n_s_ishape;
static PyObject *__pyx_n_s_isin;
static PyObject *__pyx_n_s_isol1;
static PyObject *__pyx_n_s_isol2;
static PyObject *__pyx_n_s_isx;
static PyObject *__pyx_n_s_isy;
static PyObject *__pyx_n_s_it;
static PyObject *__pyx_n_s_it1;
static PyObject *__pyx_n_s_it2_a;
static PyObject *__pyx_n_s_it3;
static PyObject *__pyx_n_s_it_a;
static PyObject *__pyx_kp_u_it_done;
static PyObject *__pyx_n_s_it_index;
static PyObject *__pyx_n_s_it_nn2;
static PyObject *__pyx_n_s_it_nnn;
static PyObject *__pyx_n_s_it_sgm;
static PyObject *__pyx_n_s_it_sort;
static PyObject *__pyx_n_s_it_th1;
static PyObject *__pyx_n_s_it_tms;
static PyObject *__pyx_n_s_it_ttt;
static PyObject *__pyx_n_s_it_x;
static PyObject *__pyx_n_s_it_y;
static PyObject *__pyx_n_s_iteles;
static PyObject *__pyx_n_s_itf_sort;
static PyObject *__pyx_n_s_itn;
static PyObject *__pyx_n_s_itnum;
static PyObject *__pyx_n_s_ix;
static PyObject *__pyx_n_s_ix1s;
static PyObject *__pyx_n_s_ixpos;
static PyObject *__pyx_n_s_ixs;
static PyObject *__pyx_n_s_iy;
static PyObject *__pyx_n_s_iy1s;
static PyObject *__pyx_n_s_iypos;
static PyObject *__pyx_n_s_iys;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_u_k;
static PyObject *__pyx_n_s_k_1;
static PyObject *__pyx_n_s_k_2;
static PyObject *__pyx_n_s_k_g;
static PyObject *__pyx_n_s_k_out;
static PyObject *__pyx_n_s_k_ox;
static PyObject *__pyx_n_s_l;
static PyObject *__pyx_n_s_l_inc;
static PyObject *__pyx_n_s_lam;
static PyObject *__pyx_n_s_lam_in;
static PyObject *__pyx_n_s_lamb;
static PyObject *__pyx_n_s_lamb_mu;
static PyObject *__pyx_n_s_last;
static PyObject *__pyx_n_s_last_dust_val;
static PyObject *__pyx_n_s_layout;
static PyObject *__pyx_n_s_linestyle;
static PyObject *__pyx_n_s_linspace;
static PyObject *__pyx_n_s_m;
static PyObject *__pyx_n_s_m_inc;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_marker;
static PyObject *__pyx_n_s_markersize;
static PyObject *__pyx_n_s_mat;
static PyObject *__pyx_n_s_material;
static PyObject *__pyx_n_s_materials;
static PyObject *__pyx_n_s_matplotlib_pyplot;
static PyObject *__pyx_n_s_max;
static PyObject *__pyx_n_s_mean;
static PyObject *__pyx_n_s_mean_dust;
static PyObject *__pyx_n_s_meshgrid;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_min;
static PyObject *__pyx_n_s_mirror;
static PyObject *__pyx_kp_s_mirror_lib_v04_pyx;
static PyObject *__pyx_n_s_mirror_obj;
static PyObject *__pyx_n_s_mltch;
static PyObject *__pyx_n_s_mmpa_full;
static PyObject *__pyx_n_s_mmpd;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_multiplechange;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_n1;
static PyObject *__pyx_n_s_n2;
static PyObject *__pyx_n_s_n3;
static PyObject *__pyx_n_s_n_c;
static PyObject *__pyx_n_s_n_d;
static PyObject *__pyx_n_s_n_g;
static PyObject *__pyx_n_s_n_in;
static PyObject *__pyx_n_s_n_inc;
static PyObject *__pyx_n_s_n_out;
static PyObject *__pyx_n_s_n_ox;
static PyObject *__pyx_n_s_n_s;
static PyObject *__pyx_n_s_n_x;
static PyObject *__pyx_n_s_n_y;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_nan;
static PyObject *__pyx_n_s_ncols;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_ndf_2;
static PyObject *__pyx_n_s_nds;
static PyObject *__pyx_n_s_new2_get_gcurv;
static PyObject *__pyx_n_s_new2_get_gcurv_locals_get_conic;
static PyObject *__pyx_kp_u_new2_get_gcurv_requires_either_k;
static PyObject *__pyx_n_s_new_get_mdust;
static PyObject *__pyx_n_s_nn;
static PyObject *__pyx_n_u_none;
static PyObject *__pyx_n_s_norm;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_npts_seg;
static PyObject *__pyx_kp_u_nrays_i;
static PyObject *__pyx_n_s_nrc_2;
static PyObject *__pyx_n_s_nrefs;
static PyObject *__pyx_n_s_nrows;
static PyObject *__pyx_n_s_nsol;
static PyObject *__pyx_n_s_nthreads;
static PyObject *__pyx_n_s_ntot;
static PyObject *__pyx_n_s_ntot2;
static PyObject *__pyx_n_s_num;
static PyObject *__pyx_n_s_num2;
static PyObject *__pyx_n_s_num_esp;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_object;
static PyObject *__pyx_n_s_off;
static PyObject *__pyx_n_s_offset;
static PyObject *__pyx_n_s_ones;
static PyObject *__pyx_kp_u_only_GTC_or_EELT_are_available;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_osecondary;
static PyObject *__pyx_n_s_out;
static PyObject *__pyx_n_u_ox;
static PyObject *__pyx_n_s_p0;
static PyObject *__pyx_n_s_pdb;
static PyObject *__pyx_n_s_period;
static PyObject *__pyx_n_s_pi;
static PyObject *__pyx_n_s_pl;
static PyObject *__pyx_n_s_plot;
static PyObject *__pyx_n_u_polar;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_kp_u_primary;
static PyObject *__pyx_n_s_primary_2;
static PyObject *__pyx_n_s_primary_locals_primary_obj;
static PyObject *__pyx_n_s_primary_locals_primary_obj___ini;
static PyObject *__pyx_n_s_primary_locals_primary_obj___ini_2;
static PyObject *__pyx_n_s_primary_locals_primary_obj_get_o;
static PyObject *__pyx_n_s_primary_locals_primary_obj_get_t;
static PyObject *__pyx_n_s_primary_locals_primary_obj_get_t_2;
static PyObject *__pyx_n_s_primary_obj;
static PyObject *__pyx_n_s_primary_shape;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pymirrors;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_u_r;
static PyObject *__pyx_n_s_rad;
static PyObject *__pyx_n_s_rad1d;
static PyObject *__pyx_n_s_rad_max;
static PyObject *__pyx_n_s_rad_min;
static PyObject *__pyx_n_s_rad_to_azi_rat;
static PyObject *__pyx_n_s_radius;
static PyObject *__pyx_n_s_rads;
static PyObject *__pyx_n_s_rads_even;
static PyObject *__pyx_n_s_rads_odds;
static PyObject *__pyx_n_s_randn;
static PyObject *__pyx_n_s_random;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rc_1;
static PyObject *__pyx_n_s_rc_2;
static PyObject *__pyx_n_s_rdist;
static PyObject *__pyx_n_s_real;
static PyObject *__pyx_n_s_ref;
static PyObject *__pyx_n_s_ref_pos;
static PyObject *__pyx_n_s_ref_val;
static PyObject *__pyx_n_s_remove;
static PyObject *__pyx_n_s_res;
static PyObject *__pyx_n_s_res_full;
static PyObject *__pyx_n_s_resarea;
static PyObject *__pyx_n_s_resgx;
static PyObject *__pyx_n_s_resgy;
static PyObject *__pyx_n_s_reshape;
static PyObject *__pyx_n_s_resrad;
static PyObject *__pyx_n_s_result;
static PyObject *__pyx_n_s_rex;
static PyObject *__pyx_n_s_rey;
static PyObject *__pyx_n_s_rix;
static PyObject *__pyx_n_s_riy;
static PyObject *__pyx_n_s_rot;
static PyObject *__pyx_n_s_rotate_2d;
static PyObject *__pyx_n_s_round;
static PyObject *__pyx_n_s_rtd;
static PyObject *__pyx_n_s_rx;
static PyObject *__pyx_n_s_ry;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_sa;
static PyObject *__pyx_n_s_sangs;
static PyObject *__pyx_n_s_sazis;
static PyObject *__pyx_n_s_scatter;
static PyObject *__pyx_n_s_scipy_interpolate;
static PyObject *__pyx_n_s_sdx;
static PyObject *__pyx_n_s_sdy;
static PyObject *__pyx_kp_u_sec;
static PyObject *__pyx_n_s_sec_ext_radius;
static PyObject *__pyx_n_s_sec_int_radius;
static PyObject *__pyx_n_s_sec_num;
static PyObject *__pyx_n_s_sec_num_esp;
static PyObject *__pyx_n_s_secondary;
static PyObject *__pyx_n_s_secondary_locals_mirror_obj;
static PyObject *__pyx_n_s_secondary_locals_mirror_obj___in;
static PyObject *__pyx_n_s_secondary_locals_mirror_obj_get;
static PyObject *__pyx_n_s_secondary_locals_mirror_obj_get_2;
static PyObject *__pyx_n_s_secondary_shape;
static PyObject *__pyx_n_s_seed;
static PyObject *__pyx_n_s_segments;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_set_aspect;
static PyObject *__pyx_n_s_set_trace;
static PyObject *__pyx_n_s_set_xlim;
static PyObject *__pyx_n_s_set_ylim;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_show;
static PyObject *__pyx_n_s_sign;
static PyObject *__pyx_n_s_sin;
static PyObject *__pyx_n_s_six;
static PyObject *__pyx_n_s_siy;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_sn;
static PyObject *__pyx_n_s_snell;
static PyObject *__pyx_n_s_sol;
static PyObject *__pyx_n_s_sol1;
static PyObject *__pyx_n_s_sol2;
static PyObject *__pyx_n_s_sort;
static PyObject *__pyx_kp_u_sqr_meters;
static PyObject *__pyx_n_s_sqrt;
static PyObject *__pyx_n_s_srads;
static PyObject *__pyx_n_s_srs;
static PyObject *__pyx_n_s_stcnt;
static PyObject *__pyx_n_s_step;
static PyObject *__pyx_n_s_step2;
static PyObject *__pyx_n_s_stop;
static PyObject *__pyx_n_s_subplots;
static PyObject *__pyx_n_s_sum;
static PyObject *__pyx_n_s_sx;
static PyObject *__pyx_n_s_sxprim;
static PyObject *__pyx_n_s_sy;
static PyObject *__pyx_n_s_syprim;
static PyObject *__pyx_n_s_sys;
static PyObject *__pyx_n_s_t;
static PyObject *__pyx_n_s_t1;
static PyObject *__pyx_n_s_t2;
static PyObject *__pyx_kp_u_t_i_i;
static PyObject *__pyx_n_s_tarea;
static PyObject *__pyx_n_s_tau;
static PyObject *__pyx_n_s_tau_d;
static PyObject *__pyx_n_s_tau_o;
static PyObject *__pyx_n_s_teles;
static PyObject *__pyx_n_s_telescope;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_th;
static PyObject *__pyx_n_s_th1;
static PyObject *__pyx_n_s_th_1;
static PyObject *__pyx_n_s_th_m_d;
static PyObject *__pyx_n_s_th_m_o;
static PyObject *__pyx_n_s_th_max;
static PyObject *__pyx_n_s_theta1;
static PyObject *__pyx_n_s_theta2;
static PyObject *__pyx_n_s_theta3;
static PyObject *__pyx_n_s_thetaref;
static PyObject *__pyx_n_s_thetas;
static PyObject *__pyx_n_s_thick;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_n_s_time_map;
static PyObject *__pyx_n_s_tlong;
static PyObject *__pyx_n_s_tm;
static PyObject *__pyx_n_s_tm1;
static PyObject *__pyx_n_s_tm2;
static PyObject *__pyx_n_s_tm3;
static PyObject *__pyx_n_s_tm4;
static PyObject *__pyx_n_s_to_be_rolled;
static PyObject *__pyx_n_s_totn;
static PyObject *__pyx_n_s_touse;
static PyObject *__pyx_n_s_tpar;
static PyObject *__pyx_n_s_tpar1;
static PyObject *__pyx_n_s_tpar2;
static PyObject *__pyx_n_s_tper;
static PyObject *__pyx_n_s_tper1;
static PyObject *__pyx_n_s_tper2;
static PyObject *__pyx_n_s_tstep;
static PyObject *__pyx_n_s_txt;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_upper;
static PyObject *__pyx_n_s_upplim;
static PyObject *__pyx_n_s_uts;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_vec;
static PyObject *__pyx_n_s_vectors;
static PyObject *__pyx_n_s_verbose;
static PyObject *__pyx_n_s_vmax;
static PyObject *__pyx_n_s_vstack;
static PyObject *__pyx_n_s_vx_alp;
static PyObject *__pyx_n_s_vy_alp;
static PyObject *__pyx_n_s_vz_alp;
static PyObject *__pyx_n_s_where;
static PyObject *__pyx_n_s_wpos;
static PyObject *__pyx_n_s_ww;
static PyObject *__pyx_n_s_ww2;
static PyObject *__pyx_n_s_wwn;
static PyObject *__pyx_n_s_wwn2;
static PyObject *__pyx_n_s_wws;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_x1;
static PyObject *__pyx_n_s_x1d;
static PyObject *__pyx_n_s_x2;
static PyObject *__pyx_n_s_x_alp;
static PyObject *__pyx_n_s_x_alpha;
static PyObject *__pyx_n_s_x_even;
static PyObject *__pyx_n_s_x_fact_even;
static PyObject *__pyx_n_s_x_fact_odds;
static PyObject *__pyx_n_s_x_odds;
static PyObject *__pyx_n_s_x_sec;
static PyObject *__pyx_n_s_xc;
static PyObject *__pyx_n_s_xer;
static PyObject *__pyx_n_s_xf;
static PyObject *__pyx_n_s_xir;
static PyObject *__pyx_n_s_xpos;
static PyObject *__pyx_n_s_xs1;
static PyObject *__pyx_n_s_xs2;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_y1;
static PyObject *__pyx_n_s_y1d;
static PyObject *__pyx_n_s_y2;
static PyObject *__pyx_n_s_y_alp;
static PyObject *__pyx_n_s_y_alpha;
static PyObject *__pyx_n_s_y_even;
static PyObject *__pyx_n_s_y_fact_even;
static PyObject *__pyx_n_s_y_fact_odds;
static PyObject *__pyx_n_s_y_odds;
static PyObject *__pyx_n_s_y_sec;
static PyObject *__pyx_n_s_yc;
static PyObject *__pyx_n_s_yer;
static PyObject *__pyx_n_s_yir;
static PyObject *__pyx_n_s_ypos;
static PyObject *__pyx_n_s_z;
static PyObject *__pyx_n_s_z_1;
static PyObject *__pyx_n_s_z_2;
static PyObject *__pyx_n_s_zerodux;
static PyObject *__pyx_n_s_zeros;
static PyObject *__pyx_n_s_zs1;
static PyObject *__pyx_n_s_zs2;
static PyObject *__pyx_pf_9pymirrors_14init_telescope_9telescope___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_num); /* proto */
static PyObject *__pyx_pf_9pymirrors_init_telescope(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name, PyObject *__pyx_v_num); /* proto */
static PyObject *__pyx_pf_9pymirrors_9init_beam_4beam___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_alp, PyObject *__pyx_v_x_alp, PyObject *__pyx_v_y_alp); /* proto */
static PyObject *__pyx_pf_9pymirrors_2init_beam(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_x_alpha, PyObject *__pyx_v_y_alpha, PyObject *__pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_8__init___get_primary_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_inum_esp, PyObject *__pyx_v_iradius, PyObject *__pyx_v_irad_min, PyObject *__pyx_v_irad_max, PyObject *__pyx_v_iprimary_shape); /* proto */
static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_tstep, PyObject *__pyx_v_tlong, PyObject *__pyx_v_cleandust, PyObject *__pyx_v_period, PyObject *__pyx_v_deltat, PyObject *__pyx_v_mltch); /* proto */
static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_2get_order(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_order); /* proto */
static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_4get_times_new(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ideal); /* proto */
static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_6get_times(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ideal); /* proto */
static PyObject *__pyx_pf_9pymirrors_4primary(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_order, PyObject *__pyx_v_tstep, PyObject *__pyx_v_tlong, PyObject *__pyx_v_cleandust, PyObject *__pyx_v_period, PyObject *__pyx_v_deltat, CYTHON_UNUSED PyObject *__pyx_v_SimulatedTime, PyObject *__pyx_v_ideal, PyObject *__pyx_v_multiplechange); /* proto */
static PyObject *__pyx_pf_9pymirrors_6cinside(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xir, PyArrayObject *__pyx_v_yir, PyArrayObject *__pyx_v_xer, PyArrayObject *__pyx_v_yer, PyArrayObject *__pyx_v_xc, PyArrayObject *__pyx_v_yc, int __pyx_v_nthreads, int __pyx_v_vectors, int __pyx_v_complementary, CYTHON_UNUSED int __pyx_v_verbose); /* proto */
static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope); /* proto */
static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj_2get_secondary_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_inum_esp, PyObject *__pyx_v_isec_ext_radius, PyObject *__pyx_v_isec_int_radius, PyObject *__pyx_v_ishape); /* proto */
static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj_4get_mirror(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope); /* proto */
static PyObject *__pyx_pf_9pymirrors_8secondary(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope); /* proto */
static PyObject *__pyx_pf_9pymirrors_11dirt_timing_zerodux(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lamb, PyObject *__pyx_v_angstrom); /* proto */
static PyObject *__pyx_pf_9pymirrors_11dirt_timing_2indexes(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_elem, PyObject *__pyx_v_lam_in); /* proto */
static PyObject *__pyx_pf_9pymirrors_11dirt_timing_4thick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_th_max, PyObject *__pyx_v_tau, PyObject *__pyx_v_t); /* proto */
static PyObject *__pyx_pf_9pymirrors_11dirt_timing_6Dthick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_t); /* proto */
static PyObject *__pyx_pf_9pymirrors_11dirt_timing_9materials___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_n_s, PyObject *__pyx_v_n_in, PyObject *__pyx_v_n_d, PyObject *__pyx_v_n_c, PyObject *__pyx_v_n_ox, PyObject *__pyx_v_d_ox, PyObject *__pyx_v_d_c, PyObject *__pyx_v_d_s, PyObject *__pyx_v_d_d, PyObject *__pyx_v_lamb); /* proto */
static PyObject *__pyx_pf_9pymirrors_10dirt_timing(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lamb, PyObject *__pyx_v_time); /* proto */
static PyObject *__pyx_pf_9pymirrors_12get_intersection_focus(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dir_cos, PyObject *__pyx_v_x, PyObject *__pyx_v_z, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_9pymirrors_14get_intersection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dir_cos, PyObject *__pyx_v_x, PyObject *__pyx_v_z, PyObject *__pyx_v_r, PyObject *__pyx_v_k, PyObject *__pyx_v_offset); /* proto */
static PyObject *__pyx_pf_9pymirrors_16rotate_2d(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_vec, PyObject *__pyx_v_ang); /* proto */
static PyObject *__pyx_pf_9pymirrors_18get_direction_cosines(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pymirrors_14new2_get_gcurv_get_conic_sols(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ia, PyObject *__pyx_v_ib, PyObject *__pyx_v_ic); /* proto */
static PyObject *__pyx_pf_9pymirrors_20new2_get_gcurv(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_k, PyObject *__pyx_v_r, PyObject *__pyx_v_f, PyObject *__pyx_v_e, PyObject *__pyx_v_norm, PyObject *__pyx_v_ind); /* proto */
static PyObject *__pyx_pf_9pymirrors_22get_primary_rays(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_layout, PyObject *__pyx_v_telescope); /* proto */
static PyObject *__pyx_pf_9pymirrors_12get_geometry_check_primary_id(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_iteles, PyObject *__pyx_v_ixpos, PyObject *__pyx_v_iypos, PyObject *__pyx_v_igxs, PyObject *__pyx_v_igys, PyObject *__pyx_v_igrad, PyObject *__pyx_v_igarea); /* proto */
static PyObject *__pyx_pf_9pymirrors_12get_geometry_2check_primary(PyObject *__pyx_self, PyObject *__pyx_v_teles, PyObject *__pyx_v_six, PyObject *__pyx_v_siy, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_nthreads); /* proto */
static PyObject *__pyx_pf_9pymirrors_24get_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_beam, PyObject *__pyx_v_secondary, PyObject *__pyx_v_segments, PyObject *__pyx_v_nthreads, PyObject *__pyx_v_osecondary, PyObject *__pyx_v_layout, PyObject *__pyx_v_check_rays); /* proto */
static PyObject *__pyx_pf_9pymirrors_26chex_syst(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_i, PyArrayObject *__pyx_v_th_1, PyArrayObject *__pyx_v_i_22, double __pyx_v_lamb, __pyx_t_double_complex __pyx_v_n_s, __pyx_t_double_complex __pyx_v_n_c, __pyx_t_double_complex __pyx_v_n_ox, CYTHON_UNUSED __pyx_t_double_complex __pyx_v_n_d, __pyx_t_double_complex __pyx_v_n_in, double __pyx_v_d_s, double __pyx_v_d_c, double __pyx_v_d_ox, CYTHON_UNUSED double __pyx_v_d_d, int __pyx_v_nthreads); /* proto */
static PyObject *__pyx_pf_9pymirrors_9get_mdust_snell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1); /* proto */
static PyObject *__pyx_pf_9pymirrors_9get_mdust_2tpar(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1, PyObject *__pyx_v_theta2); /* proto */
static PyObject *__pyx_pf_9pymirrors_9get_mdust_4tper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1, PyObject *__pyx_v_theta2); /* proto */
static PyObject *__pyx_pf_9pymirrors_28get_mdust(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n, PyObject *__pyx_v_mean_dust); /* proto */
static PyObject *__pyx_pf_9pymirrors_30new_get_mdust(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_p0, PyObject *__pyx_v_mean_dust); /* proto */
static PyObject *__pyx_pf_9pymirrors_32get_mueller_time(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_segments, PyObject *__pyx_v_materials, PyObject *__pyx_v_cdust, CYTHON_UNUSED PyObject *__pyx_v_thetaref, PyObject *__pyx_v_nthreads); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_9pymirrors___pyx_scope_struct__get_geometry(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyList_Type_remove = {0, &__pyx_n_s_remove, 0, 0, 0};
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_1_;
static PyObject *__pyx_float_2_;
static PyObject *__pyx_float_3_;
static PyObject *__pyx_float_4_;
static PyObject *__pyx_float_6_;
static PyObject *__pyx_float_0_1;
static PyObject *__pyx_float_0_2;
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_1_1;
static PyObject *__pyx_float_1_5;
static PyObject *__pyx_float_20_;
static PyObject *__pyx_float_33_;
static PyObject *__pyx_float_5_2;
static PyObject *__pyx_float_5_4;
static PyObject *__pyx_float_59_;
static PyObject *__pyx_float_60_;
static PyObject *__pyx_float_0_11;
static PyObject *__pyx_float_0_12;
static PyObject *__pyx_float_0_e0;
static PyObject *__pyx_float_1_e0;
static PyObject *__pyx_float_1_e4;
static PyObject *__pyx_float_100_;
static PyObject *__pyx_float_120_;
static PyObject *__pyx_float_180_;
static PyObject *__pyx_float_2_e0;
static PyObject *__pyx_float_0_001;
static PyObject *__pyx_float_0_519;
static PyObject *__pyx_float_0_936;
static PyObject *__pyx_float_1_1e2;
static PyObject *__pyx_float_1_eneg_3;
static PyObject *__pyx_float_1_eneg_4;
static PyObject *__pyx_float_1_eneg_5;
static PyObject *__pyx_float_1_eneg_6;
static PyObject *__pyx_float_9_313;
static PyObject *__pyx_float_100_e0;
static PyObject *__pyx_float_31_415;
static PyObject *__pyx_float_2_44eneg_2;
static PyObject *__pyx_float_6_09eneg_2;
static PyObject *__pyx_float_8_79eneg_3;
static PyObject *__pyx_float_0_000124;
static PyObject *__pyx_float_0_000131;
static PyObject *__pyx_float_0_000138;
static PyObject *__pyx_float_0_000155;
static PyObject *__pyx_float_0_000177;
static PyObject *__pyx_float_0_000207;
static PyObject *__pyx_float_0_000248;
static PyObject *__pyx_float_0_000310;
static PyObject *__pyx_float_0_000354;
static PyObject *__pyx_float_0_000413;
static PyObject *__pyx_float_0_000496;
static PyObject *__pyx_float_0_000620;
static PyObject *__pyx_float_0_000653;
static PyObject *__pyx_float_0_000689;
static PyObject *__pyx_float_0_000729;
static PyObject *__pyx_float_0_000740;
static PyObject *__pyx_float_0_000777;
static PyObject *__pyx_float_0_000785;
static PyObject *__pyx_float_0_000793;
static PyObject *__pyx_float_0_000794;
static PyObject *__pyx_float_0_000795;
static PyObject *__pyx_float_0_000796;
static PyObject *__pyx_float_0_000798;
static PyObject *__pyx_float_0_000799;
static PyObject *__pyx_float_0_000800;
static PyObject *__pyx_float_0_000805;
static PyObject *__pyx_float_0_000816;
static PyObject *__pyx_float_0_000827;
static PyObject *__pyx_float_0_000855;
static PyObject *__pyx_float_0_000886;
static PyObject *__pyx_float_0_000954;
static PyObject *__pyx_float_0_001033;
static PyObject *__pyx_float_0_001127;
static PyObject *__pyx_float_0_001240;
static PyObject *__pyx_float_0_001378;
static PyObject *__pyx_float_0_001550;
static PyObject *__pyx_float_0_001771;
static PyObject *__pyx_float_0_002066;
static PyObject *__pyx_float_0_002480;
static PyObject *__pyx_float_0_003100;
static PyObject *__pyx_float_0_004133;
static PyObject *__pyx_float_0_004959;
static PyObject *__pyx_float_0_006199;
static PyObject *__pyx_float_0_006526;
static PyObject *__pyx_float_0_006888;
static PyObject *__pyx_float_0_007293;
static PyObject *__pyx_float_0_007749;
static PyObject *__pyx_float_0_008266;
static PyObject *__pyx_float_0_008551;
static PyObject *__pyx_float_0_008856;
static PyObject *__pyx_float_0_009184;
static PyObject *__pyx_float_0_009537;
static PyObject *__pyx_float_0_009919;
static PyObject *__pyx_float_0_010332;
static PyObject *__pyx_float_0_010781;
static PyObject *__pyx_float_0_011271;
static PyObject *__pyx_float_0_011808;
static PyObject *__pyx_float_0_012399;
static PyObject *__pyx_float_0_012652;
static PyObject *__pyx_float_0_012915;
static PyObject *__pyx_float_0_013190;
static PyObject *__pyx_float_0_013477;
static PyObject *__pyx_float_0_013776;
static PyObject *__pyx_float_0_014089;
static PyObject *__pyx_float_0_014417;
static PyObject *__pyx_float_0_014760;
static PyObject *__pyx_float_0_015120;
static PyObject *__pyx_float_0_015498;
static PyObject *__pyx_float_0_015694;
static PyObject *__pyx_float_0_015896;
static PyObject *__pyx_float_0_016102;
static PyObject *__pyx_float_0_016314;
static PyObject *__pyx_float_0_016422;
static PyObject *__pyx_float_0_016531;
static PyObject *__pyx_float_0_016642;
static PyObject *__pyx_float_0_016755;
static PyObject *__pyx_float_0_016777;
static PyObject *__pyx_float_0_016800;
static PyObject *__pyx_float_0_016823;
static PyObject *__pyx_float_0_016846;
static PyObject *__pyx_float_0_016869;
static PyObject *__pyx_float_0_016892;
static PyObject *__pyx_float_0_016915;
static PyObject *__pyx_float_0_016938;
static PyObject *__pyx_float_0_016961;
static PyObject *__pyx_float_0_016984;
static PyObject *__pyx_float_0_017008;
static PyObject *__pyx_float_0_017031;
static PyObject *__pyx_float_0_017054;
static PyObject *__pyx_float_0_017078;
static PyObject *__pyx_float_0_017101;
static PyObject *__pyx_float_0_017125;
static PyObject *__pyx_float_0_017149;
static PyObject *__pyx_float_0_017172;
static PyObject *__pyx_float_0_017196;
static PyObject *__pyx_float_0_017208;
static PyObject *__pyx_float_0_017220;
static PyObject *__pyx_float_0_017463;
static PyObject *__pyx_float_0_017712;
static PyObject *__pyx_float_0_018233;
static PyObject *__pyx_float_0_018786;
static PyObject *__pyx_float_0_019373;
static PyObject *__pyx_float_0_019998;
static PyObject *__pyx_float_0_020664;
static PyObject *__pyx_float_0_022543;
static PyObject *__pyx_float_0_024797;
static PyObject *__pyx_float_0_027552;
static PyObject *__pyx_float_0_030996;
static PyObject *__pyx_float_0_035424;
static PyObject *__pyx_float_0_035753;
static PyObject *__pyx_float_0_036437;
static PyObject *__pyx_float_0_038468;
static PyObject *__pyx_float_0_041328;
static PyObject *__pyx_float_0_044168;
static PyObject *__pyx_float_0_046304;
static PyObject *__pyx_float_0_049594;
static PyObject *__pyx_float_0_054863;
static PyObject *__pyx_float_0_057167;
static PyObject *__pyx_float_0_061993;
static PyObject *__pyx_float_0_065255;
static PyObject *__pyx_float_0_067041;
static PyObject *__pyx_float_0_068881;
static PyObject *__pyx_float_0_072505;
static PyObject *__pyx_float_0_072932;
static PyObject *__pyx_float_0_077491;
static PyObject *__pyx_float_0_078472;
static PyObject *__pyx_float_0_079478;
static PyObject *__pyx_float_0_079990;
static PyObject *__pyx_float_0_080510;
static PyObject *__pyx_float_0_081036;
static PyObject *__pyx_float_0_081569;
static PyObject *__pyx_float_0_082109;
static PyObject *__pyx_float_0_082657;
static PyObject *__pyx_float_0_083774;
static PyObject *__pyx_float_0_084921;
static PyObject *__pyx_float_0_086101;
static PyObject *__pyx_float_0_088561;
static PyObject *__pyx_float_0_094236;
static PyObject *__pyx_float_0_094517;
static PyObject *__pyx_float_0_095373;
static PyObject *__pyx_float_0_103320;
static PyObject *__pyx_float_0_112710;
static PyObject *__pyx_float_0_123990;
static PyObject *__pyx_float_0_126770;
static PyObject *__pyx_float_0_137760;
static PyObject *__pyx_float_0_1388e0;
static PyObject *__pyx_float_0_150650;
static PyObject *__pyx_float_0_154980;
static PyObject *__pyx_float_0_177120;
static PyObject *__pyx_float_0_179430;
static PyObject *__pyx_float_0_181370;
static PyObject *__pyx_float_0_205690;
static PyObject *__pyx_float_0_206600;
static PyObject *__pyx_float_0_206640;
static PyObject *__pyx_float_0_210100;
static PyObject *__pyx_float_0_213800;
static PyObject *__pyx_float_0_217500;
static PyObject *__pyx_float_0_221400;
static PyObject *__pyx_float_0_225400;
static PyObject *__pyx_float_0_229600;
static PyObject *__pyx_float_0_233440;
static PyObject *__pyx_float_0_233900;
static PyObject *__pyx_float_0_238400;
static PyObject *__pyx_float_0_243100;
static PyObject *__pyx_float_0_247970;
static PyObject *__pyx_float_0_248000;
static PyObject *__pyx_float_0_253000;
static PyObject *__pyx_float_0_258300;
static PyObject *__pyx_float_0_259360;
static PyObject *__pyx_float_0_263800;
static PyObject *__pyx_float_0_269500;
static PyObject *__pyx_float_0_275500;
static PyObject *__pyx_float_0_280030;
static PyObject *__pyx_float_0_281800;
static PyObject *__pyx_float_0_282710;
static PyObject *__pyx_float_0_288300;
static PyObject *__pyx_float_0_295200;
static PyObject *__pyx_float_0_302400;
static PyObject *__pyx_float_0_303730;
static PyObject *__pyx_float_0_309960;
static PyObject *__pyx_float_0_310000;
static PyObject *__pyx_float_0_314740;
static PyObject *__pyx_float_0_317900;
static PyObject *__pyx_float_0_326280;
static PyObject *__pyx_float_0_326300;
static PyObject *__pyx_float_0_335100;
static PyObject *__pyx_float_0_340310;
static PyObject *__pyx_float_0_344400;
static PyObject *__pyx_float_0_354200;
static PyObject *__pyx_float_0_364660;
static PyObject *__pyx_float_0_364700;
static PyObject *__pyx_float_0_371970;
static PyObject *__pyx_float_0_375700;
static PyObject *__pyx_float_0_387500;
static PyObject *__pyx_float_0_398770;
static PyObject *__pyx_float_0_399900;
static PyObject *__pyx_float_0_413280;
static PyObject *__pyx_float_0_413300;
static PyObject *__pyx_float_0_427500;
static PyObject *__pyx_float_0_442800;
static PyObject *__pyx_float_0_459200;
static PyObject *__pyx_float_0_476870;
static PyObject *__pyx_float_0_476900;
static PyObject *__pyx_float_0_491310;
static PyObject *__pyx_float_0_495900;
static PyObject *__pyx_float_0_516600;
static PyObject *__pyx_float_0_521350;
static PyObject *__pyx_float_0_539100;
static PyObject *__pyx_float_0_563570;
static PyObject *__pyx_float_0_563600;
static PyObject *__pyx_float_0_572510;
static PyObject *__pyx_float_0_590400;
static PyObject *__pyx_float_0_607900;
static PyObject *__pyx_float_0_619900;
static PyObject *__pyx_float_0_619930;
static PyObject *__pyx_float_0_632420;
static PyObject *__pyx_float_0_652250;
static PyObject *__pyx_float_0_652500;
static PyObject *__pyx_float_0_679120;
static PyObject *__pyx_float_0_688800;
static PyObject *__pyx_float_0_688810;
static PyObject *__pyx_float_0_727800;
static PyObject *__pyx_float_0_729300;
static PyObject *__pyx_float_0_729320;
static PyObject *__pyx_float_0_774900;
static PyObject *__pyx_float_0_774910;
static PyObject *__pyx_float_0_794780;
static PyObject *__pyx_float_0_815120;
static PyObject *__pyx_float_0_815690;
static PyObject *__pyx_float_0_826600;
static PyObject *__pyx_float_0_837740;
static PyObject *__pyx_float_0_873400;
static PyObject *__pyx_float_0_880130;
static PyObject *__pyx_float_0_885600;
static PyObject *__pyx_float_0_885610;
static PyObject *__pyx_float_0_911660;
static PyObject *__pyx_float_0_918020;
static PyObject *__pyx_float_0_939280;
static PyObject *__pyx_float_0_941890;
static PyObject *__pyx_float_0_953700;
static PyObject *__pyx_float_0_958340;
static PyObject *__pyx_float_0_968630;
static PyObject *__pyx_float_0_970480;
static PyObject *__pyx_float_0_979980;
static PyObject *__pyx_float_0_987610;
static PyObject *__pyx_float_0_987930;
static PyObject *__pyx_float_0_988270;
static PyObject *__pyx_float_0_988830;
static PyObject *__pyx_float_0_989090;
static PyObject *__pyx_float_0_989120;
static PyObject *__pyx_float_0_989340;
static PyObject *__pyx_float_0_989410;
static PyObject *__pyx_float_0_989660;
static PyObject *__pyx_float_0_990070;
static PyObject *__pyx_float_0_990540;
static PyObject *__pyx_float_0_991110;
static PyObject *__pyx_float_0_991230;
static PyObject *__pyx_float_0_991390;
static PyObject *__pyx_float_0_991430;
static PyObject *__pyx_float_0_992330;
static PyObject *__pyx_float_0_992650;
static PyObject *__pyx_float_0_992850;
static PyObject *__pyx_float_0_993130;
static PyObject *__pyx_float_0_994150;
static PyObject *__pyx_float_0_994570;
static PyObject *__pyx_float_0_994800;
static PyObject *__pyx_float_0_996520;
static PyObject *__pyx_float_0_996940;
static PyObject *__pyx_float_0_997910;
static PyObject *__pyx_float_0_997970;
static PyObject *__pyx_float_0_998600;
static PyObject *__pyx_float_0_998980;
static PyObject *__pyx_float_0_999240;
static PyObject *__pyx_float_0_999400;
static PyObject *__pyx_float_0_999530;
static PyObject *__pyx_float_0_999610;
static PyObject *__pyx_float_0_999680;
static PyObject *__pyx_float_0_999740;
static PyObject *__pyx_float_0_999790;
static PyObject *__pyx_float_0_999810;
static PyObject *__pyx_float_0_999830;
static PyObject *__pyx_float_0_999840;
static PyObject *__pyx_float_0_999850;
static PyObject *__pyx_float_0_999860;
static PyObject *__pyx_float_0_999870;
static PyObject *__pyx_float_0_999880;
static PyObject *__pyx_float_0_999890;
static PyObject *__pyx_float_0_999900;
static PyObject *__pyx_float_0_999910;
static PyObject *__pyx_float_0_999920;
static PyObject *__pyx_float_0_999930;
static PyObject *__pyx_float_0_999940;
static PyObject *__pyx_float_0_999950;
static PyObject *__pyx_float_0_999970;
static PyObject *__pyx_float_0_999980;
static PyObject *__pyx_float_0_999984;
static PyObject *__pyx_float_0_999989;
static PyObject *__pyx_float_0_999991;
static PyObject *__pyx_float_0_999993;
static PyObject *__pyx_float_0_999994;
static PyObject *__pyx_float_0_999995;
static PyObject *__pyx_float_1_001200;
static PyObject *__pyx_float_1_001900;
static PyObject *__pyx_float_1_004100;
static PyObject *__pyx_float_1_005800;
static PyObject *__pyx_float_1_006000;
static PyObject *__pyx_float_1_006500;
static PyObject *__pyx_float_1_007000;
static PyObject *__pyx_float_1_007400;
static PyObject *__pyx_float_1_007500;
static PyObject *__pyx_float_1_007700;
static PyObject *__pyx_float_1_007800;
static PyObject *__pyx_float_1_009500;
static PyObject *__pyx_float_1_010600;
static PyObject *__pyx_float_1_010800;
static PyObject *__pyx_float_1_011000;
static PyObject *__pyx_float_1_011800;
static PyObject *__pyx_float_1_013200;
static PyObject *__pyx_float_1_015100;
static PyObject *__pyx_float_1_015600;
static PyObject *__pyx_float_1_016100;
static PyObject *__pyx_float_1_016700;
static PyObject *__pyx_float_1_016900;
static PyObject *__pyx_float_1_017300;
static PyObject *__pyx_float_1_017400;
static PyObject *__pyx_float_1_017900;
static PyObject *__pyx_float_1_018100;
static PyObject *__pyx_float_1_019200;
static PyObject *__pyx_float_1_019400;
static PyObject *__pyx_float_1_020600;
static PyObject *__pyx_float_1_021900;
static PyObject *__pyx_float_1_022600;
static PyObject *__pyx_float_1_024600;
static PyObject *__pyx_float_1_024900;
static PyObject *__pyx_float_1_025500;
static PyObject *__pyx_float_1_025900;
static PyObject *__pyx_float_1_026200;
static PyObject *__pyx_float_1_030500;
static PyObject *__pyx_float_1_033000;
static PyObject *__pyx_float_1_033200;
static PyObject *__pyx_float_1_034900;
static PyObject *__pyx_float_1_072800;
static PyObject *__pyx_float_1_127000;
static PyObject *__pyx_float_1_127100;
static PyObject *__pyx_float_1_239900;
static PyObject *__pyx_float_1_240000;
static PyObject *__pyx_float_1_315700;
static PyObject *__pyx_float_1_328100;
static PyObject *__pyx_float_1_366000;
static PyObject *__pyx_float_1_377600;
static PyObject *__pyx_float_1_378000;
static PyObject *__pyx_float_1_389900;
static PyObject *__pyx_float_1_399800;
static PyObject *__pyx_float_1_435900;
static PyObject *__pyx_float_1_486700;
static PyObject *__pyx_float_1_549800;
static PyObject *__pyx_float_1_550000;
static PyObject *__pyx_float_1_572400;
static PyObject *__pyx_float_1_578200;
static PyObject *__pyx_float_1_678400;
static PyObject *__pyx_float_1_726000;
static PyObject *__pyx_float_1_736000;
static PyObject *__pyx_float_1_742000;
static PyObject *__pyx_float_1_746000;
static PyObject *__pyx_float_1_749000;
static PyObject *__pyx_float_1_751000;
static PyObject *__pyx_float_1_752600;
static PyObject *__pyx_float_1_754200;
static PyObject *__pyx_float_1_755800;
static PyObject *__pyx_float_1_757400;
static PyObject *__pyx_float_1_759000;
static PyObject *__pyx_float_1_760600;
static PyObject *__pyx_float_1_762200;
static PyObject *__pyx_float_1_763800;
static PyObject *__pyx_float_1_765400;
static PyObject *__pyx_float_1_767000;
static PyObject *__pyx_float_1_768568;
static PyObject *__pyx_float_1_770144;
static PyObject *__pyx_float_1_771000;
static PyObject *__pyx_float_1_771200;
static PyObject *__pyx_float_1_771736;
static PyObject *__pyx_float_1_773352;
static PyObject *__pyx_float_1_775000;
static PyObject *__pyx_float_1_776656;
static PyObject *__pyx_float_1_778368;
static PyObject *__pyx_float_1_780152;
static PyObject *__pyx_float_1_782024;
static PyObject *__pyx_float_1_784000;
static PyObject *__pyx_float_1_786192;
static PyObject *__pyx_float_1_788496;
static PyObject *__pyx_float_1_790904;
static PyObject *__pyx_float_1_793408;
static PyObject *__pyx_float_1_796000;
static PyObject *__pyx_float_1_798608;
static PyObject *__pyx_float_1_801304;
static PyObject *__pyx_float_1_804096;
static PyObject *__pyx_float_1_806992;
static PyObject *__pyx_float_1_810000;
static PyObject *__pyx_float_1_813576;
static PyObject *__pyx_float_1_817168;
static PyObject *__pyx_float_1_820672;
static PyObject *__pyx_float_1_823984;
static PyObject *__pyx_float_1_827000;
static PyObject *__pyx_float_1_829104;
static PyObject *__pyx_float_1_830100;
static PyObject *__pyx_float_1_830832;
static PyObject *__pyx_float_1_832208;
static PyObject *__pyx_float_1_833256;
static PyObject *__pyx_float_1_833552;
static PyObject *__pyx_float_1_833608;
static PyObject *__pyx_float_1_833664;
static PyObject *__pyx_float_1_833776;
static PyObject *__pyx_float_1_834000;
static PyObject *__pyx_float_1_834224;
static PyObject *__pyx_float_1_834336;
static PyObject *__pyx_float_1_834392;
static PyObject *__pyx_float_1_834448;
static PyObject *__pyx_float_1_920500;
static PyObject *__pyx_float_1_973900;
static PyObject *__pyx_float_2_066000;
static PyObject *__pyx_float_2_066400;
static PyObject *__pyx_float_2_160600;
static PyObject *__pyx_float_2_280200;
static PyObject *__pyx_float_2_473800;
static PyObject *__pyx_float_2_479700;
static PyObject *__pyx_float_2_480000;
static PyObject *__pyx_float_2_615400;
static PyObject *__pyx_float_2_694500;
static PyObject *__pyx_float_2_755200;
static PyObject *__pyx_float_2_766800;
static PyObject *__pyx_float_2_767500;
static PyObject *__pyx_float_3_099600;
static PyObject *__pyx_float_3_262800;
static PyObject *__pyx_float_3_337200;
static PyObject *__pyx_float_3_444000;
static PyObject *__pyx_float_3_646600;
static PyObject *__pyx_float_3_874500;
static PyObject *__pyx_float_3_899678;
static PyObject *__pyx_float_3_938000;
static PyObject *__pyx_float_4_132800;
static PyObject *__pyx_float_4_428000;
static PyObject *__pyx_float_4_709700;
static PyObject *__pyx_float_4_768700;
static PyObject *__pyx_float_5_073500;
static PyObject *__pyx_float_5_166000;
static PyObject *__pyx_float_5_490300;
static PyObject *__pyx_float_5_635700;
static PyObject *__pyx_float_5_956400;
static PyObject *__pyx_float_6_199300;
static PyObject *__pyx_float_6_480800;
static PyObject *__pyx_float_6_888100;
static PyObject *__pyx_float_7_079600;
static PyObject *__pyx_float_7_749100;
static PyObject *__pyx_float_7_775700;
static PyObject *__pyx_float_8_588100;
static PyObject *__pyx_float_8_856100;
static PyObject *__pyx_float_9_558000;
static PyObject *__pyx_float_10_332000;
static PyObject *__pyx_float_10_742000;
static PyObject *__pyx_float_12_195000;
static PyObject *__pyx_float_12_399000;
static PyObject *__pyx_float_13_776000;
static PyObject *__pyx_float_14_088000;
static PyObject *__pyx_float_14_739410;
static PyObject *__pyx_float_15_498000;
static PyObject *__pyx_float_16_754999;
static PyObject *__pyx_float_17_712000;
static PyObject *__pyx_float_19_075001;
static PyObject *__pyx_float_20_664000;
static PyObject *__pyx_float_20_837000;
static PyObject *__pyx_float_22_542999;
static PyObject *__pyx_float_24_797001;
static PyObject *__pyx_float_26_216000;
static PyObject *__pyx_float_27_552000;
static PyObject *__pyx_float_30_996000;
static PyObject *__pyx_float_33_333000;
static PyObject *__pyx_float_33_519001;
static PyObject *__pyx_float_38_460999;
static PyObject *__pyx_float_40_000000;
static PyObject *__pyx_float_43_775002;
static PyObject *__pyx_float_44_444000;
static PyObject *__pyx_float_50_000000;
static PyObject *__pyx_float_50_951000;
static PyObject *__pyx_float_54_412998;
static PyObject *__pyx_float_57_144001;
static PyObject *__pyx_float_58_580002;
static PyObject *__pyx_float_63_554001;
static PyObject *__pyx_float_66_666000;
static PyObject *__pyx_float_68_535004;
static PyObject *__pyx_float_75_748001;
static PyObject *__pyx_float_80_000999;
static PyObject *__pyx_float_91_955002;
static PyObject *__pyx_float_99_996002;
static PyObject *__pyx_float_1_08915181;
static PyObject *__pyx_float_102_099998;
static PyObject *__pyx_float_125_000000;
static PyObject *__pyx_float_125_139999;
static PyObject *__pyx_float_137_759995;
static PyObject *__pyx_float_140_050003;
static PyObject *__pyx_float_153_850006;
static PyObject *__pyx_float_157_300003;
static PyObject *__pyx_float_177_119995;
static PyObject *__pyx_float_177_929993;
static PyObject *__pyx_float_200_000000;
static PyObject *__pyx_float_202_630005;
static PyObject *__pyx_float_233_559998;
static PyObject *__pyx_float_274_380005;
static PyObject *__pyx_float_318_809998;
static PyObject *__pyx_float_339_619995;
static PyObject *__pyx_float_364_040009;
static PyObject *__pyx_float_397_929993;
static PyObject *__pyx_float_423_959991;
static PyObject *__pyx_float_1_3182408e0;
static PyObject *__pyx_float_1_012800e_02;
static PyObject *__pyx_float_1_07044083e0;
static PyObject *__pyx_float_1_072600eneg_06;
static PyObject *__pyx_float_1_089600e_02;
static PyObject *__pyx_float_1_096900e_01;
static PyObject *__pyx_float_1_098700eneg_02;
static PyObject *__pyx_float_1_10202242e0;
static PyObject *__pyx_float_1_102600eneg_05;
static PyObject *__pyx_float_1_104100eneg_01;
static PyObject *__pyx_float_1_155500e_00;
static PyObject *__pyx_float_1_163600eneg_05;
static PyObject *__pyx_float_1_165100eneg_02;
static PyObject *__pyx_float_1_181100eneg_04;
static PyObject *__pyx_float_1_183900e_02;
static PyObject *__pyx_float_1_224500e_01;
static PyObject *__pyx_float_1_247600eneg_02;
static PyObject *__pyx_float_1_248800eneg_07;
static PyObject *__pyx_float_1_272000eneg_07;
static PyObject *__pyx_float_1_28604141e0;
static PyObject *__pyx_float_1_294900e_02;
static PyObject *__pyx_float_1_360900e_02;
static PyObject *__pyx_float_1_364200eneg_05;
static PyObject *__pyx_float_1_372800eneg_02;
static PyObject *__pyx_float_1_377500e_00;
static PyObject *__pyx_float_1_378400e_01;
static PyObject *__pyx_float_1_442300e_02;
static PyObject *__pyx_float_1_477300eneg_02;
static PyObject *__pyx_float_1_534500e_02;
static PyObject *__pyx_float_1_543700eneg_02;
static PyObject *__pyx_float_1_562800eneg_05;
static PyObject *__pyx_float_1_565600e_01;
static PyObject *__pyx_float_1_589400eneg_02;
static PyObject *__pyx_float_1_630400eneg_02;
static PyObject *__pyx_float_1_636600e_00;
static PyObject *__pyx_float_1_648100e_02;
static PyObject *__pyx_float_1_658900eneg_01;
static PyObject *__pyx_float_1_776500eneg_02;
static PyObject *__pyx_float_1_799100e_01;
static PyObject *__pyx_float_1_817800e_02;
static PyObject *__pyx_float_1_914500eneg_02;
static PyObject *__pyx_float_1_917300eneg_07;
static PyObject *__pyx_float_1_951900e_00;
static PyObject *__pyx_float_1_956400eneg_02;
static PyObject *__pyx_float_1_999900e_02;
static PyObject *__pyx_float_2_001200eneg_02;
static PyObject *__pyx_float_2_007200eneg_02;
static PyObject *__pyx_float_2_060600eneg_02;
static PyObject *__pyx_float_2_081000e_02;
static PyObject *__pyx_float_2_098200e_01;
static PyObject *__pyx_float_2_158600eneg_05;
static PyObject *__pyx_float_2_200100eneg_04;
static PyObject *__pyx_float_2_234000eneg_02;
static PyObject *__pyx_float_2_301900e_02;
static PyObject *__pyx_float_2_342000eneg_01;
static PyObject *__pyx_float_2_342100eneg_02;
static PyObject *__pyx_float_2_349200eneg_03;
static PyObject *__pyx_float_2_356300e_00;
static PyObject *__pyx_float_2_368700eneg_05;
static PyObject *__pyx_float_2_385300eneg_02;
static PyObject *__pyx_float_2_395500eneg_02;
static PyObject *__pyx_float_2_402000eneg_02;
static PyObject *__pyx_float_2_406300eneg_02;
static PyObject *__pyx_float_2_418400eneg_02;
static PyObject *__pyx_float_2_422700eneg_02;
static PyObject *__pyx_float_2_422800eneg_02;
static PyObject *__pyx_float_2_428200eneg_02;
static PyObject *__pyx_float_2_434300e_02;
static PyObject *__pyx_float_2_434300eneg_02;
static PyObject *__pyx_float_2_437500eneg_02;
static PyObject *__pyx_float_2_441500eneg_02;
static PyObject *__pyx_float_2_447600eneg_02;
static PyObject *__pyx_float_2_449900eneg_02;
static PyObject *__pyx_float_2_450100eneg_02;
static PyObject *__pyx_float_2_475700eneg_02;
static PyObject *__pyx_float_2_477000eneg_02;
static PyObject *__pyx_float_2_483100eneg_02;
static PyObject *__pyx_float_2_484300eneg_06;
static PyObject *__pyx_float_2_492800eneg_02;
static PyObject *__pyx_float_2_500400e_01;
static PyObject *__pyx_float_2_518000eneg_02;
static PyObject *__pyx_float_2_543200eneg_02;
static PyObject *__pyx_float_2_545200eneg_02;
static PyObject *__pyx_float_2_546000eneg_02;
static PyObject *__pyx_float_2_582600e_02;
static PyObject *__pyx_float_2_601800eneg_02;
static PyObject *__pyx_float_2_682600eneg_02;
static PyObject *__pyx_float_2_753400e_02;
static PyObject *__pyx_float_2_758000e_01;
static PyObject *__pyx_float_2_768100eneg_02;
static PyObject *__pyx_float_2_823200eneg_02;
static PyObject *__pyx_float_2_895600eneg_02;
static PyObject *__pyx_float_2_902900e_00;
static PyObject *__pyx_float_2_929300eneg_01;
static PyObject *__pyx_float_2_954200e_02;
static PyObject *__pyx_float_2_992000eneg_02;
static PyObject *__pyx_float_3_073700e_01;
static PyObject *__pyx_float_3_091800eneg_02;
static PyObject *__pyx_float_3_111500eneg_05;
static PyObject *__pyx_float_3_146300eneg_07;
static PyObject *__pyx_float_3_207900eneg_05;
static PyObject *__pyx_float_3_210800e_02;
static PyObject *__pyx_float_3_218300e_01;
static PyObject *__pyx_float_3_240900eneg_02;
static PyObject *__pyx_float_3_291100eneg_05;
static PyObject *__pyx_float_3_306100eneg_02;
static PyObject *__pyx_float_3_339200eneg_02;
static PyObject *__pyx_float_3_381400e_01;
static PyObject *__pyx_float_3_414100eneg_03;
static PyObject *__pyx_float_3_440000eneg_03;
static PyObject *__pyx_float_3_476700eneg_03;
static PyObject *__pyx_float_3_487700eneg_03;
static PyObject *__pyx_float_3_495700eneg_03;
static PyObject *__pyx_float_3_510800eneg_03;
static PyObject *__pyx_float_3_524900eneg_03;
static PyObject *__pyx_float_3_531100eneg_02;
static PyObject *__pyx_float_3_542500eneg_03;
static PyObject *__pyx_float_3_543500e_02;
static PyObject *__pyx_float_3_560800e_01;
static PyObject *__pyx_float_3_588300eneg_02;
static PyObject *__pyx_float_3_621800eneg_03;
static PyObject *__pyx_float_3_673000eneg_03;
static PyObject *__pyx_float_3_708100e_00;
static PyObject *__pyx_float_3_759500e_01;
static PyObject *__pyx_float_3_849700eneg_05;
static PyObject *__pyx_float_3_892600eneg_03;
static PyObject *__pyx_float_3_911500eneg_01;
static PyObject *__pyx_float_3_916500e_00;
static PyObject *__pyx_float_3_917100e_02;
static PyObject *__pyx_float_3_982600e_01;
static PyObject *__pyx_float_4_048400eneg_06;
static PyObject *__pyx_float_4_089200e_02;
static PyObject *__pyx_float_4_109200eneg_03;
static PyObject *__pyx_float_4_113100eneg_05;
static PyObject *__pyx_float_4_116400eneg_03;
static PyObject *__pyx_float_4_186300eneg_03;
static PyObject *__pyx_float_4_236700e_01;
static PyObject *__pyx_float_4_239700eneg_03;
static PyObject *__pyx_float_4_296200e_02;
static PyObject *__pyx_float_4_350300eneg_04;
static PyObject *__pyx_float_4_369600eneg_03;
static PyObject *__pyx_float_4_395700e_00;
static PyObject *__pyx_float_4_420200eneg_02;
static PyObject *__pyx_float_4_525700e_01;
static PyObject *__pyx_float_4_585000e_02;
static PyObject *__pyx_float_4_677100eneg_05;
static PyObject *__pyx_float_4_713800eneg_05;
static PyObject *__pyx_float_4_832000eneg_02;
static PyObject *__pyx_float_4_837000e_02;
static PyObject *__pyx_float_4_859300e_01;
static PyObject *__pyx_float_4_999800eneg_05;
static PyObject *__pyx_float_5_000400eneg_03;
static PyObject *__pyx_float_5_000800e_00;
static PyObject *__pyx_float_5_251800e_01;
static PyObject *__pyx_float_5_334900eneg_02;
static PyObject *__pyx_float_5_367600e_00;
static PyObject *__pyx_float_5_510200eneg_07;
static PyObject *__pyx_float_5_669700eneg_02;
static PyObject *__pyx_float_5_715600e_01;
static PyObject *__pyx_float_5_746900eneg_03;
static PyObject *__pyx_float_5_778100e_00;
static PyObject *__pyx_float_5_797400eneg_05;
static PyObject *__pyx_float_5_908600eneg_01;
static PyObject *__pyx_float_6_048400eneg_06;
static PyObject *__pyx_float_6_140700eneg_02;
static PyObject *__pyx_float_6_163300eneg_05;
static PyObject *__pyx_float_6_190100eneg_06;
static PyObject *__pyx_float_6_241800e_00;
static PyObject *__pyx_float_6_284100e_01;
static PyObject *__pyx_float_6_481800eneg_06;
static PyObject *__pyx_float_6_619100eneg_03;
static PyObject *__pyx_float_6_783900e_00;
static PyObject *__pyx_float_6_804900eneg_06;
static PyObject *__pyx_float_6_834800eneg_02;
static PyObject *__pyx_float_6_985700e_01;
static PyObject *__pyx_float_7_140800eneg_06;
static PyObject *__pyx_float_7_184700eneg_05;
static PyObject *__pyx_float_7_299200eneg_05;
static PyObject *__pyx_float_7_405200e_00;
static PyObject *__pyx_float_7_486200eneg_05;
static PyObject *__pyx_float_7_509900eneg_03;
static PyObject *__pyx_float_7_716300eneg_01;
static PyObject *__pyx_float_7_735400e_00;
static PyObject *__pyx_float_7_827400e_01;
static PyObject *__pyx_float_7_842200eneg_06;
static PyObject *__pyx_float_7_846600eneg_03;
static PyObject *__pyx_float_7_848000eneg_05;
static PyObject *__pyx_float_7_995900eneg_02;
static PyObject *__pyx_float_8_060100e_00;
static PyObject *__pyx_float_8_113400e_00;
static PyObject *__pyx_float_8_187800e_00;
static PyObject *__pyx_float_8_241000eneg_08;
static PyObject *__pyx_float_8_257300e_00;
static PyObject *__pyx_float_8_305800e_00;
static PyObject *__pyx_float_8_356500e_00;
static PyObject *__pyx_float_8_386600e_00;
static PyObject *__pyx_float_8_471600eneg_03;
static PyObject *__pyx_float_8_491400e_00;
static PyObject *__pyx_float_8_541800eneg_05;
static PyObject *__pyx_float_8_597000e_00;
static PyObject *__pyx_float_8_819700e_01;
static PyObject *__pyx_float_8_940000eneg_06;
static PyObject *__pyx_float_9_065500e_00;
static PyObject *__pyx_float_9_312100eneg_03;
static PyObject *__pyx_float_9_422300eneg_02;
static PyObject *__pyx_float_9_493900e_00;
static PyObject *__pyx_float_9_567700eneg_01;
static PyObject *__pyx_float_9_651700eneg_03;
static PyObject *__pyx_float_9_688700eneg_04;
static PyObject *__pyx_float_9_891400e_00;
static PyObject *__pyx_float_0_096714416e0;
static PyObject *__pyx_float_1_00585997eneg_2;
static PyObject *__pyx_float_neg_2_;
static PyObject *__pyx_float_neg_9_313;
static PyObject *__pyx_float_neg_2_28962;
static PyObject *__pyx_float_neg_0_993295;
static PyObject *__pyx_float_neg_1_002250;
static PyObject *__pyx_float_neg_1_504835;
static PyObject *__pyx_float_neg_3_899678;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_24;
static PyObject *__pyx_int_36;
static PyObject *__pyx_int_360;
static PyObject *__pyx_int_451;
static PyObject *__pyx_int_798;
static PyObject *__pyx_int_1024;
static PyObject *__pyx_int_4096;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_neg_2;
static PyObject *__pyx_k__9;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_slice__24;
static PyObject *__pyx_slice__30;
static PyObject *__pyx_slice__45;
static PyObject *__pyx_slice__46;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_tuple__99;
static PyObject *__pyx_codeobj__5;
static PyObject *__pyx_codeobj__8;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__101;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__103;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__105;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__107;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__109;
static PyObject *__pyx_tuple__111;
static PyObject *__pyx_tuple__113;
static PyObject *__pyx_tuple__115;
static PyObject *__pyx_tuple__117;
static PyObject *__pyx_tuple__119;
static PyObject *__pyx_tuple__121;
static PyObject *__pyx_tuple__123;
static PyObject *__pyx_tuple__125;
static PyObject *__pyx_tuple__127;
static PyObject *__pyx_tuple__129;
static PyObject *__pyx_tuple__131;
static PyObject *__pyx_tuple__133;
static PyObject *__pyx_tuple__135;
static PyObject *__pyx_tuple__137;
static PyObject *__pyx_tuple__139;
static PyObject *__pyx_tuple__141;
static PyObject *__pyx_tuple__143;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__34;
static PyObject *__pyx_codeobj__36;
static PyObject *__pyx_codeobj__38;
static PyObject *__pyx_codeobj__40;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__60;
static PyObject *__pyx_codeobj__62;
static PyObject *__pyx_codeobj__64;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__84;
static PyObject *__pyx_codeobj__86;
static PyObject *__pyx_codeobj__92;
static PyObject *__pyx_codeobj__94;
static PyObject *__pyx_codeobj__96;
static PyObject *__pyx_codeobj__112;
static PyObject *__pyx_codeobj__114;
static PyObject *__pyx_codeobj__116;
static PyObject *__pyx_codeobj__118;
static PyObject *__pyx_codeobj__120;
static PyObject *__pyx_codeobj__122;
static PyObject *__pyx_codeobj__124;
static PyObject *__pyx_codeobj__126;
static PyObject *__pyx_codeobj__128;
static PyObject *__pyx_codeobj__130;
static PyObject *__pyx_codeobj__132;
static PyObject *__pyx_codeobj__134;
static PyObject *__pyx_codeobj__136;
static PyObject *__pyx_codeobj__138;
static PyObject *__pyx_codeobj__140;
static PyObject *__pyx_codeobj__142;
static PyObject *__pyx_codeobj__144;
/* Late includes */

/* "mirror_lib_v04.pyx":26
 *         , double* yverts, long nrays, double* xc, double* yc, long* result)
 * #
 * def init_telescope(name, num):             # <<<<<<<<<<<<<<
 * #
 *   class telescope(object):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_1init_telescope(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_1init_telescope = {"init_telescope", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_1init_telescope, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_1init_telescope(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_num = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init_telescope (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_num,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init_telescope", 1, 2, 2, 1); __PYX_ERR(0, 26, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init_telescope") < 0)) __PYX_ERR(0, 26, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = values[0];
    __pyx_v_num = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init_telescope", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 26, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.init_telescope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_init_telescope(__pyx_self, __pyx_v_name, __pyx_v_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":30
 *   class telescope(object):
 * 
 *     def __init__(self, name, num):             # <<<<<<<<<<<<<<
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_14init_telescope_9telescope_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_14init_telescope_9telescope_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_14init_telescope_9telescope_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_14init_telescope_9telescope_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_num = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_name,&__pyx_n_s_num,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 30, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 30, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 30, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_name = values[1];
    __pyx_v_num = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 30, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.init_telescope.telescope.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_14init_telescope_9telescope___init__(__pyx_self, __pyx_v_self, __pyx_v_name, __pyx_v_num);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_14init_telescope_9telescope___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_num) {
  double __pyx_v_diam_1;
  double __pyx_v_fr_1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "mirror_lib_v04.pyx":31
 * 
 *     def __init__(self, name, num):
 *       if (name.upper() == 'GTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'GTC'
 *         self.rc_1=33.
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_GTC, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":32
 *     def __init__(self, name, num):
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'             # <<<<<<<<<<<<<<
 *         self.rc_1=33.
 *         self.k_1=-1.002250
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_GTC) < 0) __PYX_ERR(0, 32, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":33
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'
 *         self.rc_1=33.             # <<<<<<<<<<<<<<
 *         self.k_1=-1.002250
 *         self.df_1=self.rc_1/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_float_33_) < 0) __PYX_ERR(0, 33, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":34
 *         self.ID = 'GTC'
 *         self.rc_1=33.
 *         self.k_1=-1.002250             # <<<<<<<<<<<<<<
 *         self.df_1=self.rc_1/2.
 *                 #distancia focal en metros
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_1_002250) < 0) __PYX_ERR(0, 34, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":35
 *         self.rc_1=33.
 *         self.k_1=-1.002250
 *         self.df_1=self.rc_1/2.             # <<<<<<<<<<<<<<
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 35, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":37
 *         self.df_1=self.rc_1/2.
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2=-3.899678
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_2) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":39
 *         self.e_1=np.sqrt(-self.k_1)
 * 
 *         self.rc_2=-3.899678             # <<<<<<<<<<<<<<
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_3_899678) < 0) __PYX_ERR(0, 39, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":40
 * 
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678             # <<<<<<<<<<<<<<
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2, __pyx_float_3_899678) < 0) __PYX_ERR(0, 40, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":41
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835             # <<<<<<<<<<<<<<
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_1_504835) < 0) __PYX_ERR(0, 41, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":42
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_2, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_3) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":43
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ndf_2, __pyx_t_2) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":44
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm=14.739410
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_2) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":46
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 *         self.dmm=14.739410             # <<<<<<<<<<<<<<
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_14_739410) < 0) __PYX_ERR(0, 46, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":48
 *         self.dmm=14.739410
 * #FOR PRIMAR MIRROR:
 *         self.num=num             # <<<<<<<<<<<<<<
 *         self.radius=0.936
 *         self.num_esp=1*36
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 48, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":49
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 *         self.radius=0.936             # <<<<<<<<<<<<<<
 *         self.num_esp=1*36
 * #AQO
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_float_0_936) < 0) __PYX_ERR(0, 49, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":50
 *         self.num=num
 *         self.radius=0.936
 *         self.num_esp=1*36             # <<<<<<<<<<<<<<
 * #AQO
 *         self.dim_x=6.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_36) < 0) __PYX_ERR(0, 50, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":52
 *         self.num_esp=1*36
 * #AQO
 *         self.dim_x=6.             # <<<<<<<<<<<<<<
 *         self.dim_y=6.
 *         self.rad_max=6.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_6_) < 0) __PYX_ERR(0, 52, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":53
 * #AQO
 *         self.dim_x=6.
 *         self.dim_y=6.             # <<<<<<<<<<<<<<
 *         self.rad_max=6.
 *         self.rad_min=0.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_6_) < 0) __PYX_ERR(0, 53, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":54
 *         self.dim_x=6.
 *         self.dim_y=6.
 *         self.rad_max=6.             # <<<<<<<<<<<<<<
 *         self.rad_min=0.2
 *         self.primary_shape='hexagonal'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_6_) < 0) __PYX_ERR(0, 54, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":55
 *         self.dim_y=6.
 *         self.rad_max=6.
 *         self.rad_min=0.2             # <<<<<<<<<<<<<<
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_0_2) < 0) __PYX_ERR(0, 55, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":56
 *         self.rad_max=6.
 *         self.rad_min=0.2
 *         self.primary_shape='hexagonal'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num = 1024
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_hexagonal) < 0) __PYX_ERR(0, 56, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":58
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num = 1024             # <<<<<<<<<<<<<<
 *         self.sec_num_esp=36
 *         self.sec_ext_radius = 0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_1024) < 0) __PYX_ERR(0, 58, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":59
 * #FOR SECONDARY MIRROR:
 *         self.sec_num = 1024
 *         self.sec_num_esp=36             # <<<<<<<<<<<<<<
 *         self.sec_ext_radius = 0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.1388e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_36) < 0) __PYX_ERR(0, 59, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":60
 *         self.sec_num = 1024
 *         self.sec_num_esp=36
 *         self.sec_ext_radius = 0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 0.1388e0
 *         self.secondary_shape='hexagonal'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_float_0_096714416e0) < 0) __PYX_ERR(0, 60, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":61
 *         self.sec_num_esp=36
 *         self.sec_ext_radius = 0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.1388e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='hexagonal'
 *         #self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_float_0_1388e0) < 0) __PYX_ERR(0, 61, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":62
 *         self.sec_ext_radius = 0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.1388e0
 *         self.secondary_shape='hexagonal'             # <<<<<<<<<<<<<<
 *         #self.sec_num_esp=1
 *         #self.sec_ext_radius = 0.65#0.590#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_hexagonal) < 0) __PYX_ERR(0, 62, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":31
 * 
 *     def __init__(self, name, num):
 *       if (name.upper() == 'GTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'GTC'
 *         self.rc_1=33.
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":68
 *         #self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SGTC'
 *         self.rc_1 = 33.
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_SGTC, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":69
 * 
 *       elif (name.upper() == 'SGTC'):
 *         self.ID = 'SGTC'             # <<<<<<<<<<<<<<
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_SGTC) < 0) __PYX_ERR(0, 69, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":70
 *       elif (name.upper() == 'SGTC'):
 *         self.ID = 'SGTC'
 *         self.rc_1 = 33.             # <<<<<<<<<<<<<<
 *         self.k_1 = -1.002250
 *         self.df_1 = self.rc_1/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_float_33_) < 0) __PYX_ERR(0, 70, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":71
 *         self.ID = 'SGTC'
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250             # <<<<<<<<<<<<<<
 *         self.df_1 = self.rc_1/2.
 *                 #distancia focal en metros
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_1_002250) < 0) __PYX_ERR(0, 71, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":72
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250
 *         self.df_1 = self.rc_1/2.             # <<<<<<<<<<<<<<
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_2, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_5) < 0) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":74
 *         self.df_1 = self.rc_1/2.
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2=-3.899678
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_5) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":76
 *         self.e_1=np.sqrt(-self.k_1)
 * 
 *         self.rc_2=-3.899678             # <<<<<<<<<<<<<<
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_3_899678) < 0) __PYX_ERR(0, 76, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":77
 * 
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678             # <<<<<<<<<<<<<<
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2, __pyx_float_3_899678) < 0) __PYX_ERR(0, 77, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":78
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835             # <<<<<<<<<<<<<<
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_1_504835) < 0) __PYX_ERR(0, 78, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":79
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 79, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_5, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_1) < 0) __PYX_ERR(0, 79, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":80
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ndf_2, __pyx_t_5) < 0) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":81
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm=14.739410
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_5) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":83
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 *         self.dmm=14.739410             # <<<<<<<<<<<<<<
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_14_739410) < 0) __PYX_ERR(0, 83, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":85
 *         self.dmm=14.739410
 * #FOR PRIMAR MIRROR:
 *         self.num=num             # <<<<<<<<<<<<<<
 *         self.radius=0.936
 *         #self.radius=5.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 85, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":86
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 *         self.radius=0.936             # <<<<<<<<<<<<<<
 *         #self.radius=5.2
 *         self.num_esp=36
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_float_0_936) < 0) __PYX_ERR(0, 86, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":88
 *         self.radius=0.936
 *         #self.radius=5.2
 *         self.num_esp=36             # <<<<<<<<<<<<<<
 *         #self.num_esp=1
 *         self.dim_x=6.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_36) < 0) __PYX_ERR(0, 88, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":90
 *         self.num_esp=36
 *         #self.num_esp=1
 *         self.dim_x=6.             # <<<<<<<<<<<<<<
 *         self.dim_y=6.
 *         self.rad_max=6.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_6_) < 0) __PYX_ERR(0, 90, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":91
 *         #self.num_esp=1
 *         self.dim_x=6.
 *         self.dim_y=6.             # <<<<<<<<<<<<<<
 *         self.rad_max=6.
 *         self.rad_min=0.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_6_) < 0) __PYX_ERR(0, 91, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":92
 *         self.dim_x=6.
 *         self.dim_y=6.
 *         self.rad_max=6.             # <<<<<<<<<<<<<<
 *         self.rad_min=0.2
 *         self.primary_shape='hexagonal'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_6_) < 0) __PYX_ERR(0, 92, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":93
 *         self.dim_y=6.
 *         self.rad_max=6.
 *         self.rad_min=0.2             # <<<<<<<<<<<<<<
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_0_2) < 0) __PYX_ERR(0, 93, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":94
 *         self.rad_max=6.
 *         self.rad_min=0.2
 *         self.primary_shape='hexagonal'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_hexagonal) < 0) __PYX_ERR(0, 94, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":96
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1             # <<<<<<<<<<<<<<
 *         self.sec_num = 1024
 *         #self.sec_ext_radius = 0.8#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 96, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":97
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 *         self.sec_num = 1024             # <<<<<<<<<<<<<<
 *         #self.sec_ext_radius = 0.8#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_ext_radius = 0.5#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_1024) < 0) __PYX_ERR(0, 97, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":99
 *         self.sec_num = 1024
 *         #self.sec_ext_radius = 0.8#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_ext_radius = 0.5#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 0.12#0.11#0.1388e0
 *         self.secondary_shape='anular'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_float_0_5) < 0) __PYX_ERR(0, 99, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":100
 *         #self.sec_ext_radius = 0.8#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_ext_radius = 0.5#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.12#0.11#0.1388e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='anular'
 * 
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_float_0_12) < 0) __PYX_ERR(0, 100, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":101
 *         self.sec_ext_radius = 0.5#0.500#19#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.12#0.11#0.1388e0
 *         self.secondary_shape='anular'             # <<<<<<<<<<<<<<
 * 
 *       elif (name.upper() == 'AGTC'):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 101, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":68
 *         #self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SGTC'
 *         self.rc_1 = 33.
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":103
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'AGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AGTC'
 *         self.rc_1 = 33.
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_5, __pyx_n_u_AGTC, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":104
 * 
 *       elif (name.upper() == 'AGTC'):
 *         self.ID = 'AGTC'             # <<<<<<<<<<<<<<
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_AGTC) < 0) __PYX_ERR(0, 104, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":105
 *       elif (name.upper() == 'AGTC'):
 *         self.ID = 'AGTC'
 *         self.rc_1 = 33.             # <<<<<<<<<<<<<<
 *         self.k_1 = -1.002250
 *         self.df_1 = self.rc_1/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_float_33_) < 0) __PYX_ERR(0, 105, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":106
 *         self.ID = 'AGTC'
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250             # <<<<<<<<<<<<<<
 *         self.df_1 = self.rc_1/2.
 *                 #distancia focal en metros
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_1_002250) < 0) __PYX_ERR(0, 106, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":107
 *         self.rc_1 = 33.
 *         self.k_1 = -1.002250
 *         self.df_1 = self.rc_1/2.             # <<<<<<<<<<<<<<
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_5, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_3) < 0) __PYX_ERR(0, 107, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":109
 *         self.df_1 = self.rc_1/2.
 *                 #distancia focal en metros
 *         self.e_1=np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2=-3.899678
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_3) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":111
 *         self.e_1=np.sqrt(-self.k_1)
 * 
 *         self.rc_2=-3.899678             # <<<<<<<<<<<<<<
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_3_899678) < 0) __PYX_ERR(0, 111, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":112
 * 
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678             # <<<<<<<<<<<<<<
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2, __pyx_float_3_899678) < 0) __PYX_ERR(0, 112, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":113
 *         self.rc_2=-3.899678
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835             # <<<<<<<<<<<<<<
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_1_504835) < 0) __PYX_ERR(0, 113, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":114
 *         self.nrc_2=3.899678
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_2) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":115
 *         self.k_2=-1.504835
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_2, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ndf_2, __pyx_t_3) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":116
 *         self.df_2=self.rc_2/2.
 *         self.ndf_2=self.nrc_2/2.
 *         self.e_2=np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm=14.739410
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_3) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":118
 *         self.e_2=np.sqrt(-self.k_2)
 * 
 *         self.dmm=14.739410             # <<<<<<<<<<<<<<
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_14_739410) < 0) __PYX_ERR(0, 118, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":120
 *         self.dmm=14.739410
 * #FOR PRIMAR MIRROR:
 *         self.num=num             # <<<<<<<<<<<<<<
 *         self.radius=0.936
 *         #self.radius=5.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 120, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":121
 * #FOR PRIMAR MIRROR:
 *         self.num=num
 *         self.radius=0.936             # <<<<<<<<<<<<<<
 *         #self.radius=5.2
 *         self.num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_float_0_936) < 0) __PYX_ERR(0, 121, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":123
 *         self.radius=0.936
 *         #self.radius=5.2
 *         self.num_esp=1             # <<<<<<<<<<<<<<
 *         #self.num_esp=1
 *         self.dim_x=6.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 123, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":125
 *         self.num_esp=1
 *         #self.num_esp=1
 *         self.dim_x=6.             # <<<<<<<<<<<<<<
 *         self.dim_y=6.
 *         self.rad_max=5.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_6_) < 0) __PYX_ERR(0, 125, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":126
 *         #self.num_esp=1
 *         self.dim_x=6.
 *         self.dim_y=6.             # <<<<<<<<<<<<<<
 *         self.rad_max=5.2
 *         self.rad_min=0.2
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_6_) < 0) __PYX_ERR(0, 126, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":127
 *         self.dim_x=6.
 *         self.dim_y=6.
 *         self.rad_max=5.2             # <<<<<<<<<<<<<<
 *         self.rad_min=0.2
 *         self.primary_shape='anular'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_5_2) < 0) __PYX_ERR(0, 127, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":128
 *         self.dim_y=6.
 *         self.rad_max=5.2
 *         self.rad_min=0.2             # <<<<<<<<<<<<<<
 *         self.primary_shape='anular'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_0_2) < 0) __PYX_ERR(0, 128, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":129
 *         self.rad_max=5.2
 *         self.rad_min=0.2
 *         self.primary_shape='anular'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 129, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":131
 *         self.primary_shape='anular'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1             # <<<<<<<<<<<<<<
 *         self.sec_num = 1024
 *         self.sec_ext_radius = 0.519#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 131, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":132
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 *         self.sec_num = 1024             # <<<<<<<<<<<<<<
 *         self.sec_ext_radius = 0.519#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.11#0.1388e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_1024) < 0) __PYX_ERR(0, 132, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":133
 *         self.sec_num_esp=1
 *         self.sec_num = 1024
 *         self.sec_ext_radius = 0.519#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 0.11#0.1388e0
 *         self.secondary_shape='anular'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_float_0_519) < 0) __PYX_ERR(0, 133, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":134
 *         self.sec_num = 1024
 *         self.sec_ext_radius = 0.519#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.11#0.1388e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='anular'
 * 
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_float_0_11) < 0) __PYX_ERR(0, 134, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":135
 *         self.sec_ext_radius = 0.519#0.096714416e0                    #(1172.6/(14.e0*np.cos(30.e0/1.8e2*np.pi)))*1.e-3
 *         self.sec_int_radius = 0.11#0.1388e0
 *         self.secondary_shape='anular'             # <<<<<<<<<<<<<<
 * 
 *       elif (name.upper() == 'EELT'):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 135, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":103
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'AGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AGTC'
 *         self.rc_1 = 33.
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":137
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'EELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'EELT'
 *         diam_1 = 39.3
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_EELT, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":138
 * 
 *       elif (name.upper() == 'EELT'):
 *         self.ID = 'EELT'             # <<<<<<<<<<<<<<
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_EELT) < 0) __PYX_ERR(0, 138, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":139
 *       elif (name.upper() == 'EELT'):
 *         self.ID = 'EELT'
 *         diam_1 = 39.3             # <<<<<<<<<<<<<<
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2. # 69 m comes from page 94 in eelt construction proposal
 */
    __pyx_v_diam_1 = 39.3;

    /* "mirror_lib_v04.pyx":140
 *         self.ID = 'EELT'
 *         diam_1 = 39.3
 *         fr_1 = 0.88             # <<<<<<<<<<<<<<
 *         self.rc_1 = diam_1*fr_1*2. # 69 m comes from page 94 in eelt construction proposal
 *         self.k_1 = -0.993295
 */
    __pyx_v_fr_1 = 0.88;

    /* "mirror_lib_v04.pyx":141
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2. # 69 m comes from page 94 in eelt construction proposal             # <<<<<<<<<<<<<<
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 */
    __pyx_t_3 = PyFloat_FromDouble(((__pyx_v_diam_1 * __pyx_v_fr_1) * 2.)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_t_3) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":142
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2. # 69 m comes from page 94 in eelt construction proposal
 *         self.k_1 = -0.993295             # <<<<<<<<<<<<<<
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_0_993295) < 0) __PYX_ERR(0, 142, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":143
 *         self.rc_1 = diam_1*fr_1*2. # 69 m comes from page 94 in eelt construction proposal
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros             # <<<<<<<<<<<<<<
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_1) < 0) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":144
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2 = -9.313
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_1) < 0) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":146
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 *         self.rc_2 = -9.313             # <<<<<<<<<<<<<<
 *         self.nrc_2 = 9.313
 *         self.k_2 = -2.28962
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_9_313) < 0) __PYX_ERR(0, 146, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":147
 * 
 *         self.rc_2 = -9.313
 *         self.nrc_2 = 9.313             # <<<<<<<<<<<<<<
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2, __pyx_float_9_313) < 0) __PYX_ERR(0, 147, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":148
 *         self.rc_2 = -9.313
 *         self.nrc_2 = 9.313
 *         self.k_2 = -2.28962             # <<<<<<<<<<<<<<
 *         self.df_2 = self.rc_2/2.
 *         self.ndf_2 = self.nrc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_2_28962) < 0) __PYX_ERR(0, 148, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":149
 *         self.nrc_2 = 9.313
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.ndf_2 = self.nrc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_5) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":150
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 *         self.ndf_2 = self.nrc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nrc_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_5, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ndf_2, __pyx_t_1) < 0) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":151
 *         self.df_2 = self.rc_2/2.
 *         self.ndf_2 = self.nrc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm = 31.415
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_1) < 0) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":153
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 *         self.dmm = 31.415             # <<<<<<<<<<<<<<
 *                   #37.742d0/(42.d0*0.93)*39.3d0*0.88d0
 *         #self.dmm = 37.742/(42.0*0.93)*39.3*0.88
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_31_415) < 0) __PYX_ERR(0, 153, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":157
 *         #self.dmm = 37.742/(42.0*0.93)*39.3*0.88
 * #FOR PRIMAR MIRROR:
 *         self.num = num             # <<<<<<<<<<<<<<
 *         self.radius = 1.45/2.
 *         self.num_esp = 798
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 157, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":158
 * #FOR PRIMAR MIRROR:
 *         self.num = num
 *         self.radius = 1.45/2.             # <<<<<<<<<<<<<<
 *         self.num_esp = 798
 *         self.dim_x = 20.
 */
    __pyx_t_1 = PyFloat_FromDouble((1.45 / 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_t_1) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":159
 *         self.num = num
 *         self.radius = 1.45/2.
 *         self.num_esp = 798             # <<<<<<<<<<<<<<
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_798) < 0) __PYX_ERR(0, 159, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":160
 *         self.radius = 1.45/2.
 *         self.num_esp = 798
 *         self.dim_x = 20.             # <<<<<<<<<<<<<<
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_20_) < 0) __PYX_ERR(0, 160, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":161
 *         self.num_esp = 798
 *         self.dim_x = 20.
 *         self.dim_y = 20.             # <<<<<<<<<<<<<<
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_20_) < 0) __PYX_ERR(0, 161, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":162
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 *         self.rad_max = 20.             # <<<<<<<<<<<<<<
 *         self.rad_min = 5.4
 *         self.primary_shape='hexagonal'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_20_) < 0) __PYX_ERR(0, 162, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":163
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 *         self.rad_min = 5.4             # <<<<<<<<<<<<<<
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_5_4) < 0) __PYX_ERR(0, 163, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":164
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 *         self.primary_shape='hexagonal'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_hexagonal) < 0) __PYX_ERR(0, 164, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":166
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1             # <<<<<<<<<<<<<<
 *         self.sec_num = 451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 166, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":167
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 *         self.sec_num = 451             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.#4.250e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_451) < 0) __PYX_ERR(0, 167, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":168
 *         self.sec_num_esp=1
 *         self.sec_num = 451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0             # <<<<<<<<<<<<<<
 *         self.sec_ext_radius = 4.0906/2.#4.250e0/2.e0
 *         self.secondary_shape='anular'
 */
    __pyx_t_1 = PyFloat_FromDouble((1.091 / 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_t_1) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":169
 *         self.sec_num = 451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.#4.250e0/2.e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='anular'
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble((4.0906 / 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_t_1) < 0) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":170
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.#4.250e0/2.e0
 *         self.secondary_shape='anular'             # <<<<<<<<<<<<<<
 * 
 *       elif (name.upper() == 'SEELT'):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 170, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":137
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'EELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'EELT'
 *         diam_1 = 39.3
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":172
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SEELT'
 *         diam_1 = 39.3
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_SEELT, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":173
 * 
 *       elif (name.upper() == 'SEELT'):
 *         self.ID = 'SEELT'             # <<<<<<<<<<<<<<
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_SEELT) < 0) __PYX_ERR(0, 173, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":174
 *       elif (name.upper() == 'SEELT'):
 *         self.ID = 'SEELT'
 *         diam_1 = 39.3             # <<<<<<<<<<<<<<
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.
 */
    __pyx_v_diam_1 = 39.3;

    /* "mirror_lib_v04.pyx":175
 *         self.ID = 'SEELT'
 *         diam_1 = 39.3
 *         fr_1 = 0.88             # <<<<<<<<<<<<<<
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295
 */
    __pyx_v_fr_1 = 0.88;

    /* "mirror_lib_v04.pyx":176
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.             # <<<<<<<<<<<<<<
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 */
    __pyx_t_1 = PyFloat_FromDouble(((__pyx_v_diam_1 * __pyx_v_fr_1) * 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_t_1) < 0) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":177
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295             # <<<<<<<<<<<<<<
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_0_993295) < 0) __PYX_ERR(0, 177, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":178
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros             # <<<<<<<<<<<<<<
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_2) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":179
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2 = -9.313
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_2) < 0) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":181
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 *         self.rc_2 = -9.313             # <<<<<<<<<<<<<<
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_9_313) < 0) __PYX_ERR(0, 181, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":182
 * 
 *         self.rc_2 = -9.313
 *         self.k_2 = -2.28962             # <<<<<<<<<<<<<<
 *         self.df_2 = self.rc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_2_28962) < 0) __PYX_ERR(0, 182, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":183
 *         self.rc_2 = -9.313
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_2, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_3) < 0) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":184
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm = 31.415
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_3) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":186
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 *         self.dmm = 31.415             # <<<<<<<<<<<<<<
 *                   #37.742d0/(42.d0*0.93)*39.3d0*0.88d0
 * #FOR PRIMAR MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_31_415) < 0) __PYX_ERR(0, 186, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":189
 *                   #37.742d0/(42.d0*0.93)*39.3d0*0.88d0
 * #FOR PRIMAR MIRROR:
 *         self.num = num             # <<<<<<<<<<<<<<
 *         self.radius = 1.45/2.
 *         self.num_esp = 798
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 189, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":190
 * #FOR PRIMAR MIRROR:
 *         self.num = num
 *         self.radius = 1.45/2.             # <<<<<<<<<<<<<<
 *         self.num_esp = 798
 *         self.dim_x = 20.
 */
    __pyx_t_3 = PyFloat_FromDouble((1.45 / 2.)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_t_3) < 0) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":191
 *         self.num = num
 *         self.radius = 1.45/2.
 *         self.num_esp = 798             # <<<<<<<<<<<<<<
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_798) < 0) __PYX_ERR(0, 191, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":192
 *         self.radius = 1.45/2.
 *         self.num_esp = 798
 *         self.dim_x = 20.             # <<<<<<<<<<<<<<
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_20_) < 0) __PYX_ERR(0, 192, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":193
 *         self.num_esp = 798
 *         self.dim_x = 20.
 *         self.dim_y = 20.             # <<<<<<<<<<<<<<
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_20_) < 0) __PYX_ERR(0, 193, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":194
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 *         self.rad_max = 20.             # <<<<<<<<<<<<<<
 *         self.rad_min = 5.4
 *         self.primary_shape='hexagonal'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_20_) < 0) __PYX_ERR(0, 194, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":195
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 *         self.rad_min = 5.4             # <<<<<<<<<<<<<<
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_5_4) < 0) __PYX_ERR(0, 195, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":196
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 *         self.primary_shape='hexagonal'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_hexagonal) < 0) __PYX_ERR(0, 196, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":198
 *         self.primary_shape='hexagonal'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1             # <<<<<<<<<<<<<<
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 198, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":199
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 *         self.sec_num = 4096#451             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_4096) < 0) __PYX_ERR(0, 199, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":200
 *         self.sec_num_esp=1
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0             # <<<<<<<<<<<<<<
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 *         self.secondary_shape='anular'
 */
    __pyx_t_3 = PyFloat_FromDouble((1.091 / 2.)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_t_3) < 0) __PYX_ERR(0, 200, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":201
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='anular'
 * 
 */
    __pyx_t_3 = PyFloat_FromDouble(((4.0906 / 2.) - 0.1)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_t_3) < 0) __PYX_ERR(0, 201, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":202
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 *         self.secondary_shape='anular'             # <<<<<<<<<<<<<<
 * 
 *       elif (name.upper() == 'AEELT'):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 202, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":172
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SEELT'
 *         diam_1 = 39.3
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":204
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'AEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AEELT'
 *         diam_1 = 39.3
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_AEELT, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":205
 * 
 *       elif (name.upper() == 'AEELT'):
 *         self.ID = 'AEELT'             # <<<<<<<<<<<<<<
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_AEELT) < 0) __PYX_ERR(0, 205, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":206
 *       elif (name.upper() == 'AEELT'):
 *         self.ID = 'AEELT'
 *         diam_1 = 39.3             # <<<<<<<<<<<<<<
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.
 */
    __pyx_v_diam_1 = 39.3;

    /* "mirror_lib_v04.pyx":207
 *         self.ID = 'AEELT'
 *         diam_1 = 39.3
 *         fr_1 = 0.88             # <<<<<<<<<<<<<<
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295
 */
    __pyx_v_fr_1 = 0.88;

    /* "mirror_lib_v04.pyx":208
 *         diam_1 = 39.3
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.             # <<<<<<<<<<<<<<
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 */
    __pyx_t_3 = PyFloat_FromDouble(((__pyx_v_diam_1 * __pyx_v_fr_1) * 2.)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_1, __pyx_t_3) < 0) __PYX_ERR(0, 208, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":209
 *         fr_1 = 0.88
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295             # <<<<<<<<<<<<<<
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_1, __pyx_float_neg_0_993295) < 0) __PYX_ERR(0, 209, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":210
 *         self.rc_1 = diam_1*fr_1*2.
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros             # <<<<<<<<<<<<<<
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_1, __pyx_t_5) < 0) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":211
 *         self.k_1 = -0.993295
 *         self.df_1 = self.rc_1/2.                  #distancia focal en metros
 *         self.e_1 = np.sqrt(-self.k_1)             # <<<<<<<<<<<<<<
 * 
 *         self.rc_2 = -9.313
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_1, __pyx_t_5) < 0) __PYX_ERR(0, 211, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":213
 *         self.e_1 = np.sqrt(-self.k_1)
 * 
 *         self.rc_2 = -9.313             # <<<<<<<<<<<<<<
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rc_2, __pyx_float_neg_9_313) < 0) __PYX_ERR(0, 213, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":214
 * 
 *         self.rc_2 = -9.313
 *         self.k_2 = -2.28962             # <<<<<<<<<<<<<<
 *         self.df_2 = self.rc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_k_2, __pyx_float_neg_2_28962) < 0) __PYX_ERR(0, 214, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":215
 *         self.rc_2 = -9.313
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.             # <<<<<<<<<<<<<<
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rc_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_5, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_df_2, __pyx_t_1) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":216
 *         self.k_2 = -2.28962
 *         self.df_2 = self.rc_2/2.
 *         self.e_2 = np.sqrt(-self.k_2)             # <<<<<<<<<<<<<<
 * 
 *         self.dmm = 31.415
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_k_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_e_2, __pyx_t_1) < 0) __PYX_ERR(0, 216, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":218
 *         self.e_2 = np.sqrt(-self.k_2)
 * 
 *         self.dmm = 31.415             # <<<<<<<<<<<<<<
 *                   #37.742d0/(42.d0*0.93)*39.3d0*0.88d0
 * #FOR PRIMAR MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dmm, __pyx_float_31_415) < 0) __PYX_ERR(0, 218, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":221
 *                   #37.742d0/(42.d0*0.93)*39.3d0*0.88d0
 * #FOR PRIMAR MIRROR:
 *         self.num = num             # <<<<<<<<<<<<<<
 *         self.radius = diam_1/2. #1.45/2.
 *         self.num_esp = 1 #798
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num, __pyx_v_num) < 0) __PYX_ERR(0, 221, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":222
 * #FOR PRIMAR MIRROR:
 *         self.num = num
 *         self.radius = diam_1/2. #1.45/2.             # <<<<<<<<<<<<<<
 *         self.num_esp = 1 #798
 *         self.dim_x = 20.
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_diam_1 / 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_radius, __pyx_t_1) < 0) __PYX_ERR(0, 222, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":223
 *         self.num = num
 *         self.radius = diam_1/2. #1.45/2.
 *         self.num_esp = 1 #798             # <<<<<<<<<<<<<<
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 223, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":224
 *         self.radius = diam_1/2. #1.45/2.
 *         self.num_esp = 1 #798
 *         self.dim_x = 20.             # <<<<<<<<<<<<<<
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_x, __pyx_float_20_) < 0) __PYX_ERR(0, 224, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":225
 *         self.num_esp = 1 #798
 *         self.dim_x = 20.
 *         self.dim_y = 20.             # <<<<<<<<<<<<<<
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dim_y, __pyx_float_20_) < 0) __PYX_ERR(0, 225, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":226
 *         self.dim_x = 20.
 *         self.dim_y = 20.
 *         self.rad_max = 20.             # <<<<<<<<<<<<<<
 *         self.rad_min = 5.4
 *         self.primary_shape='anular'
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_max, __pyx_float_20_) < 0) __PYX_ERR(0, 226, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":227
 *         self.dim_y = 20.
 *         self.rad_max = 20.
 *         self.rad_min = 5.4             # <<<<<<<<<<<<<<
 *         self.primary_shape='anular'
 * #FOR SECONDARY MIRROR:
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad_min, __pyx_float_5_4) < 0) __PYX_ERR(0, 227, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":228
 *         self.rad_max = 20.
 *         self.rad_min = 5.4
 *         self.primary_shape='anular'             # <<<<<<<<<<<<<<
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_primary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 228, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":230
 *         self.primary_shape='anular'
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1             # <<<<<<<<<<<<<<
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num_esp, __pyx_int_1) < 0) __PYX_ERR(0, 230, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":231
 * #FOR SECONDARY MIRROR:
 *         self.sec_num_esp=1
 *         self.sec_num = 4096#451             # <<<<<<<<<<<<<<
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_num, __pyx_int_4096) < 0) __PYX_ERR(0, 231, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":232
 *         self.sec_num_esp=1
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0             # <<<<<<<<<<<<<<
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 *         self.secondary_shape='anular'
 */
    __pyx_t_1 = PyFloat_FromDouble((1.091 / 2.)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_int_radius, __pyx_t_1) < 0) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":233
 *         self.sec_num = 4096#451
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0             # <<<<<<<<<<<<<<
 *         self.secondary_shape='anular'
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble(((4.0906 / 2.) - 0.1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sec_ext_radius, __pyx_t_1) < 0) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":234
 *         self.sec_int_radius = 1.091/2.#0.891e0/2.e0
 *         self.sec_ext_radius = 4.0906/2.-0.1#4.250e0/2.e0
 *         self.secondary_shape='anular'             # <<<<<<<<<<<<<<
 * 
 *       elif (name.upper() == 'SYMMETRY'):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_secondary_shape, __pyx_n_u_anular) < 0) __PYX_ERR(0, 234, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":204
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'AEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AEELT'
 *         diam_1 = 39.3
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":236
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SYMMETRY'):             # <<<<<<<<<<<<<<
 *         print('Not yet')
 *       else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_SYMMETRY, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":237
 * 
 *       elif (name.upper() == 'SYMMETRY'):
 *         print('Not yet')             # <<<<<<<<<<<<<<
 *       else:
 *         print("only GTC or EELT are available!")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":236
 *         self.secondary_shape='anular'
 * 
 *       elif (name.upper() == 'SYMMETRY'):             # <<<<<<<<<<<<<<
 *         print('Not yet')
 *       else:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":239
 *         print('Not yet')
 *       else:
 *         print("only GTC or EELT are available!")             # <<<<<<<<<<<<<<
 *         sys.exit()
 * 
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":240
 *       else:
 *         print("only GTC or EELT are available!")
 *         sys.exit()             # <<<<<<<<<<<<<<
 * 
 *       return
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_exit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":242
 *         sys.exit()
 * 
 *       return             # <<<<<<<<<<<<<<
 * 
 *   avail = ['EELT', 'GTC', 'SGTC', 'AGTC', 'SEELT', 'AEELT']
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":30
 *   class telescope(object):
 * 
 *     def __init__(self, name, num):             # <<<<<<<<<<<<<<
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.init_telescope.telescope.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":26
 *         , double* yverts, long nrays, double* xc, double* yc, long* result)
 * #
 * def init_telescope(name, num):             # <<<<<<<<<<<<<<
 * #
 *   class telescope(object):
 */

static PyObject *__pyx_pf_9pymirrors_init_telescope(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name, PyObject *__pyx_v_num) {
  PyObject *__pyx_v_telescope = NULL;
  PyObject *__pyx_v_avail = NULL;
  PyObject *__pyx_v_teles = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("init_telescope", 0);

  /* "mirror_lib_v04.pyx":28
 * def init_telescope(name, num):
 * #
 *   class telescope(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, name, num):
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__3, __pyx_n_s_telescope, __pyx_n_s_init_telescope_locals_telescope, (PyObject *) NULL, __pyx_n_s_pymirrors, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mirror_lib_v04.pyx":30
 *   class telescope(object):
 * 
 *     def __init__(self, name, num):             # <<<<<<<<<<<<<<
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_14init_telescope_9telescope_1__init__, 0, __pyx_n_s_init_telescope_locals_telescope_2, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__5)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":28
 * def init_telescope(name, num):
 * #
 *   class telescope(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, name, num):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_telescope, __pyx_tuple__3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_telescope = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":244
 *       return
 * 
 *   avail = ['EELT', 'GTC', 'SGTC', 'AGTC', 'SEELT', 'AEELT']             # <<<<<<<<<<<<<<
 * 
 *   if (not (name.upper() in avail)):
 */
  __pyx_t_1 = PyList_New(6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_u_EELT);
  __Pyx_GIVEREF(__pyx_n_u_EELT);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_u_EELT);
  __Pyx_INCREF(__pyx_n_u_GTC);
  __Pyx_GIVEREF(__pyx_n_u_GTC);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_u_GTC);
  __Pyx_INCREF(__pyx_n_u_SGTC);
  __Pyx_GIVEREF(__pyx_n_u_SGTC);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_u_SGTC);
  __Pyx_INCREF(__pyx_n_u_AGTC);
  __Pyx_GIVEREF(__pyx_n_u_AGTC);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_u_AGTC);
  __Pyx_INCREF(__pyx_n_u_SEELT);
  __Pyx_GIVEREF(__pyx_n_u_SEELT);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_u_SEELT);
  __Pyx_INCREF(__pyx_n_u_AEELT);
  __Pyx_GIVEREF(__pyx_n_u_AEELT);
  PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_u_AEELT);
  __pyx_v_avail = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":246
 *   avail = ['EELT', 'GTC', 'SGTC', 'AGTC', 'SEELT', 'AEELT']
 * 
 *   if (not (name.upper() in avail)):             # <<<<<<<<<<<<<<
 *     print("only GTC or EELT are available!")
 *     sys.exit()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_v_avail, Py_NE)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":247
 * 
 *   if (not (name.upper() in avail)):
 *     print("only GTC or EELT are available!")             # <<<<<<<<<<<<<<
 *     sys.exit()
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":248
 *   if (not (name.upper() in avail)):
 *     print("only GTC or EELT are available!")
 *     sys.exit()             # <<<<<<<<<<<<<<
 * 
 *   teles = telescope(name, num)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_exit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":246
 *   avail = ['EELT', 'GTC', 'SGTC', 'AGTC', 'SEELT', 'AEELT']
 * 
 *   if (not (name.upper() in avail)):             # <<<<<<<<<<<<<<
 *     print("only GTC or EELT are available!")
 *     sys.exit()
 */
  }

  /* "mirror_lib_v04.pyx":250
 *     sys.exit()
 * 
 *   teles = telescope(name, num)             # <<<<<<<<<<<<<<
 * 
 *   return teles
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_name);
  __Pyx_GIVEREF(__pyx_v_name);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_name);
  __Pyx_INCREF(__pyx_v_num);
  __Pyx_GIVEREF(__pyx_v_num);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_num);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_v_telescope, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_teles = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":252
 *   teles = telescope(name, num)
 * 
 *   return teles             # <<<<<<<<<<<<<<
 * #
 * #                                                                              #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_teles);
  __pyx_r = __pyx_v_teles;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":26
 *         , double* yverts, long nrays, double* xc, double* yc, long* result)
 * #
 * def init_telescope(name, num):             # <<<<<<<<<<<<<<
 * #
 *   class telescope(object):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.init_telescope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_telescope);
  __Pyx_XDECREF(__pyx_v_avail);
  __Pyx_XDECREF(__pyx_v_teles);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":256
 * #                                                                              #
 * #
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):             # <<<<<<<<<<<<<<
 * 
 *   class beam(object):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_3init_beam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_3init_beam = {"init_beam", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_3init_beam, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_3init_beam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_alpha = 0;
  PyObject *__pyx_v_x_alpha = 0;
  PyObject *__pyx_v_y_alpha = 0;
  PyObject *__pyx_v_degrees = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init_beam (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_x_alpha,&__pyx_n_s_y_alpha,&__pyx_n_s_degrees,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init_beam", 0, 3, 4, 1); __PYX_ERR(0, 256, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init_beam", 0, 3, 4, 2); __PYX_ERR(0, 256, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_degrees);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init_beam") < 0)) __PYX_ERR(0, 256, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_alpha = values[0];
    __pyx_v_x_alpha = values[1];
    __pyx_v_y_alpha = values[2];
    __pyx_v_degrees = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init_beam", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 256, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.init_beam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_2init_beam(__pyx_self, __pyx_v_alpha, __pyx_v_x_alpha, __pyx_v_y_alpha, __pyx_v_degrees);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":260
 *   class beam(object):
 * 
 *     def __init__(self, alp, x_alp, y_alp):             # <<<<<<<<<<<<<<
 * 
 *       self.alp = alp * 1.
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9init_beam_4beam_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9init_beam_4beam_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9init_beam_4beam_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9init_beam_4beam_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_alp = 0;
  PyObject *__pyx_v_x_alp = 0;
  PyObject *__pyx_v_y_alp = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_alp,&__pyx_n_s_x_alp,&__pyx_n_s_y_alp,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(0, 260, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x_alp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(0, 260, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y_alp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(0, 260, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 260, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_alp = values[1];
    __pyx_v_x_alp = values[2];
    __pyx_v_y_alp = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 260, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.init_beam.beam.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9init_beam_4beam___init__(__pyx_self, __pyx_v_self, __pyx_v_alp, __pyx_v_x_alp, __pyx_v_y_alp);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9init_beam_4beam___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_alp, PyObject *__pyx_v_x_alp, PyObject *__pyx_v_y_alp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "mirror_lib_v04.pyx":262
 *     def __init__(self, alp, x_alp, y_alp):
 * 
 *       self.alp = alp * 1.             # <<<<<<<<<<<<<<
 *       self.a_alp = np.arctan2(y_alp,x_alp)
 *       self.vx_alp = np.sin(alp)*np.cos(self.a_alp)
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_alp, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_alp, __pyx_t_1) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":263
 * 
 *       self.alp = alp * 1.
 *       self.a_alp = np.arctan2(y_alp,x_alp)             # <<<<<<<<<<<<<<
 *       self.vx_alp = np.sin(alp)*np.cos(self.a_alp)
 *       self.vy_alp = np.sin(alp)*np.sin(self.a_alp)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_y_alp, __pyx_v_x_alp};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_y_alp, __pyx_v_x_alp};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_INCREF(__pyx_v_y_alp);
    __Pyx_GIVEREF(__pyx_v_y_alp);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_y_alp);
    __Pyx_INCREF(__pyx_v_x_alp);
    __Pyx_GIVEREF(__pyx_v_x_alp);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_x_alp);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_a_alp, __pyx_t_1) < 0) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":264
 *       self.alp = alp * 1.
 *       self.a_alp = np.arctan2(y_alp,x_alp)
 *       self.vx_alp = np.sin(alp)*np.cos(self.a_alp)             # <<<<<<<<<<<<<<
 *       self.vy_alp = np.sin(alp)*np.sin(self.a_alp)
 *       self.vz_alp = np.cos(alp)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_v_alp) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_alp);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_a_alp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vx_alp, __pyx_t_2) < 0) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":265
 *       self.a_alp = np.arctan2(y_alp,x_alp)
 *       self.vx_alp = np.sin(alp)*np.cos(self.a_alp)
 *       self.vy_alp = np.sin(alp)*np.sin(self.a_alp)             # <<<<<<<<<<<<<<
 *       self.vz_alp = np.cos(alp)
 *       self.l_inc = - self.vx_alp * 1.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v_alp) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_alp);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_a_alp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vy_alp, __pyx_t_3) < 0) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":266
 *       self.vx_alp = np.sin(alp)*np.cos(self.a_alp)
 *       self.vy_alp = np.sin(alp)*np.sin(self.a_alp)
 *       self.vz_alp = np.cos(alp)             # <<<<<<<<<<<<<<
 *       self.l_inc = - self.vx_alp * 1.
 *       self.m_inc = - self.vy_alp * 1.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_alp) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_alp);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vz_alp, __pyx_t_3) < 0) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":267
 *       self.vy_alp = np.sin(alp)*np.sin(self.a_alp)
 *       self.vz_alp = np.cos(alp)
 *       self.l_inc = - self.vx_alp * 1.             # <<<<<<<<<<<<<<
 *       self.m_inc = - self.vy_alp * 1.
 *       self.n_inc = - self.vz_alp * 1.
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vx_alp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_l_inc, __pyx_t_3) < 0) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":268
 *       self.vz_alp = np.cos(alp)
 *       self.l_inc = - self.vx_alp * 1.
 *       self.m_inc = - self.vy_alp * 1.             # <<<<<<<<<<<<<<
 *       self.n_inc = - self.vz_alp * 1.
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vy_alp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_m_inc, __pyx_t_3) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":269
 *       self.l_inc = - self.vx_alp * 1.
 *       self.m_inc = - self.vy_alp * 1.
 *       self.n_inc = - self.vz_alp * 1.             # <<<<<<<<<<<<<<
 * 
 *       return
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vz_alp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_inc, __pyx_t_3) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":271
 *       self.n_inc = - self.vz_alp * 1.
 * 
 *       return             # <<<<<<<<<<<<<<
 * 
 *   if (degrees != False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":260
 *   class beam(object):
 * 
 *     def __init__(self, alp, x_alp, y_alp):             # <<<<<<<<<<<<<<
 * 
 *       self.alp = alp * 1.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pymirrors.init_beam.beam.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":256
 * #                                                                              #
 * #
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):             # <<<<<<<<<<<<<<
 * 
 *   class beam(object):
 */

static PyObject *__pyx_pf_9pymirrors_2init_beam(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_x_alpha, PyObject *__pyx_v_y_alpha, PyObject *__pyx_v_degrees) {
  PyObject *__pyx_v_beam = NULL;
  PyObject *__pyx_v_alp = NULL;
  PyObject *__pyx_v_beams = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("init_beam", 0);

  /* "mirror_lib_v04.pyx":258
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):
 * 
 *   class beam(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, alp, x_alp, y_alp):
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__6, __pyx_n_s_beam, __pyx_n_s_init_beam_locals_beam, (PyObject *) NULL, __pyx_n_s_pymirrors, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mirror_lib_v04.pyx":260
 *   class beam(object):
 * 
 *     def __init__(self, alp, x_alp, y_alp):             # <<<<<<<<<<<<<<
 * 
 *       self.alp = alp * 1.
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9init_beam_4beam_1__init__, 0, __pyx_n_s_init_beam_locals_beam___init, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__8)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":258
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):
 * 
 *   class beam(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, alp, x_alp, y_alp):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_beam, __pyx_tuple__6, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_beam = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":273
 *       return
 * 
 *   if (degrees != False):             # <<<<<<<<<<<<<<
 *     alp = alpha / 180. * np.pi
 *   else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_degrees, Py_False, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 273, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":274
 * 
 *   if (degrees != False):
 *     alp = alpha / 180. * np.pi             # <<<<<<<<<<<<<<
 *   else:
 *     alp = alpha * 1.
 */
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_alpha, __pyx_float_180_, 180., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_alp = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":273
 *       return
 * 
 *   if (degrees != False):             # <<<<<<<<<<<<<<
 *     alp = alpha / 180. * np.pi
 *   else:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":276
 *     alp = alpha / 180. * np.pi
 *   else:
 *     alp = alpha * 1.             # <<<<<<<<<<<<<<
 * 
 *   beams = beam(alp,x_alpha,y_alpha)
 */
  /*else*/ {
    __pyx_t_2 = PyNumber_Multiply(__pyx_v_alpha, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_alp = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":278
 *     alp = alpha * 1.
 * 
 *   beams = beam(alp,x_alpha,y_alpha)             # <<<<<<<<<<<<<<
 * 
 *   return beams
 */
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_alp);
  __Pyx_GIVEREF(__pyx_v_alp);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_alp);
  __Pyx_INCREF(__pyx_v_x_alpha);
  __Pyx_GIVEREF(__pyx_v_x_alpha);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_x_alpha);
  __Pyx_INCREF(__pyx_v_y_alpha);
  __Pyx_GIVEREF(__pyx_v_y_alpha);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_y_alpha);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_v_beam, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_beams = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":280
 *   beams = beam(alp,x_alpha,y_alpha)
 * 
 *   return beams             # <<<<<<<<<<<<<<
 * #
 * #                                                                              #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_beams);
  __pyx_r = __pyx_v_beams;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":256
 * #                                                                              #
 * #
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):             # <<<<<<<<<<<<<<
 * 
 *   class beam(object):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.init_beam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_beam);
  __Pyx_XDECREF(__pyx_v_alp);
  __Pyx_XDECREF(__pyx_v_beams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_5primary(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_5primary = {"primary", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_5primary, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_5primary(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_v_order = 0;
  PyObject *__pyx_v_tstep = 0;
  PyObject *__pyx_v_tlong = 0;
  PyObject *__pyx_v_cleandust = 0;
  PyObject *__pyx_v_period = 0;
  PyObject *__pyx_v_deltat = 0;
  CYTHON_UNUSED PyObject *__pyx_v_SimulatedTime = 0;
  PyObject *__pyx_v_ideal = 0;
  PyObject *__pyx_v_multiplechange = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("primary (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_telescope,&__pyx_n_s_order,&__pyx_n_s_tstep,&__pyx_n_s_tlong,&__pyx_n_s_cleandust,&__pyx_n_s_period,&__pyx_n_s_deltat,&__pyx_n_s_SimulatedTime,&__pyx_n_s_ideal,&__pyx_n_s_multiplechange,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    values[5] = ((PyObject *)__pyx_float_0_);
    values[6] = ((PyObject *)__pyx_float_0_);
    values[7] = __pyx_k__9;

    /* "mirror_lib_v04.pyx":286
 * def primary(telescope, order, tstep, tlong, cleandust \
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):             # <<<<<<<<<<<<<<
 * #
 *   class primary_obj(object):
 */
    values[8] = ((PyObject *)Py_False);
    values[9] = ((PyObject *)__pyx_int_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("primary", 0, 5, 10, 1); __PYX_ERR(0, 284, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tstep)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("primary", 0, 5, 10, 2); __PYX_ERR(0, 284, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tlong)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("primary", 0, 5, 10, 3); __PYX_ERR(0, 284, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cleandust)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("primary", 0, 5, 10, 4); __PYX_ERR(0, 284, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_period);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_deltat);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_SimulatedTime);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ideal);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_multiplechange);
          if (value) { values[9] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "primary") < 0)) __PYX_ERR(0, 284, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_telescope = values[0];
    __pyx_v_order = values[1];
    __pyx_v_tstep = values[2];
    __pyx_v_tlong = values[3];
    __pyx_v_cleandust = values[4];
    __pyx_v_period = values[5];
    __pyx_v_deltat = values[6];
    __pyx_v_SimulatedTime = values[7];
    __pyx_v_ideal = values[8];
    __pyx_v_multiplechange = values[9];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("primary", 0, 5, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 284, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_4primary(__pyx_self, __pyx_v_telescope, __pyx_v_order, __pyx_v_tstep, __pyx_v_tlong, __pyx_v_cleandust, __pyx_v_period, __pyx_v_deltat, __pyx_v_SimulatedTime, __pyx_v_ideal, __pyx_v_multiplechange);

  /* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":290
 *   class primary_obj(object):
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \             # <<<<<<<<<<<<<<
 *             , mltch):
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7primary_11primary_obj_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7primary_11primary_obj_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_v_tstep = 0;
  PyObject *__pyx_v_tlong = 0;
  PyObject *__pyx_v_cleandust = 0;
  PyObject *__pyx_v_period = 0;
  PyObject *__pyx_v_deltat = 0;
  PyObject *__pyx_v_mltch = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_telescope,&__pyx_n_s_tstep,&__pyx_n_s_tlong,&__pyx_n_s_cleandust,&__pyx_n_s_period,&__pyx_n_s_deltat,&__pyx_n_s_mltch,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 1); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tstep)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 2); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tlong)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 3); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cleandust)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 4); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_period)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 5); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_deltat)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 6); __PYX_ERR(0, 290, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mltch)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, 7); __PYX_ERR(0, 290, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 290, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_self = values[0];
    __pyx_v_telescope = values[1];
    __pyx_v_tstep = values[2];
    __pyx_v_tlong = values[3];
    __pyx_v_cleandust = values[4];
    __pyx_v_period = values[5];
    __pyx_v_deltat = values[6];
    __pyx_v_mltch = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 290, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_7primary_11primary_obj___init__(__pyx_self, __pyx_v_self, __pyx_v_telescope, __pyx_v_tstep, __pyx_v_tlong, __pyx_v_cleandust, __pyx_v_period, __pyx_v_deltat, __pyx_v_mltch);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":293
 *             , mltch):
 * 
 *         def get_primary_geometry(inum_esp \             # <<<<<<<<<<<<<<
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_8__init___1get_primary_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7primary_11primary_obj_8__init___1get_primary_geometry = {"get_primary_geometry", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7primary_11primary_obj_8__init___1get_primary_geometry, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_8__init___1get_primary_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_inum_esp = 0;
  PyObject *__pyx_v_iradius = 0;
  PyObject *__pyx_v_irad_min = 0;
  PyObject *__pyx_v_irad_max = 0;
  PyObject *__pyx_v_iprimary_shape = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_primary_geometry (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_inum_esp,&__pyx_n_s_iradius,&__pyx_n_s_irad_min,&__pyx_n_s_irad_max,&__pyx_n_s_iprimary_shape,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inum_esp)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_iradius)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_primary_geometry", 1, 5, 5, 1); __PYX_ERR(0, 293, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_irad_min)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_primary_geometry", 1, 5, 5, 2); __PYX_ERR(0, 293, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_irad_max)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_primary_geometry", 1, 5, 5, 3); __PYX_ERR(0, 293, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_iprimary_shape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_primary_geometry", 1, 5, 5, 4); __PYX_ERR(0, 293, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_primary_geometry") < 0)) __PYX_ERR(0, 293, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_inum_esp = values[0];
    __pyx_v_iradius = values[1];
    __pyx_v_irad_min = values[2];
    __pyx_v_irad_max = values[3];
    __pyx_v_iprimary_shape = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_primary_geometry", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 293, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.__init__.get_primary_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_7primary_11primary_obj_8__init___get_primary_geometry(__pyx_self, __pyx_v_inum_esp, __pyx_v_iradius, __pyx_v_irad_min, __pyx_v_irad_max, __pyx_v_iprimary_shape);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_8__init___get_primary_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_inum_esp, PyObject *__pyx_v_iradius, PyObject *__pyx_v_irad_min, PyObject *__pyx_v_irad_max, PyObject *__pyx_v_iprimary_shape) {
  PyObject *__pyx_v_ones = NULL;
  PyObject *__pyx_v_x_odds = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_y_odds = NULL;
  PyObject *__pyx_v_x_even = NULL;
  PyObject *__pyx_v_y_even = NULL;
  PyObject *__pyx_v_ap = NULL;
  PyObject *__pyx_v_x_fact_odds = NULL;
  PyObject *__pyx_v_y_fact_odds = NULL;
  PyObject *__pyx_v_x_fact_even = NULL;
  PyObject *__pyx_v_y_fact_even = NULL;
  PyObject *__pyx_v_rads_odds = NULL;
  PyObject *__pyx_v_rads_even = NULL;
  PyObject *__pyx_v_sort = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_rads = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_area = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_v_family = NULL;
  long __pyx_v_condit;
  PyObject *__pyx_v_num = NULL;
  PyObject *__pyx_v_step = NULL;
  PyObject *__pyx_v_Nperfamily = NULL;
  PyObject *__pyx_v_diff = NULL;
  PyObject *__pyx_v_wwn = NULL;
  PyObject *__pyx_v_azis = NULL;
  PyObject *__pyx_v_wws = NULL;
  long __pyx_v_condit2;
  PyObject *__pyx_v_num2 = NULL;
  PyObject *__pyx_v_stcnt = NULL;
  PyObject *__pyx_v_step2 = NULL;
  PyObject *__pyx_v_diff2 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_wwn2 = NULL;
  PyObject *__pyx_v_ww2 = NULL;
  PyObject *__pyx_v_it_nnn = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  Py_ssize_t __pyx_t_9;
  Py_UCS4 __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  __Pyx_RefNannySetupContext("get_primary_geometry", 0);
  __Pyx_INCREF(__pyx_v_inum_esp);

  /* "mirror_lib_v04.pyx":296
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 *           if (iprimary_shape=='hexagonal'):             # <<<<<<<<<<<<<<
 *             #
 *             #GET AN INITIAL ESTIMATION OF MIRRORS:
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_iprimary_shape, __pyx_n_u_hexagonal, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 296, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "mirror_lib_v04.pyx":300
 *             #GET AN INITIAL ESTIMATION OF MIRRORS:
 *             #
 *               ones = np.ones(inum_esp, dtype=np.float64)             # <<<<<<<<<<<<<<
 *               x_odds = np.arange(inum_esp) - inum_esp / 2
 *               _, x_odds = np.meshgrid(ones, x_odds)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_inum_esp);
    __Pyx_GIVEREF(__pyx_v_inum_esp);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_inum_esp);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_float64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_ones = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":301
 *             #
 *               ones = np.ones(inum_esp, dtype=np.float64)
 *               x_odds = np.arange(inum_esp) - inum_esp / 2             # <<<<<<<<<<<<<<
 *               _, x_odds = np.meshgrid(ones, x_odds)
 *               y_odds = np.arange(inum_esp) - inum_esp / 2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_arange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_x_odds = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":302
 *               ones = np.ones(inum_esp, dtype=np.float64)
 *               x_odds = np.arange(inum_esp) - inum_esp / 2
 *               _, x_odds = np.meshgrid(ones, x_odds)             # <<<<<<<<<<<<<<
 *               y_odds = np.arange(inum_esp) - inum_esp / 2
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ones, __pyx_v_x_odds};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ones, __pyx_v_x_odds};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_2) {
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
      }
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, __pyx_v_ones);
      __Pyx_INCREF(__pyx_v_x_odds);
      __Pyx_GIVEREF(__pyx_v_x_odds);
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_v_x_odds);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 302, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_2)->tp_iternext;
      index = 0; __pyx_t_6 = __pyx_t_8(__pyx_t_2); if (unlikely(!__pyx_t_6)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 1; __pyx_t_3 = __pyx_t_8(__pyx_t_2); if (unlikely(!__pyx_t_3)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_2), 2) < 0) __PYX_ERR(0, 302, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L5_unpacking_done;
      __pyx_L4_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 302, __pyx_L1_error)
      __pyx_L5_unpacking_done:;
    }
    __pyx_v__ = __pyx_t_6;
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":303
 *               x_odds = np.arange(inum_esp) - inum_esp / 2
 *               _, x_odds = np.meshgrid(ones, x_odds)
 *               y_odds = np.arange(inum_esp) - inum_esp / 2             # <<<<<<<<<<<<<<
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 *               x_even = (np.arange(inum_esp) - \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_y_odds = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":304
 *               _, x_odds = np.meshgrid(ones, x_odds)
 *               y_odds = np.arange(inum_esp) - inum_esp / 2
 *               y_odds, _ = np.meshgrid(y_odds, ones)             # <<<<<<<<<<<<<<
 *               x_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_y_odds, __pyx_v_ones};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_y_odds, __pyx_v_ones};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_v_y_odds);
      __Pyx_GIVEREF(__pyx_v_y_odds);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_v_y_odds);
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_v_ones);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
      PyObject* sequence = __pyx_t_3;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 304, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_6 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_8(__pyx_t_6); if (unlikely(!__pyx_t_4)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_2 = __pyx_t_8(__pyx_t_6); if (unlikely(!__pyx_t_2)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_6), 2) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 304, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":305
 *               y_odds = np.arange(inum_esp) - inum_esp / 2
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 *               x_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *                   inum_esp / 2) * 2. - 1.
 *               _, x_even = np.meshgrid(ones, x_even)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_arange); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":306
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 *               x_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \
 */
    __pyx_t_4 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "mirror_lib_v04.pyx":305
 *               y_odds = np.arange(inum_esp) - inum_esp / 2
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 *               x_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *                   inum_esp / 2) * 2. - 1.
 *               _, x_even = np.meshgrid(ones, x_even)
 */
    __pyx_t_2 = PyNumber_Subtract(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":306
 *               y_odds, _ = np.meshgrid(y_odds, ones)
 *               x_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \
 */
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_float_2_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyFloat_SubtractObjC(__pyx_t_4, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_x_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":307
 *               x_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.
 *               _, x_even = np.meshgrid(ones, x_even)             # <<<<<<<<<<<<<<
 *               y_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ones, __pyx_v_x_even};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ones, __pyx_v_x_even};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_7, __pyx_v_ones);
      __Pyx_INCREF(__pyx_v_x_even);
      __Pyx_GIVEREF(__pyx_v_x_even);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_7, __pyx_v_x_even);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 307, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L8_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_4); if (unlikely(!__pyx_t_6)) goto __pyx_L8_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_4), 2) < 0) __PYX_ERR(0, 307, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L9_unpacking_done;
      __pyx_L8_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 307, __pyx_L1_error)
      __pyx_L9_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":308
 *                   inum_esp / 2) * 2. - 1.
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *                   inum_esp / 2) * 2. - 1.
 *               y_even, _ = np.meshgrid(y_even, ones)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_arange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":309
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *               y_even, _ = np.meshgrid(y_even, ones)
 *             #
 */
    __pyx_t_3 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "mirror_lib_v04.pyx":308
 *                   inum_esp / 2) * 2. - 1.
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *                   inum_esp / 2) * 2. - 1.
 *               y_even, _ = np.meshgrid(y_even, ones)
 */
    __pyx_t_6 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":309
 *               _, x_even = np.meshgrid(ones, x_even)
 *               y_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *               y_even, _ = np.meshgrid(y_even, ones)
 *             #
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_6, __pyx_float_2_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyFloat_SubtractObjC(__pyx_t_3, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_y_even = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":310
 *               y_even = (np.arange(inum_esp) - \
 *                   inum_esp / 2) * 2. - 1.
 *               y_even, _ = np.meshgrid(y_even, ones)             # <<<<<<<<<<<<<<
 *             #
 *             #GIVE SPATIAL DIMENSIONS TO THE POSITIONS:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_y_even, __pyx_v_ones};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_y_even, __pyx_v_ones};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_v_y_even);
      __Pyx_GIVEREF(__pyx_v_y_even);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_7, __pyx_v_y_even);
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_7, __pyx_v_ones);
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
      PyObject* sequence = __pyx_t_6;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 310, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
      index = 0; __pyx_t_2 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L10_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      index = 1; __pyx_t_4 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_4)) goto __pyx_L10_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_3), 2) < 0) __PYX_ERR(0, 310, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L11_unpacking_done;
      __pyx_L10_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 310, __pyx_L1_error)
      __pyx_L11_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":314
 *             #GIVE SPATIAL DIMENSIONS TO THE POSITIONS:
 *             #
 *               ap = iradius * np.cos(30./180.*np.pi)             # <<<<<<<<<<<<<<
 *               x_fact_odds = 3. * iradius
 *               y_fact_odds = 2. * ap
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_cos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble((30. / 180.)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_pi); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_v_iradius, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_ap = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":315
 *             #
 *               ap = iradius * np.cos(30./180.*np.pi)
 *               x_fact_odds = 3. * iradius             # <<<<<<<<<<<<<<
 *               y_fact_odds = 2. * ap
 *               x_fact_even = 1.5 * iradius
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_3_, __pyx_v_iradius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_x_fact_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":316
 *               ap = iradius * np.cos(30./180.*np.pi)
 *               x_fact_odds = 3. * iradius
 *               y_fact_odds = 2. * ap             # <<<<<<<<<<<<<<
 *               x_fact_even = 1.5 * iradius
 *               y_fact_even = 1.* ap
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_ap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_y_fact_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":317
 *               x_fact_odds = 3. * iradius
 *               y_fact_odds = 2. * ap
 *               x_fact_even = 1.5 * iradius             # <<<<<<<<<<<<<<
 *               y_fact_even = 1.* ap
 *               x_odds = x_odds.flatten() * x_fact_odds
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_5, __pyx_v_iradius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_x_fact_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":318
 *               y_fact_odds = 2. * ap
 *               x_fact_even = 1.5 * iradius
 *               y_fact_even = 1.* ap             # <<<<<<<<<<<<<<
 *               x_odds = x_odds.flatten() * x_fact_odds
 *               y_odds = y_odds.flatten() * y_fact_odds
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_, __pyx_v_ap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_y_fact_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":319
 *               x_fact_even = 1.5 * iradius
 *               y_fact_even = 1.* ap
 *               x_odds = x_odds.flatten() * x_fact_odds             # <<<<<<<<<<<<<<
 *               y_odds = y_odds.flatten() * y_fact_odds
 *               x_even = x_even.flatten() * x_fact_even
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x_odds, __pyx_n_s_flatten); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_v_x_fact_odds); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":320
 *               y_fact_even = 1.* ap
 *               x_odds = x_odds.flatten() * x_fact_odds
 *               y_odds = y_odds.flatten() * y_fact_odds             # <<<<<<<<<<<<<<
 *               x_even = x_even.flatten() * x_fact_even
 *               y_even = y_even.flatten() * y_fact_even
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_y_odds, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_6, __pyx_v_y_fact_odds); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":321
 *               x_odds = x_odds.flatten() * x_fact_odds
 *               y_odds = y_odds.flatten() * y_fact_odds
 *               x_even = x_even.flatten() * x_fact_even             # <<<<<<<<<<<<<<
 *               y_even = y_even.flatten() * y_fact_even
 *             #
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x_even, __pyx_n_s_flatten); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_v_x_fact_even); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":322
 *               y_odds = y_odds.flatten() * y_fact_odds
 *               x_even = x_even.flatten() * x_fact_even
 *               y_even = y_even.flatten() * y_fact_even             # <<<<<<<<<<<<<<
 *             #
 *               rads_odds = np.sqrt(x_odds**2 + y_odds**2)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_y_even, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_6, __pyx_v_y_fact_even); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":324
 *               y_even = y_even.flatten() * y_fact_even
 *             #
 *               rads_odds = np.sqrt(x_odds**2 + y_odds**2)             # <<<<<<<<<<<<<<
 *               rads_even = np.sqrt(x_even**2 + y_even**2)
 *             #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Power(__pyx_v_x_odds, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyNumber_Power(__pyx_v_y_odds, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rads_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":325
 *             #
 *               rads_odds = np.sqrt(x_odds**2 + y_odds**2)
 *               rads_even = np.sqrt(x_even**2 + y_even**2)             # <<<<<<<<<<<<<<
 *             #
 *             #SORT:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Power(__pyx_v_x_even, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Power(__pyx_v_y_even, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_rads_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":329
 *             #SORT:
 *             #
 *               sort = np.argsort(rads_odds)             # <<<<<<<<<<<<<<
 *               x_odds = x_odds[sort]
 *               y_odds = y_odds[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_argsort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_v_rads_odds) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_rads_odds);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_sort = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":330
 *             #
 *               sort = np.argsort(rads_odds)
 *               x_odds = x_odds[sort]             # <<<<<<<<<<<<<<
 *               y_odds = y_odds[sort]
 *               rads_odds = rads_odds[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":331
 *               sort = np.argsort(rads_odds)
 *               x_odds = x_odds[sort]
 *               y_odds = y_odds[sort]             # <<<<<<<<<<<<<<
 *               rads_odds = rads_odds[sort]
 *               sort = np.argsort(rads_even)
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":332
 *               x_odds = x_odds[sort]
 *               y_odds = y_odds[sort]
 *               rads_odds = rads_odds[sort]             # <<<<<<<<<<<<<<
 *               sort = np.argsort(rads_even)
 *               x_even = x_even[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":333
 *               y_odds = y_odds[sort]
 *               rads_odds = rads_odds[sort]
 *               sort = np.argsort(rads_even)             # <<<<<<<<<<<<<<
 *               x_even = x_even[sort]
 *               y_even = y_even[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_v_rads_even) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_rads_even);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":334
 *               rads_odds = rads_odds[sort]
 *               sort = np.argsort(rads_even)
 *               x_even = x_even[sort]             # <<<<<<<<<<<<<<
 *               y_even = y_even[sort]
 *               rads_even = rads_even[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":335
 *               sort = np.argsort(rads_even)
 *               x_even = x_even[sort]
 *               y_even = y_even[sort]             # <<<<<<<<<<<<<<
 *               rads_even = rads_even[sort]
 *             #
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":336
 *               x_even = x_even[sort]
 *               y_even = y_even[sort]
 *               rads_even = rads_even[sort]             # <<<<<<<<<<<<<<
 *             #
 *             #CONCATENATE:
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":340
 *             #CONCATENATE:
 *             #
 *               x = np.concatenate([x_odds, x_even])             # <<<<<<<<<<<<<<
 *               y = np.concatenate([y_odds, y_even])
 *               rads = np.concatenate([rads_odds, rads_even])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_x_odds);
    __Pyx_GIVEREF(__pyx_v_x_odds);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_x_odds);
    __Pyx_INCREF(__pyx_v_x_even);
    __Pyx_GIVEREF(__pyx_v_x_even);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_x_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_x = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":341
 *             #
 *               x = np.concatenate([x_odds, x_even])
 *               y = np.concatenate([y_odds, y_even])             # <<<<<<<<<<<<<<
 *               rads = np.concatenate([rads_odds, rads_even])
 *               sort =  np.argsort(rads)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_y_odds);
    __Pyx_GIVEREF(__pyx_v_y_odds);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_y_odds);
    __Pyx_INCREF(__pyx_v_y_even);
    __Pyx_GIVEREF(__pyx_v_y_even);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_v_y_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":342
 *               x = np.concatenate([x_odds, x_even])
 *               y = np.concatenate([y_odds, y_even])
 *               rads = np.concatenate([rads_odds, rads_even])             # <<<<<<<<<<<<<<
 *               sort =  np.argsort(rads)
 *               x = x[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_rads_odds);
    __Pyx_GIVEREF(__pyx_v_rads_odds);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_rads_odds);
    __Pyx_INCREF(__pyx_v_rads_even);
    __Pyx_GIVEREF(__pyx_v_rads_even);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_rads_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_rads = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":343
 *               y = np.concatenate([y_odds, y_even])
 *               rads = np.concatenate([rads_odds, rads_even])
 *               sort =  np.argsort(rads)             # <<<<<<<<<<<<<<
 *               x = x[sort]
 *               y = y[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_v_rads) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_rads);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":344
 *               rads = np.concatenate([rads_odds, rads_even])
 *               sort =  np.argsort(rads)
 *               x = x[sort]             # <<<<<<<<<<<<<<
 *               y = y[sort]
 *               rads = rads[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":345
 *               sort =  np.argsort(rads)
 *               x = x[sort]
 *               y = y[sort]             # <<<<<<<<<<<<<<
 *               rads = rads[sort]
 *             #
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":346
 *               x = x[sort]
 *               y = y[sort]
 *               rads = rads[sort]             # <<<<<<<<<<<<<<
 *             #
 *             #  ww = np.where(rads >= irad_min)[0]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":353
 *             #  y = y[ww]
 *             #
 *               ww = np.where( (rads >= irad_min) & (rads < irad_max) )[0]             # <<<<<<<<<<<<<<
 *               rads = rads[ww]
 *               x = x[ww]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_rads, __pyx_v_irad_min, Py_GE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_rads, __pyx_v_irad_max, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
    __pyx_t_3 = PyNumber_And(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_ww = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":354
 *             #
 *               ww = np.where( (rads >= irad_min) & (rads < irad_max) )[0]
 *               rads = rads[ww]             # <<<<<<<<<<<<<<
 *               x = x[ww]
 *               y = y[ww]
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":355
 *               ww = np.where( (rads >= irad_min) & (rads < irad_max) )[0]
 *               rads = rads[ww]
 *               x = x[ww]             # <<<<<<<<<<<<<<
 *               y = y[ww]
 * #
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":356
 *               rads = rads[ww]
 *               x = x[ww]
 *               y = y[ww]             # <<<<<<<<<<<<<<
 * #
 *               if (inum_esp!= rads.size):
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 356, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":358
 *               y = y[ww]
 * #
 *               if (inum_esp!= rads.size):             # <<<<<<<<<<<<<<
 *                 print("")
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_rads, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_inum_esp, __pyx_t_6, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 358, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "mirror_lib_v04.pyx":359
 * #
 *               if (inum_esp!= rads.size):
 *                 print("")             # <<<<<<<<<<<<<<
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 *                 print(" %i -> %i" % (inum_esp,rads.size,))
 */
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 359, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":360
 *               if (inum_esp!= rads.size):
 *                 print("")
 *                 print("\t Warning!, number of segments inside maximum radius is too big")             # <<<<<<<<<<<<<<
 *                 print(" %i -> %i" % (inum_esp,rads.size,))
 *                 print("")
 */
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":361
 *                 print("")
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 *                 print(" %i -> %i" % (inum_esp,rads.size,))             # <<<<<<<<<<<<<<
 *                 print("")
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_rads, __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 361, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 361, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_v_inum_esp);
      __Pyx_GIVEREF(__pyx_v_inum_esp);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_inum_esp);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyUnicode_Format(__pyx_kp_u_i_i, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 361, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 361, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":362
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 *                 print(" %i -> %i" % (inum_esp,rads.size,))
 *                 print("")             # <<<<<<<<<<<<<<
 * 
 *                 if (inum_esp<rads.size):
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 362, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":364
 *                 print("")
 * 
 *                 if (inum_esp<rads.size):             # <<<<<<<<<<<<<<
 *                   ww = np.argsort(rads)
 *                   rads = rads[ww[0:inum_esp]]
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_rads, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 364, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_inum_esp, __pyx_t_6, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 364, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 364, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_1) {

        /* "mirror_lib_v04.pyx":365
 * 
 *                 if (inum_esp<rads.size):
 *                   ww = np.argsort(rads)             # <<<<<<<<<<<<<<
 *                   rads = rads[ww[0:inum_esp]]
 *                   x = x[ww[0:inum_esp]]
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 365, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 365, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_rads) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_rads);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 365, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":366
 *                 if (inum_esp<rads.size):
 *                   ww = np.argsort(rads)
 *                   rads = rads[ww[0:inum_esp]]             # <<<<<<<<<<<<<<
 *                   x = x[ww[0:inum_esp]]
 *                   y = y[ww[0:inum_esp]]
 */
        __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_ww, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 366, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":367
 *                   ww = np.argsort(rads)
 *                   rads = rads[ww[0:inum_esp]]
 *                   x = x[ww[0:inum_esp]]             # <<<<<<<<<<<<<<
 *                   y = y[ww[0:inum_esp]]
 *                 else:
 */
        __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_ww, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":368
 *                   rads = rads[ww[0:inum_esp]]
 *                   x = x[ww[0:inum_esp]]
 *                   y = y[ww[0:inum_esp]]             # <<<<<<<<<<<<<<
 *                 else:
 *                   inum_esp=np.min([inum_esp, rads.size])
 */
        __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_ww, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 368, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":364
 *                 print("")
 * 
 *                 if (inum_esp<rads.size):             # <<<<<<<<<<<<<<
 *                   ww = np.argsort(rads)
 *                   rads = rads[ww[0:inum_esp]]
 */
        goto __pyx_L13;
      }

      /* "mirror_lib_v04.pyx":370
 *                   y = y[ww[0:inum_esp]]
 *                 else:
 *                   inum_esp=np.min([inum_esp, rads.size])             # <<<<<<<<<<<<<<
 *        ###??:     #
 *        ###??:     #LAST MIRROR
 */
      /*else*/ {
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_min); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_rads, __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_inum_esp);
        __Pyx_GIVEREF(__pyx_v_inum_esp);
        PyList_SET_ITEM(__pyx_t_5, 0, __pyx_v_inum_esp);
        __Pyx_GIVEREF(__pyx_t_2);
        PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
        __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 370, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF_SET(__pyx_v_inum_esp, __pyx_t_3);
        __pyx_t_3 = 0;
      }
      __pyx_L13:;

      /* "mirror_lib_v04.pyx":358
 *               y = y[ww]
 * #
 *               if (inum_esp!= rads.size):             # <<<<<<<<<<<<<<
 *                 print("")
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 */
    }

    /* "mirror_lib_v04.pyx":388
 *               # Area:
 *               #
 *               area = x * 0.             # <<<<<<<<<<<<<<
 *               b = iradius * 1.
 *               h = ap * 1.
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_x, __pyx_float_0_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_area = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":389
 *               #
 *               area = x * 0.
 *               b = iradius * 1.             # <<<<<<<<<<<<<<
 *               h = ap * 1.
 *               area = area + b * h / 2. * 6.
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_iradius, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_b = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":390
 *               area = x * 0.
 *               b = iradius * 1.
 *               h = ap * 1.             # <<<<<<<<<<<<<<
 *               area = area + b * h / 2. * 6.
 *               print(" Area covered by the primary mirror: %.4f sqr. meters." % (area.sum(),))
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_ap, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_h = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":391
 *               b = iradius * 1.
 *               h = ap * 1.
 *               area = area + b * h / 2. * 6.             # <<<<<<<<<<<<<<
 *               print(" Area covered by the primary mirror: %.4f sqr. meters." % (area.sum(),))
 * 
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_b, __pyx_v_h); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_6, __pyx_float_6_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Add(__pyx_v_area, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_area, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":392
 *               h = ap * 1.
 *               area = area + b * h / 2. * 6.
 *               print(" Area covered by the primary mirror: %.4f sqr. meters." % (area.sum(),))             # <<<<<<<<<<<<<<
 * 
 *               #
 */
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_9 = 0;
    __pyx_t_10 = 127;
    __Pyx_INCREF(__pyx_kp_u_Area_covered_by_the_primary_mir);
    __pyx_t_9 += 37;
    __Pyx_GIVEREF(__pyx_kp_u_Area_covered_by_the_primary_mir);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_Area_covered_by_the_primary_mir);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_area, __pyx_n_s_sum); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Format(__pyx_t_3, __pyx_kp_u_4f); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_10 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_10) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_10;
    __pyx_t_9 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_INCREF(__pyx_kp_u_sqr_meters);
    __pyx_t_9 += 13;
    __Pyx_GIVEREF(__pyx_kp_u_sqr_meters);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_sqr_meters);
    __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":397
 *               #FAMILIES:
 *               #
 *               family = np.int64(x * 0)             # <<<<<<<<<<<<<<
 *               condit = 0
 *               num = 0
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_int64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_v_x, __pyx_int_0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_family = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":398
 *               #
 *               family = np.int64(x * 0)
 *               condit = 0             # <<<<<<<<<<<<<<
 *               num = 0
 *               step = 1
 */
    __pyx_v_condit = 0;

    /* "mirror_lib_v04.pyx":399
 *               family = np.int64(x * 0)
 *               condit = 0
 *               num = 0             # <<<<<<<<<<<<<<
 *               step = 1
 *               Nperfamily = []
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_num = __pyx_int_0;

    /* "mirror_lib_v04.pyx":400
 *               condit = 0
 *               num = 0
 *               step = 1             # <<<<<<<<<<<<<<
 *               Nperfamily = []
 *               while (condit == 0):
 */
    __Pyx_INCREF(__pyx_int_1);
    __pyx_v_step = __pyx_int_1;

    /* "mirror_lib_v04.pyx":401
 *               num = 0
 *               step = 1
 *               Nperfamily = []             # <<<<<<<<<<<<<<
 *               while (condit == 0):
 *                 diff = rads - rads[num]
 */
    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 401, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_v_Nperfamily = ((PyObject*)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":402
 *               step = 1
 *               Nperfamily = []
 *               while (condit == 0):             # <<<<<<<<<<<<<<
 *                 diff = rads - rads[num]
 *                 wwn = np.where(diff > 0.001)[0]
 */
    while (1) {
      __pyx_t_1 = ((__pyx_v_condit == 0) != 0);
      if (!__pyx_t_1) break;

      /* "mirror_lib_v04.pyx":403
 *               Nperfamily = []
 *               while (condit == 0):
 *                 diff = rads - rads[num]             # <<<<<<<<<<<<<<
 *                 wwn = np.where(diff > 0.001)[0]
 *                 #wwn = np.where(rads > rads[num])[0]
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_v_num); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 403, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PyNumber_Subtract(__pyx_v_rads, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 403, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_diff, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":404
 *               while (condit == 0):
 *                 diff = rads - rads[num]
 *                 wwn = np.where(diff > 0.001)[0]             # <<<<<<<<<<<<<<
 *                 #wwn = np.where(rads > rads[num])[0]
 *                 ww = np.where(np.abs(diff) < 0.001)[0]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 404, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 404, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_RichCompare(__pyx_v_diff, __pyx_float_0_001, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 404, __pyx_L1_error)
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 404, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_wwn, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "mirror_lib_v04.pyx":406
 *                 wwn = np.where(diff > 0.001)[0]
 *                 #wwn = np.where(rads > rads[num])[0]
 *                 ww = np.where(np.abs(diff) < 0.001)[0]             # <<<<<<<<<<<<<<
 *                 #ww = np.where(rads == rads[num])[0]
 *       # This is not right. Now, once we now what segments are at the same distance...
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_abs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_v_diff) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_diff);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_float_0_001, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":410
 *       # This is not right. Now, once we now what segments are at the same distance...
 *       # ... we have to look for the azimuth values:
 *                 azis = (np.arctan2(y,x)[ww]*180./np.pi) % 60.             # <<<<<<<<<<<<<<
 *                 wws = np.argsort(azis)
 *                 azis = azis[wws]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_7 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_y, __pyx_v_x};
        __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_6);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_y, __pyx_v_x};
        __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_6);
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (__pyx_t_5) {
          __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
        }
        __Pyx_INCREF(__pyx_v_y);
        __Pyx_GIVEREF(__pyx_v_y);
        PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, __pyx_v_y);
        __Pyx_INCREF(__pyx_v_x);
        __Pyx_GIVEREF(__pyx_v_x);
        PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_v_x);
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_180_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyFloat_RemainderObjC(__pyx_t_4, __pyx_float_60_, 60., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_v_azis, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":411
 *       # ... we have to look for the azimuth values:
 *                 azis = (np.arctan2(y,x)[ww]*180./np.pi) % 60.
 *                 wws = np.argsort(azis)             # <<<<<<<<<<<<<<
 *                 azis = azis[wws]
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_argsort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_v_azis) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_azis);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 411, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_wws, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":412
 *                 azis = (np.arctan2(y,x)[ww]*180./np.pi) % 60.
 *                 wws = np.argsort(azis)
 *                 azis = azis[wws]             # <<<<<<<<<<<<<<
 * 
 *                 condit2 = 0
 */
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_azis, __pyx_v_wws); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_azis, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":414
 *                 azis = azis[wws]
 * 
 *                 condit2 = 0             # <<<<<<<<<<<<<<
 *                 num2 = 0
 *                 stcnt = 0
 */
      __pyx_v_condit2 = 0;

      /* "mirror_lib_v04.pyx":415
 * 
 *                 condit2 = 0
 *                 num2 = 0             # <<<<<<<<<<<<<<
 *                 stcnt = 0
 *                 step2 = np.zeros((azis.size, ), dtype=np.int32)
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF_SET(__pyx_v_num2, __pyx_int_0);

      /* "mirror_lib_v04.pyx":416
 *                 condit2 = 0
 *                 num2 = 0
 *                 stcnt = 0             # <<<<<<<<<<<<<<
 *                 step2 = np.zeros((azis.size, ), dtype=np.int32)
 *                 while (condit2 == 0):
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF_SET(__pyx_v_stcnt, __pyx_int_0);

      /* "mirror_lib_v04.pyx":417
 *                 num2 = 0
 *                 stcnt = 0
 *                 step2 = np.zeros((azis.size, ), dtype=np.int32)             # <<<<<<<<<<<<<<
 *                 while (condit2 == 0):
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_azis, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_int32); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_2) < 0) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_v_step2, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":418
 *                 stcnt = 0
 *                 step2 = np.zeros((azis.size, ), dtype=np.int32)
 *                 while (condit2 == 0):             # <<<<<<<<<<<<<<
 * 
 *                   diff2 = np.abs(azis - azis[num2])
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_condit2 == 0) != 0);
        if (!__pyx_t_1) break;

        /* "mirror_lib_v04.pyx":420
 *                 while (condit2 == 0):
 * 
 *                   diff2 = np.abs(azis - azis[num2])             # <<<<<<<<<<<<<<
 *                   wwn2 = np.where( (diff2 > 0.001) & (diff2 < 59.) )[0]
 *                   ww2 = np.where( (diff2 < 0.001) | (diff2 > 59.) )[0]
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_abs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_azis, __pyx_v_num2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = PyNumber_Subtract(__pyx_v_azis, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF_SET(__pyx_v_diff2, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":421
 * 
 *                   diff2 = np.abs(azis - azis[num2])
 *                   wwn2 = np.where( (diff2 > 0.001) & (diff2 < 59.) )[0]             # <<<<<<<<<<<<<<
 *                   ww2 = np.where( (diff2 < 0.001) | (diff2 > 59.) )[0]
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyObject_RichCompare(__pyx_v_diff2, __pyx_float_0_001, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
        __pyx_t_4 = PyObject_RichCompare(__pyx_v_diff2, __pyx_float_59_, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 421, __pyx_L1_error)
        __pyx_t_5 = PyNumber_And(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_wwn2, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "mirror_lib_v04.pyx":422
 *                   diff2 = np.abs(azis - azis[num2])
 *                   wwn2 = np.where( (diff2 > 0.001) & (diff2 < 59.) )[0]
 *                   ww2 = np.where( (diff2 < 0.001) | (diff2 > 59.) )[0]             # <<<<<<<<<<<<<<
 * 
 *                   num2 = num2 + np.size(ww2)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyObject_RichCompare(__pyx_v_diff2, __pyx_float_0_001, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 422, __pyx_L1_error)
        __pyx_t_4 = PyObject_RichCompare(__pyx_v_diff2, __pyx_float_59_, Py_GT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 422, __pyx_L1_error)
        __pyx_t_3 = PyNumber_Or(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ww2, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "mirror_lib_v04.pyx":424
 *                   ww2 = np.where( (diff2 < 0.001) | (diff2 > 59.) )[0]
 * 
 *                   num2 = num2 + np.size(ww2)             # <<<<<<<<<<<<<<
 * 
 *                   step2[ww2] = stcnt * 1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_ww2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_ww2);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyNumber_Add(__pyx_v_num2, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF_SET(__pyx_v_num2, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":426
 *                   num2 = num2 + np.size(ww2)
 * 
 *                   step2[ww2] = stcnt * 1             # <<<<<<<<<<<<<<
 *                   stcnt = stcnt + 1
 * 
 */
        __pyx_t_3 = PyNumber_Multiply(__pyx_v_stcnt, __pyx_int_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(PyObject_SetItem(__pyx_v_step2, __pyx_v_ww2, __pyx_t_3) < 0)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":427
 * 
 *                   step2[ww2] = stcnt * 1
 *                   stcnt = stcnt + 1             # <<<<<<<<<<<<<<
 * 
 *                   if (num2 >= azis.size):
 */
        __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_stcnt, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 427, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_stcnt, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":429
 *                   stcnt = stcnt + 1
 * 
 *                   if (num2 >= azis.size):             # <<<<<<<<<<<<<<
 *                     condit2 = 1
 * 
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_azis, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_num2, __pyx_t_3, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_1) {

          /* "mirror_lib_v04.pyx":430
 * 
 *                   if (num2 >= azis.size):
 *                     condit2 = 1             # <<<<<<<<<<<<<<
 * 
 *                 num = num + np.size(ww)
 */
          __pyx_v_condit2 = 1;

          /* "mirror_lib_v04.pyx":429
 *                   stcnt = stcnt + 1
 * 
 *                   if (num2 >= azis.size):             # <<<<<<<<<<<<<<
 *                     condit2 = 1
 * 
 */
        }
      }

      /* "mirror_lib_v04.pyx":432
 *                     condit2 = 1
 * 
 *                 num = num + np.size(ww)             # <<<<<<<<<<<<<<
 *                 for it_nnn in range(np.max(step2)+1):
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_v_ww) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_ww);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_v_num, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 432, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_num, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":433
 * 
 *                 num = num + np.size(ww)
 *                 for it_nnn in range(np.max(step2)+1):             # <<<<<<<<<<<<<<
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]
 *                   family[ww[wws][ww2]] = step+it_nnn
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 433, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_step2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_step2);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 433, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 433, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_3 = __pyx_t_6; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_11 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 433, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 433, __pyx_L1_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 433, __pyx_L1_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_11(__pyx_t_3);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 433, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_v_it_nnn, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "mirror_lib_v04.pyx":434
 *                 num = num + np.size(ww)
 *                 for it_nnn in range(np.max(step2)+1):
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]             # <<<<<<<<<<<<<<
 *                   family[ww[wws][ww2]] = step+it_nnn
 *                   Nperfamily.append(np.size(ww[wws][ww2]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_where); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_abs); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Subtract(__pyx_v_step2, __pyx_v_it_nnn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_13)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_13);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
          }
        }
        __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_13, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_2);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_RichCompare(__pyx_t_5, __pyx_float_1_eneg_3, Py_LT); __Pyx_XGOTREF(__pyx_t_12); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_12);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 434, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ww2, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "mirror_lib_v04.pyx":435
 *                 for it_nnn in range(np.max(step2)+1):
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]
 *                   family[ww[wws][ww2]] = step+it_nnn             # <<<<<<<<<<<<<<
 *                   Nperfamily.append(np.size(ww[wws][ww2]))
 *                   if (np.size(ww[wws][ww2])==0):
 */
        __pyx_t_4 = PyNumber_Add(__pyx_v_step, __pyx_v_it_nnn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_ww, __pyx_v_wws); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(PyObject_SetItem(__pyx_v_family, __pyx_t_12, __pyx_t_4) < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "mirror_lib_v04.pyx":436
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]
 *                   family[ww[wws][ww2]] = step+it_nnn
 *                   Nperfamily.append(np.size(ww[wws][ww2]))             # <<<<<<<<<<<<<<
 *                   if (np.size(ww[wws][ww2])==0):
 *                     stop()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_v_ww, __pyx_v_wws); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_12, __pyx_v_ww2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_4 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_12, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_Nperfamily, __pyx_t_4); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 436, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "mirror_lib_v04.pyx":437
 *                   family[ww[wws][ww2]] = step+it_nnn
 *                   Nperfamily.append(np.size(ww[wws][ww2]))
 *                   if (np.size(ww[wws][ww2])==0):             # <<<<<<<<<<<<<<
 *                     stop()
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_ww, __pyx_v_wws); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_12);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_4, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 437, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_1) {

          /* "mirror_lib_v04.pyx":438
 *                   Nperfamily.append(np.size(ww[wws][ww2]))
 *                   if (np.size(ww[wws][ww2])==0):
 *                     stop()             # <<<<<<<<<<<<<<
 * 
 *                 step = step + 1 + np.max(step2)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_stop); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 438, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_12 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_12)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_12);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_12) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_12) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 438, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "mirror_lib_v04.pyx":437
 *                   family[ww[wws][ww2]] = step+it_nnn
 *                   Nperfamily.append(np.size(ww[wws][ww2]))
 *                   if (np.size(ww[wws][ww2])==0):             # <<<<<<<<<<<<<<
 *                     stop()
 * 
 */
        }

        /* "mirror_lib_v04.pyx":433
 * 
 *                 num = num + np.size(ww)
 *                 for it_nnn in range(np.max(step2)+1):             # <<<<<<<<<<<<<<
 *                   ww2 = np.where(np.abs(step2-it_nnn) < 1.e-3)[0]
 *                   family[ww[wws][ww2]] = step+it_nnn
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":440
 *                     stop()
 * 
 *                 step = step + 1 + np.max(step2)             # <<<<<<<<<<<<<<
 * 
 *                 if (np.size(wwn) == 0):
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_step, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_max); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_4, __pyx_v_step2) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_step2);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_step, __pyx_t_12);
      __pyx_t_12 = 0;

      /* "mirror_lib_v04.pyx":442
 *                 step = step + 1 + np.max(step2)
 * 
 *                 if (np.size(wwn) == 0):             # <<<<<<<<<<<<<<
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 442, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_12 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_wwn) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_wwn);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 442, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_12, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 442, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_1) {

        /* "mirror_lib_v04.pyx":443
 * 
 *                 if (np.size(wwn) == 0):
 *                   condit = 1             # <<<<<<<<<<<<<<
 *           elif (iprimary_shape=='anular'):
 *               x = np.zeros((1,), dtype=np.float64)
 */
        __pyx_v_condit = 1;

        /* "mirror_lib_v04.pyx":442
 *                 step = step + 1 + np.max(step2)
 * 
 *                 if (np.size(wwn) == 0):             # <<<<<<<<<<<<<<
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):
 */
      }
    }

    /* "mirror_lib_v04.pyx":296
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 *           if (iprimary_shape=='hexagonal'):             # <<<<<<<<<<<<<<
 *             #
 *             #GET AN INITIAL ESTIMATION OF MIRRORS:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":444
 *                 if (np.size(wwn) == 0):
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):             # <<<<<<<<<<<<<<
 *               x = np.zeros((1,), dtype=np.float64)
 *               y = np.zeros((1,), dtype=np.float64)
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_iprimary_shape, __pyx_n_u_anular, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 444, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "mirror_lib_v04.pyx":445
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):
 *               x = np.zeros((1,), dtype=np.float64)             # <<<<<<<<<<<<<<
 *               y = np.zeros((1,), dtype=np.float64)
 *               rads = np.zeros((1,)) + iradius
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_float64); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_4) < 0) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__14, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_x = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":446
 *           elif (iprimary_shape=='anular'):
 *               x = np.zeros((1,), dtype=np.float64)
 *               y = np.zeros((1,), dtype=np.float64)             # <<<<<<<<<<<<<<
 *               rads = np.zeros((1,)) + iradius
 *               family = np.zeros((1,),dtype=np.int64)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_float64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__14, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_y = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":447
 *               x = np.zeros((1,), dtype=np.float64)
 *               y = np.zeros((1,), dtype=np.float64)
 *               rads = np.zeros((1,)) + iradius             # <<<<<<<<<<<<<<
 *               family = np.zeros((1,),dtype=np.int64)
 *               Nperfamily = [1]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_5, __pyx_v_iradius); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_rads = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":448
 *               y = np.zeros((1,), dtype=np.float64)
 *               rads = np.zeros((1,)) + iradius
 *               family = np.zeros((1,),dtype=np.int64)             # <<<<<<<<<<<<<<
 *               Nperfamily = [1]
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_int64); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_12) < 0) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__14, __pyx_t_3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_family = __pyx_t_12;
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":449
 *               rads = np.zeros((1,)) + iradius
 *               family = np.zeros((1,),dtype=np.int64)
 *               Nperfamily = [1]             # <<<<<<<<<<<<<<
 * 
 *           else:
 */
    __pyx_t_12 = PyList_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_GIVEREF(__pyx_int_1);
    PyList_SET_ITEM(__pyx_t_12, 0, __pyx_int_1);
    __pyx_v_Nperfamily = ((PyObject*)__pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":444
 *                 if (np.size(wwn) == 0):
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):             # <<<<<<<<<<<<<<
 *               x = np.zeros((1,), dtype=np.float64)
 *               y = np.zeros((1,), dtype=np.float64)
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":452
 * 
 *           else:
 *             print('primary:')             # <<<<<<<<<<<<<<
 *             print('\tUnknown primary mirror shape!')
 *             print('')
 */
  /*else*/ {
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":453
 *           else:
 *             print('primary:')
 *             print('\tUnknown primary mirror shape!')             # <<<<<<<<<<<<<<
 *             print('')
 *             stop()
 */
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":454
 *             print('primary:')
 *             print('\tUnknown primary mirror shape!')
 *             print('')             # <<<<<<<<<<<<<<
 *             stop()
 * 
 */
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":455
 *             print('\tUnknown primary mirror shape!')
 *             print('')
 *             stop()             # <<<<<<<<<<<<<<
 * 
 *           return x, y, rads, family, Nperfamily, inum_esp
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_stop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_12 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":457
 *             stop()
 * 
 *           return x, y, rads, family, Nperfamily, inum_esp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 457, __pyx_L1_error) }
  if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 457, __pyx_L1_error) }
  if (unlikely(!__pyx_v_rads)) { __Pyx_RaiseUnboundLocalError("rads"); __PYX_ERR(0, 457, __pyx_L1_error) }
  if (unlikely(!__pyx_v_family)) { __Pyx_RaiseUnboundLocalError("family"); __PYX_ERR(0, 457, __pyx_L1_error) }
  if (unlikely(!__pyx_v_Nperfamily)) { __Pyx_RaiseUnboundLocalError("Nperfamily"); __PYX_ERR(0, 457, __pyx_L1_error) }
  __pyx_t_12 = PyTuple_New(6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_v_y);
  __Pyx_INCREF(__pyx_v_rads);
  __Pyx_GIVEREF(__pyx_v_rads);
  PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_v_rads);
  __Pyx_INCREF(__pyx_v_family);
  __Pyx_GIVEREF(__pyx_v_family);
  PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_v_family);
  __Pyx_INCREF(__pyx_v_Nperfamily);
  __Pyx_GIVEREF(__pyx_v_Nperfamily);
  PyTuple_SET_ITEM(__pyx_t_12, 4, __pyx_v_Nperfamily);
  __Pyx_INCREF(__pyx_v_inum_esp);
  __Pyx_GIVEREF(__pyx_v_inum_esp);
  PyTuple_SET_ITEM(__pyx_t_12, 5, __pyx_v_inum_esp);
  __pyx_r = __pyx_t_12;
  __pyx_t_12 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":293
 *             , mltch):
 * 
 *         def get_primary_geometry(inum_esp \             # <<<<<<<<<<<<<<
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.__init__.get_primary_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ones);
  __Pyx_XDECREF(__pyx_v_x_odds);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_y_odds);
  __Pyx_XDECREF(__pyx_v_x_even);
  __Pyx_XDECREF(__pyx_v_y_even);
  __Pyx_XDECREF(__pyx_v_ap);
  __Pyx_XDECREF(__pyx_v_x_fact_odds);
  __Pyx_XDECREF(__pyx_v_y_fact_odds);
  __Pyx_XDECREF(__pyx_v_x_fact_even);
  __Pyx_XDECREF(__pyx_v_y_fact_even);
  __Pyx_XDECREF(__pyx_v_rads_odds);
  __Pyx_XDECREF(__pyx_v_rads_even);
  __Pyx_XDECREF(__pyx_v_sort);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_rads);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_area);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_num);
  __Pyx_XDECREF(__pyx_v_step);
  __Pyx_XDECREF(__pyx_v_Nperfamily);
  __Pyx_XDECREF(__pyx_v_diff);
  __Pyx_XDECREF(__pyx_v_wwn);
  __Pyx_XDECREF(__pyx_v_azis);
  __Pyx_XDECREF(__pyx_v_wws);
  __Pyx_XDECREF(__pyx_v_num2);
  __Pyx_XDECREF(__pyx_v_stcnt);
  __Pyx_XDECREF(__pyx_v_step2);
  __Pyx_XDECREF(__pyx_v_diff2);
  __Pyx_XDECREF(__pyx_v_wwn2);
  __Pyx_XDECREF(__pyx_v_ww2);
  __Pyx_XDECREF(__pyx_v_it_nnn);
  __Pyx_XDECREF(__pyx_v_inum_esp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":290
 *   class primary_obj(object):
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \             # <<<<<<<<<<<<<<
 *             , mltch):
 * 
 */

static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_tstep, PyObject *__pyx_v_tlong, PyObject *__pyx_v_cleandust, PyObject *__pyx_v_period, PyObject *__pyx_v_deltat, PyObject *__pyx_v_mltch) {
  PyObject *__pyx_v_get_primary_geometry = 0;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_rads = NULL;
  PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_Nperfamily = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ideltat = NULL;
  PyObject *__pyx_v_iperiod = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "mirror_lib_v04.pyx":293
 *             , mltch):
 * 
 *         def get_primary_geometry(inum_esp \             # <<<<<<<<<<<<<<
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_7primary_11primary_obj_8__init___1get_primary_geometry, 0, __pyx_n_s_primary_locals_primary_obj___ini, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__19)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_get_primary_geometry = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":461
 * 
 *         x,y,rads,family,Nperfamily,telescope.num_esp=\
 *             get_primary_geometry(telescope.num_esp \             # <<<<<<<<<<<<<<
 *             , telescope.radius, telescope.rad_min, telescope.rad_max \
 *             , telescope.primary_shape)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num_esp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "mirror_lib_v04.pyx":462
 *         x,y,rads,family,Nperfamily,telescope.num_esp=\
 *             get_primary_geometry(telescope.num_esp \
 *             , telescope.radius, telescope.rad_min, telescope.rad_max \             # <<<<<<<<<<<<<<
 *             , telescope.primary_shape)
 *       #
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_radius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_rad_min); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_rad_max); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "mirror_lib_v04.pyx":463
 *             get_primary_geometry(telescope.num_esp \
 *             , telescope.radius, telescope.rad_min, telescope.rad_max \
 *             , telescope.primary_shape)             # <<<<<<<<<<<<<<
 *       #
 *         self.xpos = x * 1.
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_primary_shape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "mirror_lib_v04.pyx":461
 * 
 *         x,y,rads,family,Nperfamily,telescope.num_esp=\
 *             get_primary_geometry(telescope.num_esp \             # <<<<<<<<<<<<<<
 *             , telescope.radius, telescope.rad_min, telescope.rad_max \
 *             , telescope.primary_shape)
 */
  __pyx_t_6 = __pyx_pf_9pymirrors_7primary_11primary_obj_8__init___get_primary_geometry(__pyx_v_get_primary_geometry, __pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
    PyObject* sequence = __pyx_t_6;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 6)) {
      if (size > 6) __Pyx_RaiseTooManyValuesError(6);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 460, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 3); 
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 4); 
      __pyx_t_7 = PyTuple_GET_ITEM(sequence, 5); 
    } else {
      __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 3); 
      __pyx_t_1 = PyList_GET_ITEM(sequence, 4); 
      __pyx_t_7 = PyList_GET_ITEM(sequence, 5); 
    }
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_7);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[6] = {&__pyx_t_5,&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1,&__pyx_t_7};
      for (i=0; i < 6; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 460, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[6] = {&__pyx_t_5,&__pyx_t_4,&__pyx_t_3,&__pyx_t_2,&__pyx_t_1,&__pyx_t_7};
    __pyx_t_8 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
    for (index=0; index < 6; index++) {
      PyObject* item = __pyx_t_9(__pyx_t_8); if (unlikely(!item)) goto __pyx_L3_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 6) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
    __pyx_t_9 = NULL;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 460, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }

  /* "mirror_lib_v04.pyx":460
 * 
 * 
 *         x,y,rads,family,Nperfamily,telescope.num_esp=\             # <<<<<<<<<<<<<<
 *             get_primary_geometry(telescope.num_esp \
 *             , telescope.radius, telescope.rad_min, telescope.rad_max \
 */
  __pyx_v_x = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_v_y = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_v_rads = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_family = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_Nperfamily = __pyx_t_1;
  __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_telescope, __pyx_n_s_num_esp, __pyx_t_7) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "mirror_lib_v04.pyx":465
 *             , telescope.primary_shape)
 *       #
 *         self.xpos = x * 1.             # <<<<<<<<<<<<<<
 *         self.ypos = y * 1.
 *         self.dist = rads * 1.
 */
  __pyx_t_6 = PyNumber_Multiply(__pyx_v_x, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xpos, __pyx_t_6) < 0) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":466
 *       #
 *         self.xpos = x * 1.
 *         self.ypos = y * 1.             # <<<<<<<<<<<<<<
 *         self.dist = rads * 1.
 *         self.azimuth = np.arctan2(y, x)#+self.dist/np.max(self.dist)*0.01
 */
  __pyx_t_6 = PyNumber_Multiply(__pyx_v_y, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ypos, __pyx_t_6) < 0) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":467
 *         self.xpos = x * 1.
 *         self.ypos = y * 1.
 *         self.dist = rads * 1.             # <<<<<<<<<<<<<<
 *         self.azimuth = np.arctan2(y, x)#+self.dist/np.max(self.dist)*0.01
 *         self.families = family * 1
 */
  __pyx_t_6 = PyNumber_Multiply(__pyx_v_rads, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_dist, __pyx_t_6) < 0) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":468
 *         self.ypos = y * 1.
 *         self.dist = rads * 1.
 *         self.azimuth = np.arctan2(y, x)#+self.dist/np.max(self.dist)*0.01             # <<<<<<<<<<<<<<
 *         self.families = family * 1
 *         self.Nfamily = np.max(family)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_10 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_y, __pyx_v_x};
    __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_6);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_y, __pyx_v_x};
    __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_10, 2+__pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_6);
  } else
  #endif
  {
    __pyx_t_2 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_v_y);
    __Pyx_GIVEREF(__pyx_v_y);
    PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_10, __pyx_v_y);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_10, __pyx_v_x);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_azimuth, __pyx_t_6) < 0) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":469
 *         self.dist = rads * 1.
 *         self.azimuth = np.arctan2(y, x)#+self.dist/np.max(self.dist)*0.01
 *         self.families = family * 1             # <<<<<<<<<<<<<<
 *         self.Nfamily = np.max(family)
 *         self.Nperfamily = np.array(Nperfamily) * 1
 */
  __pyx_t_6 = PyNumber_Multiply(__pyx_v_family, __pyx_int_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_families, __pyx_t_6) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":470
 *         self.azimuth = np.arctan2(y, x)#+self.dist/np.max(self.dist)*0.01
 *         self.families = family * 1
 *         self.Nfamily = np.max(family)             # <<<<<<<<<<<<<<
 *         self.Nperfamily = np.array(Nperfamily) * 1
 *         #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_max); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_6 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_family) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_family);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily, __pyx_t_6) < 0) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":471
 *         self.families = family * 1
 *         self.Nfamily = np.max(family)
 *         self.Nperfamily = np.array(Nperfamily) * 1             # <<<<<<<<<<<<<<
 *         #
 *         # Initialize various variables:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_v_Nperfamily) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_Nperfamily);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_6, __pyx_int_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_Nperfamily, __pyx_t_1) < 0) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":474
 *         #
 *         # Initialize various variables:
 *         self.sort = self.xpos * 0. - np.nan             # <<<<<<<<<<<<<<
 *         self.N = np.int64(np.size(x))
 *         #
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xpos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_1, __pyx_float_0_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_nan); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sort, __pyx_t_1) < 0) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":475
 *         # Initialize various variables:
 *         self.sort = self.xpos * 0. - np.nan
 *         self.N = np.int64(np.size(x))             # <<<<<<<<<<<<<<
 *         #
 *         if (type(mltch)!=int):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_v_x) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_x);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_N, __pyx_t_1) < 0) __PYX_ERR(0, 475, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":477
 *         self.N = np.int64(np.size(x))
 *         #
 *         if (type(mltch)!=int):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST be an integer!")
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_mltch)), ((PyObject *)(&PyInt_Type)), Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 477, __pyx_L1_error)
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":478
 *         #
 *         if (type(mltch)!=int):
 *           print("")             # <<<<<<<<<<<<<<
 *           print("\tMultiplechange MUST be an integer!")
 *           print("")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":479
 *         if (type(mltch)!=int):
 *           print("")
 *           print("\tMultiplechange MUST be an integer!")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":480
 *           print("")
 *           print("\tMultiplechange MUST be an integer!")
 *           print("")             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         #
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":481
 *           print("\tMultiplechange MUST be an integer!")
 *           print("")
 *           sys.exit()             # <<<<<<<<<<<<<<
 *         #
 *         # May be I should change this limitation:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_sys); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_exit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":477
 *         self.N = np.int64(np.size(x))
 *         #
 *         if (type(mltch)!=int):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST be an integer!")
 */
  }

  /* "mirror_lib_v04.pyx":484
 *         #
 *         # May be I should change this limitation:
 *         if (mltch<1):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST be >=1!")
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_mltch, __pyx_int_1, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":485
 *         # May be I should change this limitation:
 *         if (mltch<1):
 *           print("")             # <<<<<<<<<<<<<<
 *           print("\tMultiplechange MUST be >=1!")
 *           print("")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":486
 *         if (mltch<1):
 *           print("")
 *           print("\tMultiplechange MUST be >=1!")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":487
 *           print("")
 *           print("\tMultiplechange MUST be >=1!")
 *           print("")             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         if (self.N%mltch!=0):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":488
 *           print("\tMultiplechange MUST be >=1!")
 *           print("")
 *           sys.exit()             # <<<<<<<<<<<<<<
 *         if (self.N%mltch!=0):
 *           print("")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":484
 *         #
 *         # May be I should change this limitation:
 *         if (mltch<1):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST be >=1!")
 */
  }

  /* "mirror_lib_v04.pyx":489
 *           print("")
 *           sys.exit()
 *         if (self.N%mltch!=0):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyNumber_Remainder(__pyx_t_1, __pyx_v_mltch); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":490
 *           sys.exit()
 *         if (self.N%mltch!=0):
 *           print("")             # <<<<<<<<<<<<<<
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")
 *           print("")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":491
 *         if (self.N%mltch!=0):
 *           print("")
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":492
 *           print("")
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")
 *           print("")             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         self.mltch = mltch * 1
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":493
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")
 *           print("")
 *           sys.exit()             # <<<<<<<<<<<<<<
 *         self.mltch = mltch * 1
 *         #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_sys); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_exit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":489
 *           print("")
 *           sys.exit()
 *         if (self.N%mltch!=0):             # <<<<<<<<<<<<<<
 *           print("")
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")
 */
  }

  /* "mirror_lib_v04.pyx":494
 *           print("")
 *           sys.exit()
 *         self.mltch = mltch * 1             # <<<<<<<<<<<<<<
 *         #
 * # If we change the way of initializing incident rays, it might not be useful
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_mltch, __pyx_int_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 494, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_mltch, __pyx_t_1) < 0) __PYX_ERR(0, 494, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":498
 * # If we change the way of initializing incident rays, it might not be useful
 * 
 *         self.i = {}             # <<<<<<<<<<<<<<
 *         self.i2 = {}
 *         self.th1 = {}
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_i, __pyx_t_1) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":499
 * 
 *         self.i = {}
 *         self.i2 = {}             # <<<<<<<<<<<<<<
 *         self.th1 = {}
 *         self.area = {}
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_i2, __pyx_t_1) < 0) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":500
 *         self.i = {}
 *         self.i2 = {}
 *         self.th1 = {}             # <<<<<<<<<<<<<<
 *         self.area = {}
 *         self.rad = {}
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_th1, __pyx_t_1) < 0) __PYX_ERR(0, 500, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":501
 *         self.i2 = {}
 *         self.th1 = {}
 *         self.area = {}             # <<<<<<<<<<<<<<
 *         self.rad = {}
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_area, __pyx_t_1) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":502
 *         self.th1 = {}
 *         self.area = {}
 *         self.rad = {}             # <<<<<<<<<<<<<<
 * 
 *         for i in range(telescope.num_esp):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rad, __pyx_t_1) < 0) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":504
 *         self.rad = {}
 * 
 *         for i in range(telescope.num_esp):             # <<<<<<<<<<<<<<
 *           self.i['%i' % (i,)]=np.array([])
 *           self.i2['%i' % (i,)]=np.array([])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num_esp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_12 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_12 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 504, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 504, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 504, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_13(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 504, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":505
 * 
 *         for i in range(telescope.num_esp):
 *           self.i['%i' % (i,)]=np.array([])             # <<<<<<<<<<<<<<
 *           self.i2['%i' % (i,)]=np.array([])
 *           self.th1['%i' % (i,)]=np.array([])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_i);
    __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_7, __pyx_t_2) < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":506
 *         for i in range(telescope.num_esp):
 *           self.i['%i' % (i,)]=np.array([])
 *           self.i2['%i' % (i,)]=np.array([])             # <<<<<<<<<<<<<<
 *           self.th1['%i' % (i,)]=np.array([])
 *           self.area['%i' % (i,)]=np.array([])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_i2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_i);
    __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_6, __pyx_t_2) < 0)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":507
 *           self.i['%i' % (i,)]=np.array([])
 *           self.i2['%i' % (i,)]=np.array([])
 *           self.th1['%i' % (i,)]=np.array([])             # <<<<<<<<<<<<<<
 *           self.area['%i' % (i,)]=np.array([])
 *           self.rad['%i' % (i,)]=np.array([])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_th1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_i);
    __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_7, __pyx_t_2) < 0)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":508
 *           self.i2['%i' % (i,)]=np.array([])
 *           self.th1['%i' % (i,)]=np.array([])
 *           self.area['%i' % (i,)]=np.array([])             # <<<<<<<<<<<<<<
 *           self.rad['%i' % (i,)]=np.array([])
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_area); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_i);
    __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_6, __pyx_t_2) < 0)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":509
 *           self.th1['%i' % (i,)]=np.array([])
 *           self.area['%i' % (i,)]=np.array([])
 *           self.rad['%i' % (i,)]=np.array([])             # <<<<<<<<<<<<<<
 * 
 *         self.d11d = 0.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rad); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_i);
    __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_7, __pyx_t_2) < 0)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":504
 *         self.rad = {}
 * 
 *         for i in range(telescope.num_esp):             # <<<<<<<<<<<<<<
 *           self.i['%i' % (i,)]=np.array([])
 *           self.i2['%i' % (i,)]=np.array([])
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":511
 *           self.rad['%i' % (i,)]=np.array([])
 * 
 *         self.d11d = 0.             # <<<<<<<<<<<<<<
 *         self.d21d = 0.
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d11d, __pyx_float_0_) < 0) __PYX_ERR(0, 511, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":512
 * 
 *         self.d11d = 0.
 *         self.d21d = 0.             # <<<<<<<<<<<<<<
 * 
 *       #TIMING:
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d21d, __pyx_float_0_) < 0) __PYX_ERR(0, 512, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":541
 *         #
 *         #
 *         if (period!=0):             # <<<<<<<<<<<<<<
 *           #ideltat = (1.*period)/(1.*self.N)
 * # NEW; MLTCH::
 */
  __pyx_t_1 = __Pyx_PyInt_NeObjC(__pyx_v_period, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":544
 *           #ideltat = (1.*period)/(1.*self.N)
 * # NEW; MLTCH::
 *           ideltat = (1.*period)/(1.*self.N/(1.*self.mltch))             # <<<<<<<<<<<<<<
 *           iperiod = period * 1.
 *         if (deltat!=0):
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_float_1_, __pyx_v_period); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = PyNumber_Multiply(__pyx_float_1_, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mltch); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Multiply(__pyx_float_1_, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_ideltat = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":545
 * # NEW; MLTCH::
 *           ideltat = (1.*period)/(1.*self.N/(1.*self.mltch))
 *           iperiod = period * 1.             # <<<<<<<<<<<<<<
 *         if (deltat!=0):
 *           iperiod = deltat * (self.N * 1.) / (1.*self.mltch)
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_period, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_iperiod = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":541
 *         #
 *         #
 *         if (period!=0):             # <<<<<<<<<<<<<<
 *           #ideltat = (1.*period)/(1.*self.N)
 * # NEW; MLTCH::
 */
  }

  /* "mirror_lib_v04.pyx":546
 *           ideltat = (1.*period)/(1.*self.N/(1.*self.mltch))
 *           iperiod = period * 1.
 *         if (deltat!=0):             # <<<<<<<<<<<<<<
 *           iperiod = deltat * (self.N * 1.) / (1.*self.mltch)
 *           ideltat = deltat * 1.
 */
  __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_v_deltat, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":547
 *           iperiod = period * 1.
 *         if (deltat!=0):
 *           iperiod = deltat * (self.N * 1.) / (1.*self.mltch)             # <<<<<<<<<<<<<<
 *           ideltat = deltat * 1.
 *         #
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_deltat, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mltch); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Multiply(__pyx_float_1_, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 547, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_iperiod, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":548
 *         if (deltat!=0):
 *           iperiod = deltat * (self.N * 1.) / (1.*self.mltch)
 *           ideltat = deltat * 1.             # <<<<<<<<<<<<<<
 *         #
 * 
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_v_deltat, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 548, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_ideltat, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":546
 *           ideltat = (1.*period)/(1.*self.N/(1.*self.mltch))
 *           iperiod = period * 1.
 *         if (deltat!=0):             # <<<<<<<<<<<<<<
 *           iperiod = deltat * (self.N * 1.) / (1.*self.mltch)
 *           ideltat = deltat * 1.
 */
  }

  /* "mirror_lib_v04.pyx":560
 * 
 * 
 *         self.tstep = tstep * 1. # SIMULATION STEP (IN DAYS)             # <<<<<<<<<<<<<<
 *         self.period = iperiod * 1.  # NUMBER OF DAYS FOR SUBSTITUTING ALL MIRRORS
 *         self.tlong = tlong * 1.  # NUMBER OF DAYS TO BE SIMULATED
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_tstep, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_tstep, __pyx_t_2) < 0) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":561
 * 
 *         self.tstep = tstep * 1. # SIMULATION STEP (IN DAYS)
 *         self.period = iperiod * 1.  # NUMBER OF DAYS FOR SUBSTITUTING ALL MIRRORS             # <<<<<<<<<<<<<<
 *         self.tlong = tlong * 1.  # NUMBER OF DAYS TO BE SIMULATED
 *         self.deltat = ideltat * 1. # Days in between mirror exchanges
 */
  if (unlikely(!__pyx_v_iperiod)) { __Pyx_RaiseUnboundLocalError("iperiod"); __PYX_ERR(0, 561, __pyx_L1_error) }
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_iperiod, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_period, __pyx_t_2) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":562
 *         self.tstep = tstep * 1. # SIMULATION STEP (IN DAYS)
 *         self.period = iperiod * 1.  # NUMBER OF DAYS FOR SUBSTITUTING ALL MIRRORS
 *         self.tlong = tlong * 1.  # NUMBER OF DAYS TO BE SIMULATED             # <<<<<<<<<<<<<<
 *         self.deltat = ideltat * 1. # Days in between mirror exchanges
 *         #
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_tlong, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_tlong, __pyx_t_2) < 0) __PYX_ERR(0, 562, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":563
 *         self.period = iperiod * 1.  # NUMBER OF DAYS FOR SUBSTITUTING ALL MIRRORS
 *         self.tlong = tlong * 1.  # NUMBER OF DAYS TO BE SIMULATED
 *         self.deltat = ideltat * 1. # Days in between mirror exchanges             # <<<<<<<<<<<<<<
 *         #
 *         # Number of simulated steps:
 */
  if (unlikely(!__pyx_v_ideltat)) { __Pyx_RaiseUnboundLocalError("ideltat"); __PYX_ERR(0, 563, __pyx_L1_error) }
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_ideltat, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_deltat, __pyx_t_2) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":566
 *         #
 *         # Number of simulated steps:
 *         self.Ntimes = np.int64(np.ceil(self.tlong / self.tstep))             # <<<<<<<<<<<<<<
 *         #
 *         self.days_between_change = self.deltat * 1.#self.period / (1. * self.N)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_int64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_ceil); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tlong); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes, __pyx_t_2) < 0) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":568
 *         self.Ntimes = np.int64(np.ceil(self.tlong / self.tstep))
 *         #
 *         self.days_between_change = self.deltat * 1.#self.period / (1. * self.N)             # <<<<<<<<<<<<<<
 *         self.days_for_each_timestep = self.deltat / self.tstep #self.tstep * 1.
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_deltat); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_days_between_change, __pyx_t_3) < 0) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":569
 *         #
 *         self.days_between_change = self.deltat * 1.#self.period / (1. * self.N)
 *         self.days_for_each_timestep = self.deltat / self.tstep #self.tstep * 1.             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_deltat); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_days_for_each_timestep, __pyx_t_1) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":587
 *         # Caution, this name is missleading, it is  not days for each timestep...
 *         # ... but rather simulation steps in between mirror changes!
 *         if (self.days_for_each_timestep < 1.):             # <<<<<<<<<<<<<<
 *           print('At least one time step per change is needed, returning nan')
 *           sys.exit()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_days_for_each_timestep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_float_1_, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_11) {

    /* "mirror_lib_v04.pyx":588
 *         # ... but rather simulation steps in between mirror changes!
 *         if (self.days_for_each_timestep < 1.):
 *           print('At least one time step per change is needed, returning nan')             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         #
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 588, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":589
 *         if (self.days_for_each_timestep < 1.):
 *           print('At least one time step per change is needed, returning nan')
 *           sys.exit()             # <<<<<<<<<<<<<<
 *         #
 *         self.SimulatedTimes = self.Ntimes * 1
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_sys); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":587
 *         # Caution, this name is missleading, it is  not days for each timestep...
 *         # ... but rather simulation steps in between mirror changes!
 *         if (self.days_for_each_timestep < 1.):             # <<<<<<<<<<<<<<
 *           print('At least one time step per change is needed, returning nan')
 *           sys.exit()
 */
  }

  /* "mirror_lib_v04.pyx":591
 *           sys.exit()
 *         #
 *         self.SimulatedTimes = self.Ntimes * 1             # <<<<<<<<<<<<<<
 *         self.SimulatedTime = self.tlong * 1
 *         print('\tNumber of simulated steps: %i' % (self.Ntimes, ))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTimes, __pyx_t_3) < 0) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":592
 *         #
 *         self.SimulatedTimes = self.Ntimes * 1
 *         self.SimulatedTime = self.tlong * 1             # <<<<<<<<<<<<<<
 *         print('\tNumber of simulated steps: %i' % (self.Ntimes, ))
 *         print('\tNumber of simulated steps in between mirror changes: %i' \
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tlong); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_int_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTime, __pyx_t_2) < 0) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":593
 *         self.SimulatedTimes = self.Ntimes * 1
 *         self.SimulatedTime = self.tlong * 1
 *         print('\tNumber of simulated steps: %i' % (self.Ntimes, ))             # <<<<<<<<<<<<<<
 *         print('\tNumber of simulated steps in between mirror changes: %i' \
 *             % (self.days_for_each_timestep, ))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyUnicode_Format(__pyx_kp_u_Number_of_simulated_steps_i, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":595
 *         print('\tNumber of simulated steps: %i' % (self.Ntimes, ))
 *         print('\tNumber of simulated steps in between mirror changes: %i' \
 *             % (self.days_for_each_timestep, ))             # <<<<<<<<<<<<<<
 * 
 *         #self.time_map = np.zeros((self.N, self.Ntimes, 2))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_days_for_each_timestep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_Number_of_simulated_steps_in_be, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":594
 *         self.SimulatedTime = self.tlong * 1
 *         print('\tNumber of simulated steps: %i' % (self.Ntimes, ))
 *         print('\tNumber of simulated steps in between mirror changes: %i' \             # <<<<<<<<<<<<<<
 *             % (self.days_for_each_timestep, ))
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":599
 *         #self.time_map = np.zeros((self.N, self.Ntimes, 2))
 * # DOES IT WORK AT ALL?
 *         self.time_map = np.zeros((self.N, self.SimulatedTimes, 3), dtype=np.float64)             # <<<<<<<<<<<<<<
 *         #self.cleandustcadence = cleandust * 1.
 *         # Caution, this variable (cleandustcadence) comes in days...
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_float64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_time_map, __pyx_t_5) < 0) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":603
 *         # Caution, this variable (cleandustcadence) comes in days...
 *         # ... and it has to be transformed to simultion steps:
 *         self.cleandustcadence = cleandust / self.tstep             # <<<<<<<<<<<<<<
 *         #from pdb import set_trace as stop
 *         #stop()
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_v_cleandust, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence, __pyx_t_6) < 0) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":608
 * 
 *       #
 *         return             # <<<<<<<<<<<<<<
 *       #
 *     def get_order(self, order):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":290
 *   class primary_obj(object):
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \             # <<<<<<<<<<<<<<
 *             , mltch):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_get_primary_geometry);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_rads);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_Nperfamily);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ideltat);
  __Pyx_XDECREF(__pyx_v_iperiod);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":610
 *         return
 *       #
 *     def get_order(self, order):             # <<<<<<<<<<<<<<
 * 
 *       if (order.upper() == 'RANDOM'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_3get_order(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7primary_11primary_obj_3get_order = {"get_order", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7primary_11primary_obj_3get_order, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_3get_order(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_order = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_order (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_order,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_order", 1, 2, 2, 1); __PYX_ERR(0, 610, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_order") < 0)) __PYX_ERR(0, 610, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_order = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_order", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 610, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_7primary_11primary_obj_2get_order(__pyx_self, __pyx_v_self, __pyx_v_order);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_2get_order(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_order) {
  PyObject *__pyx_v_sort = NULL;
  PyObject *__pyx_v_fsort = NULL;
  PyObject *__pyx_v_it_nnn = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_ref_pos = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_it_x = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_it_y = NULL;
  PyObject *__pyx_v_it_a = NULL;
  PyObject *__pyx_v_it_sort = NULL;
  PyObject *__pyx_v_it_index = NULL;
  PyObject *__pyx_v_azi360 = NULL;
  PyObject *__pyx_v_init_val = NULL;
  PyObject *__pyx_v_dif = NULL;
  PyObject *__pyx_v_adif = NULL;
  PyObject *__pyx_v_iff_azi = NULL;
  PyObject *__pyx_v_itf_sort = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_it_nn2 = NULL;
  PyObject *__pyx_v_it2_a = NULL;
  PyObject *__pyx_v_ww2 = NULL;
  PyObject *__pyx_v_ref_val = NULL;
  PyObject *__pyx_v_off = NULL;
  PyObject *__pyx_v_touse = NULL;
  PyObject *__pyx_v_rdist = NULL;
  PyObject *__pyx_v_ref = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  __Pyx_RefNannySetupContext("get_order", 0);

  /* "mirror_lib_v04.pyx":612
 *     def get_order(self, order):
 * 
 *       if (order.upper() == 'RANDOM'):             # <<<<<<<<<<<<<<
 *         sort = np.zeros((self.N,), dtype=np.int32)
 *         np.random.seed(1)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_order, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_RANDOM, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":613
 * 
 *       if (order.upper() == 'RANDOM'):
 *         sort = np.zeros((self.N,), dtype=np.int32)             # <<<<<<<<<<<<<<
 *         np.random.seed(1)
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_int32); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sort = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":614
 *       if (order.upper() == 'RANDOM'):
 *         sort = np.zeros((self.N,), dtype=np.int32)
 *         np.random.seed(1)             # <<<<<<<<<<<<<<
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1
 *         for it_nnn in range(self.Nfamily):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_seed); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_int_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_int_1);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":615
 *         sort = np.zeros((self.N,), dtype=np.int32)
 *         np.random.seed(1)
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1             # <<<<<<<<<<<<<<
 *         for it_nnn in range(self.Nfamily):
 *           ww=np.where(np.abs(self.families-fsort[it_nnn])<1.e-3)[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_argsort); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_randn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_fsort = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":616
 *         np.random.seed(1)
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww=np.where(np.abs(self.families-fsort[it_nnn])<1.e-3)[0]
 *           sort[ww] = (np.argsort(np.random.randn(6))) * self.Nfamily + it_nnn
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 616, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
      __pyx_t_1 = __pyx_t_6; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 616, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 616, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 616, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 616, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 616, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_9(__pyx_t_1);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 616, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_it_nnn, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":617
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1
 *         for it_nnn in range(self.Nfamily):
 *           ww=np.where(np.abs(self.families-fsort[it_nnn])<1.e-3)[0]             # <<<<<<<<<<<<<<
 *           sort[ww] = (np.argsort(np.random.randn(6))) * self.Nfamily + it_nnn
 *           #print(sort[ww])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_where); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_abs); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_families); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_fsort, __pyx_v_it_nnn); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = PyNumber_Subtract(__pyx_t_5, __pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_3 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_10, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyObject_RichCompare(__pyx_t_3, __pyx_float_1_eneg_3, Py_LT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ww, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":618
 *         for it_nnn in range(self.Nfamily):
 *           ww=np.where(np.abs(self.families-fsort[it_nnn])<1.e-3)[0]
 *           sort[ww] = (np.argsort(np.random.randn(6))) * self.Nfamily + it_nnn             # <<<<<<<<<<<<<<
 *           #print(sort[ww])
 *         sort=np.argsort(sort)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_randn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_6 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_11, __pyx_int_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_int_6);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Add(__pyx_t_6, __pyx_v_it_nnn); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_sort, __pyx_v_ww, __pyx_t_7) < 0)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "mirror_lib_v04.pyx":616
 *         np.random.seed(1)
 *         fsort = np.argsort(np.random.randn(self.Nfamily))+1
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww=np.where(np.abs(self.families-fsort[it_nnn])<1.e-3)[0]
 *           sort[ww] = (np.argsort(np.random.randn(6))) * self.Nfamily + it_nnn
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":620
 *           sort[ww] = (np.argsort(np.random.randn(6))) * self.Nfamily + it_nnn
 *           #print(sort[ww])
 *         sort=np.argsort(sort)             # <<<<<<<<<<<<<<
 *         np.random.seed()
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_argsort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_v_sort) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_sort);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":621
 *           #print(sort[ww])
 *         sort=np.argsort(sort)
 *         np.random.seed()             # <<<<<<<<<<<<<<
 * 
 *       elif (order.upper() == 'SYMMETRIC'):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_random); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_seed); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":612
 *     def get_order(self, order):
 * 
 *       if (order.upper() == 'RANDOM'):             # <<<<<<<<<<<<<<
 *         sort = np.zeros((self.N,), dtype=np.int32)
 *         np.random.seed(1)
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":623
 *         np.random.seed()
 * 
 *       elif (order.upper() == 'SYMMETRIC'):             # <<<<<<<<<<<<<<
 *         sort = np.int16(np.array([]))
 *         ref_pos = np.int16(np.arange(self.N))
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_order, __pyx_n_s_upper); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_SYMMETRIC, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":624
 * 
 *       elif (order.upper() == 'SYMMETRIC'):
 *         sort = np.int16(np.array([]))             # <<<<<<<<<<<<<<
 *         ref_pos = np.int16(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_int16); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_11, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_sort = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":625
 *       elif (order.upper() == 'SYMMETRIC'):
 *         sort = np.int16(np.array([]))
 *         ref_pos = np.int16(np.arange(self.N))             # <<<<<<<<<<<<<<
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_int16); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_7 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_11, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_ref_pos = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":626
 *         sort = np.int16(np.array([]))
 *         ref_pos = np.int16(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 626, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
      __pyx_t_1 = __pyx_t_6; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 626, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 626, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 626, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_9(__pyx_t_1);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 626, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_it_nnn, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":627
 *         ref_pos = np.int16(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]             # <<<<<<<<<<<<<<
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_where); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_families); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_it_nnn, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_11 = PyObject_RichCompare(__pyx_t_7, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ww, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":628
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]             # <<<<<<<<<<<<<<
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xpos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 628, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 628, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_x, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":629
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]             # <<<<<<<<<<<<<<
 *           it_a = self.azimuth[ww]
 *           it_sort = np.argsort(it_a)
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ypos); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 629, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 629, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_y, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":630
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]             # <<<<<<<<<<<<<<
 *           it_sort = np.argsort(it_a)
 *           #
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_azimuth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 630, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_a, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":631
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]
 *           it_sort = np.argsort(it_a)             # <<<<<<<<<<<<<<
 *           #
 *           it_index = list(ref_pos[ww][it_sort])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 631, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_argsort); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 631, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_2, __pyx_v_it_a) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_v_it_a);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 631, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_sort, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":633
 *           it_sort = np.argsort(it_a)
 *           #
 *           it_index = list(ref_pos[ww][it_sort])             # <<<<<<<<<<<<<<
 *           azi360 = list(it_a[it_sort]*180./np.pi)
 *           #
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_ref_pos, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 633, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_it_sort); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 633, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PySequence_List(__pyx_t_11); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 633, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_index, ((PyObject*)__pyx_t_6));
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":634
 *           #
 *           it_index = list(ref_pos[ww][it_sort])
 *           azi360 = list(it_a[it_sort]*180./np.pi)             # <<<<<<<<<<<<<<
 *           #
 *           if (it_nnn == 0):
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_it_a, __pyx_v_it_sort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = PyNumber_Multiply(__pyx_t_6, __pyx_float_180_); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_pi); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_11, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PySequence_List(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 634, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_azi360, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":636
 *           azi360 = list(it_a[it_sort]*180./np.pi)
 *           #
 *           if (it_nnn == 0):             # <<<<<<<<<<<<<<
 *             init_val = 0
 *           else:
 */
      __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_it_nnn, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 636, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_4) {

        /* "mirror_lib_v04.pyx":637
 *           #
 *           if (it_nnn == 0):
 *             init_val = 0             # <<<<<<<<<<<<<<
 *           else:
 *             dif = (azi360 - ref_val + 360) % 360
 */
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_XDECREF_SET(__pyx_v_init_val, __pyx_int_0);

        /* "mirror_lib_v04.pyx":636
 *           azi360 = list(it_a[it_sort]*180./np.pi)
 *           #
 *           if (it_nnn == 0):             # <<<<<<<<<<<<<<
 *             init_val = 0
 *           else:
 */
        goto __pyx_L8;
      }

      /* "mirror_lib_v04.pyx":639
 *             init_val = 0
 *           else:
 *             dif = (azi360 - ref_val + 360) % 360             # <<<<<<<<<<<<<<
 *             adif = np.abs(dif - 120.)
 *             init_val = np.where(adif == np.min(adif))[0][0]
 */
      /*else*/ {
        if (unlikely(!__pyx_v_ref_val)) { __Pyx_RaiseUnboundLocalError("ref_val"); __PYX_ERR(0, 639, __pyx_L1_error) }
        __pyx_t_2 = PyNumber_Subtract(__pyx_v_azi360, __pyx_v_ref_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_360, 0x168, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 639, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_RemainderObjC(__pyx_t_6, __pyx_int_360, 0x168, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_dif, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":640
 *           else:
 *             dif = (azi360 - ref_val + 360) % 360
 *             adif = np.abs(dif - 120.)             # <<<<<<<<<<<<<<
 *             init_val = np.where(adif == np.min(adif))[0][0]
 *           #
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 640, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_abs); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 640, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyFloat_SubtractObjC(__pyx_v_dif, __pyx_float_120_, 120., 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 640, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_11);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_11, function);
          }
        }
        __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 640, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adif, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":641
 *             dif = (azi360 - ref_val + 360) % 360
 *             adif = np.abs(dif - 120.)
 *             init_val = np.where(adif == np.min(adif))[0][0]             # <<<<<<<<<<<<<<
 *           #
 *           iff_azi = np.array([azi360[init_val]])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_min); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_11 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_v_adif) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_adif);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = PyObject_RichCompare(__pyx_v_adif, __pyx_t_11, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_11, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 641, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF_SET(__pyx_v_init_val, __pyx_t_2);
        __pyx_t_2 = 0;
      }
      __pyx_L8:;

      /* "mirror_lib_v04.pyx":643
 *             init_val = np.where(adif == np.min(adif))[0][0]
 *           #
 *           iff_azi = np.array([azi360[init_val]])             # <<<<<<<<<<<<<<
 *           itf_sort = np.array([it_index[init_val]])
 *           it_index.remove(it_index[init_val])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 643, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 643, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_azi360, __pyx_v_init_val); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 643, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = PyList_New(1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 643, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_6);
      PyList_SET_ITEM(__pyx_t_11, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 643, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v_iff_azi, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":644
 *           #
 *           iff_azi = np.array([azi360[init_val]])
 *           itf_sort = np.array([it_index[init_val]])             # <<<<<<<<<<<<<<
 *           it_index.remove(it_index[init_val])
 *           azi360.remove(azi360[init_val])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 644, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_array); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 644, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_it_index, __pyx_v_init_val); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 644, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 644, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_7);
      PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 644, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF_SET(__pyx_v_itf_sort, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":645
 *           iff_azi = np.array([azi360[init_val]])
 *           itf_sort = np.array([it_index[init_val]])
 *           it_index.remove(it_index[init_val])             # <<<<<<<<<<<<<<
 *           azi360.remove(azi360[init_val])
 *           #
 */
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_it_index, __pyx_v_init_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_remove, __pyx_v_it_index, __pyx_t_2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 645, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

      /* "mirror_lib_v04.pyx":646
 *           itf_sort = np.array([it_index[init_val]])
 *           it_index.remove(it_index[init_val])
 *           azi360.remove(azi360[init_val])             # <<<<<<<<<<<<<<
 *           #
 *           #while (np.size(itf_sort) < np.size(ww)):
 */
      __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_azi360, __pyx_v_init_val); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_remove, __pyx_v_azi360, __pyx_t_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":649
 *           #
 *           #while (np.size(itf_sort) < np.size(ww)):
 *           for it_nn2 in range(np.size(ww)-1):             # <<<<<<<<<<<<<<
 *             it2_a = iff_azi[-1]
 *             dif = (azi360 - it2_a + 360) % 360
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_11, __pyx_v_ww) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_ww);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
        __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_12 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_12 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_13 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 649, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_6))) {
            if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 649, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 649, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_13(__pyx_t_6);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 649, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_it_nn2, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":650
 *           #while (np.size(itf_sort) < np.size(ww)):
 *           for it_nn2 in range(np.size(ww)-1):
 *             it2_a = iff_azi[-1]             # <<<<<<<<<<<<<<
 *             dif = (azi360 - it2_a + 360) % 360
 *             #print dif, it2_a
 */
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_iff_azi, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_XDECREF_SET(__pyx_v_it2_a, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":651
 *           for it_nn2 in range(np.size(ww)-1):
 *             it2_a = iff_azi[-1]
 *             dif = (azi360 - it2_a + 360) % 360             # <<<<<<<<<<<<<<
 *             #print dif, it2_a
 *             #print it_index
 */
        __pyx_t_2 = PyNumber_Subtract(__pyx_v_azi360, __pyx_v_it2_a); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_11 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_360, 0x168, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_RemainderObjC(__pyx_t_11, __pyx_int_360, 0x168, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF_SET(__pyx_v_dif, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":654
 *             #print dif, it2_a
 *             #print it_index
 *             adif = np.abs(dif - 120.)             # <<<<<<<<<<<<<<
 *             ww2 = np.where(adif == np.min(adif))[0][0]
 *             #print ww2
 */
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 654, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_abs); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 654, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyFloat_SubtractObjC(__pyx_v_dif, __pyx_float_120_, 120., 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 654, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 654, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adif, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":655
 *             #print it_index
 *             adif = np.abs(dif - 120.)
 *             ww2 = np.where(adif == np.min(adif))[0][0]             # <<<<<<<<<<<<<<
 *             #print ww2
 *             itf_sort = np.hstack([itf_sort, it_index[ww2]])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_where); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_min); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
          }
        }
        __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_v_adif) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_v_adif);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyObject_RichCompare(__pyx_v_adif, __pyx_t_7, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_11);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_11, function);
          }
        }
        __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_7, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_10);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_11, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ww2, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":657
 *             ww2 = np.where(adif == np.min(adif))[0][0]
 *             #print ww2
 *             itf_sort = np.hstack([itf_sort, it_index[ww2]])             # <<<<<<<<<<<<<<
 *             iff_azi = np.hstack([iff_azi, azi360[ww2]])
 *             #
 */
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_hstack); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_it_index, __pyx_v_ww2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_itf_sort);
        __Pyx_GIVEREF(__pyx_v_itf_sort);
        PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_itf_sort);
        __Pyx_GIVEREF(__pyx_t_11);
        PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
          }
        }
        __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_11, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF_SET(__pyx_v_itf_sort, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":658
 *             #print ww2
 *             itf_sort = np.hstack([itf_sort, it_index[ww2]])
 *             iff_azi = np.hstack([iff_azi, azi360[ww2]])             # <<<<<<<<<<<<<<
 *             #
 *             it_index.remove(it_index[ww2])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_hstack); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_azi360, __pyx_v_ww2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = PyList_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_INCREF(__pyx_v_iff_azi);
        __Pyx_GIVEREF(__pyx_v_iff_azi);
        PyList_SET_ITEM(__pyx_t_11, 0, __pyx_v_iff_azi);
        __Pyx_GIVEREF(__pyx_t_10);
        PyList_SET_ITEM(__pyx_t_11, 1, __pyx_t_10);
        __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_10, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_11);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF_SET(__pyx_v_iff_azi, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":660
 *             iff_azi = np.hstack([iff_azi, azi360[ww2]])
 *             #
 *             it_index.remove(it_index[ww2])             # <<<<<<<<<<<<<<
 *             azi360.remove(azi360[ww2])
 *           #
 */
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_it_index, __pyx_v_ww2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_7 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_remove, __pyx_v_it_index, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "mirror_lib_v04.pyx":661
 *             #
 *             it_index.remove(it_index[ww2])
 *             azi360.remove(azi360[ww2])             # <<<<<<<<<<<<<<
 *           #
 *           ref_val = iff_azi[-1] * 1.
 */
        __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_azi360, __pyx_v_ww2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 661, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyList_Type_remove, __pyx_v_azi360, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 661, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":649
 *           #
 *           #while (np.size(itf_sort) < np.size(ww)):
 *           for it_nn2 in range(np.size(ww)-1):             # <<<<<<<<<<<<<<
 *             it2_a = iff_azi[-1]
 *             dif = (azi360 - it2_a + 360) % 360
 */
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":663
 *             azi360.remove(azi360[ww2])
 *           #
 *           ref_val = iff_azi[-1] * 1.             # <<<<<<<<<<<<<<
 *           #
 *           sort = np.hstack([sort, itf_sort])
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_iff_azi, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ref_val, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":665
 *           ref_val = iff_azi[-1] * 1.
 *           #
 *           sort = np.hstack([sort, itf_sort])             # <<<<<<<<<<<<<<
 * 
 *       elif (order.upper() == 'LINEAL'):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_hstack); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_v_sort);
      __Pyx_GIVEREF(__pyx_v_sort);
      PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_sort);
      __Pyx_INCREF(__pyx_v_itf_sort);
      __Pyx_GIVEREF(__pyx_v_itf_sort);
      PyList_SET_ITEM(__pyx_t_6, 1, __pyx_v_itf_sort);
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_11, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":626
 *         sort = np.int16(np.array([]))
 *         ref_pos = np.int16(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":623
 *         np.random.seed()
 * 
 *       elif (order.upper() == 'SYMMETRIC'):             # <<<<<<<<<<<<<<
 *         sort = np.int16(np.array([]))
 *         ref_pos = np.int16(np.arange(self.N))
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":667
 *           sort = np.hstack([sort, itf_sort])
 * 
 *       elif (order.upper() == 'LINEAL'):             # <<<<<<<<<<<<<<
 * 
 *         sort = np.int32(np.array([]))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_order, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_LINEAL, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":669
 *       elif (order.upper() == 'LINEAL'):
 * 
 *         sort = np.int32(np.array([]))             # <<<<<<<<<<<<<<
 *         ref_pos = np.int32(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
      }
    }
    __pyx_t_2 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_10, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_11, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_sort = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":670
 * 
 *         sort = np.int32(np.array([]))
 *         ref_pos = np.int32(np.arange(self.N))             # <<<<<<<<<<<<<<
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_int32); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_arange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_7 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_10, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_11);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_ref_pos = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":671
 *         sort = np.int32(np.array([]))
 *         ref_pos = np.int32(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Nfamily); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 671, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 671, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 671, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 671, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 671, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_9(__pyx_t_1);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 671, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_it_nnn, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":672
 *         ref_pos = np.int32(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]             # <<<<<<<<<<<<<<
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_families); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_11 = __Pyx_PyInt_AddObjC(__pyx_v_it_nnn, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_10 = PyObject_RichCompare(__pyx_t_7, __pyx_t_11, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_11, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_10);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ww, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":673
 *         for it_nnn in range(self.Nfamily):
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]             # <<<<<<<<<<<<<<
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xpos); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 673, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_x, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":674
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]             # <<<<<<<<<<<<<<
 *           it_a = self.azimuth[ww]
 *           it_sort = np.argsort(it_a)
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ypos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_y, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":675
 *           it_x = self.xpos[ww]
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]             # <<<<<<<<<<<<<<
 *           it_sort = np.argsort(it_a)
 *           #stop()
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_azimuth); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_ww); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_a, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":676
 *           it_y = self.ypos[ww]
 *           it_a = self.azimuth[ww]
 *           it_sort = np.argsort(it_a)             # <<<<<<<<<<<<<<
 *           #stop()
 *           sort = np.hstack([sort, ref_pos[ww][it_sort]])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_10);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_10, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_6, __pyx_v_it_a) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_v_it_a);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it_sort, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":678
 *           it_sort = np.argsort(it_a)
 *           #stop()
 *           sort = np.hstack([sort, ref_pos[ww][it_sort]])             # <<<<<<<<<<<<<<
 * 
 *       elif (order.upper() == 'AZIMUTHAL'):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_hstack); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_ref_pos, __pyx_v_ww); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_t_10, __pyx_v_it_sort); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_v_sort);
      __Pyx_GIVEREF(__pyx_v_sort);
      PyList_SET_ITEM(__pyx_t_10, 0, __pyx_v_sort);
      __Pyx_GIVEREF(__pyx_t_11);
      PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_11);
      __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_11, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_10);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":671
 *         sort = np.int32(np.array([]))
 *         ref_pos = np.int32(np.arange(self.N))
 *         for it_nnn in range(self.Nfamily):             # <<<<<<<<<<<<<<
 *           ww = np.where(self.families == (it_nnn + 1))[0]
 *           it_x = self.xpos[ww]
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":667
 *           sort = np.hstack([sort, itf_sort])
 * 
 *       elif (order.upper() == 'LINEAL'):             # <<<<<<<<<<<<<<
 * 
 *         sort = np.int32(np.array([]))
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":680
 *           sort = np.hstack([sort, ref_pos[ww][it_sort]])
 * 
 *       elif (order.upper() == 'AZIMUTHAL'):             # <<<<<<<<<<<<<<
 *         #sort = np.argsort(self.azimuth+180./np.pi)[::-1]
 *         sort = np.argsort(self.azimuth)[::-1]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_order, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_AZIMUTHAL, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":682
 *       elif (order.upper() == 'AZIMUTHAL'):
 *         #sort = np.argsort(self.azimuth+180./np.pi)[::-1]
 *         sort = np.argsort(self.azimuth)[::-1]             # <<<<<<<<<<<<<<
 * 
 *         off = 0
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_argsort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 682, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_azimuth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_10, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 682, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_slice__24); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 682, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_sort = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":684
 *         sort = np.argsort(self.azimuth)[::-1]
 * 
 *         off = 0             # <<<<<<<<<<<<<<
 *         touse = self.azimuth[sort]
 *         rdist = self.dist[sort] * 1.
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_off = __pyx_int_0;

    /* "mirror_lib_v04.pyx":685
 * 
 *         off = 0
 *         touse = self.azimuth[sort]             # <<<<<<<<<<<<<<
 *         rdist = self.dist[sort] * 1.
 *         while (off<sort.size):
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_azimuth); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_sort); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_touse = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":686
 *         off = 0
 *         touse = self.azimuth[sort]
 *         rdist = self.dist[sort] * 1.             # <<<<<<<<<<<<<<
 *         while (off<sort.size):
 *           ref = touse[off]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_dist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_sort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_rdist = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":687
 *         touse = self.azimuth[sort]
 *         rdist = self.dist[sort] * 1.
 *         while (off<sort.size):             # <<<<<<<<<<<<<<
 *           ref = touse[off]
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]
 */
    while (1) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_sort, __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 687, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyObject_RichCompare(__pyx_v_off, __pyx_t_1, Py_LT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 687, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 687, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (!__pyx_t_4) break;

      /* "mirror_lib_v04.pyx":688
 *         rdist = self.dist[sort] * 1.
 *         while (off<sort.size):
 *           ref = touse[off]             # <<<<<<<<<<<<<<
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]
 *           if (np.size(ww)>1):
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_touse, __pyx_v_off); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 688, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XDECREF_SET(__pyx_v_ref, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":689
 *         while (off<sort.size):
 *           ref = touse[off]
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]             # <<<<<<<<<<<<<<
 *           if (np.size(ww)>1):
 *             sort[ww]=sort[ww][np.argsort(rdist[ww])[::-1]]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_where); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_abs); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyNumber_Subtract(__pyx_v_touse, __pyx_v_ref); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_7, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_10);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyObject_RichCompare(__pyx_t_1, __pyx_float_1_eneg_6, Py_LT); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_6 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ww, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":690
 *           ref = touse[off]
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]
 *           if (np.size(ww)>1):             # <<<<<<<<<<<<<<
 *             sort[ww]=sort[ww][np.argsort(rdist[ww])[::-1]]
 *           off = off+ww.size
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_size); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_6, __pyx_v_ww) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_v_ww);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyObject_RichCompare(__pyx_t_2, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (__pyx_t_4) {

        /* "mirror_lib_v04.pyx":691
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]
 *           if (np.size(ww)>1):
 *             sort[ww]=sort[ww][np.argsort(rdist[ww])[::-1]]             # <<<<<<<<<<<<<<
 *           off = off+ww.size
 *         #nazim = np.arctan2(self.xpos, self.ypos)
 */
        __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_sort, __pyx_v_ww); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_rdist, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_2 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_10, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_slice__24); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_11, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(PyObject_SetItem(__pyx_v_sort, __pyx_v_ww, __pyx_t_2) < 0)) __PYX_ERR(0, 691, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "mirror_lib_v04.pyx":690
 *           ref = touse[off]
 *           ww = np.where(np.abs(touse-ref)<1.e-6)[0]
 *           if (np.size(ww)>1):             # <<<<<<<<<<<<<<
 *             sort[ww]=sort[ww][np.argsort(rdist[ww])[::-1]]
 *           off = off+ww.size
 */
      }

      /* "mirror_lib_v04.pyx":692
 *           if (np.size(ww)>1):
 *             sort[ww]=sort[ww][np.argsort(rdist[ww])[::-1]]
 *           off = off+ww.size             # <<<<<<<<<<<<<<
 *         #nazim = np.arctan2(self.xpos, self.ypos)
 *         #sort = np.argsort(nazim)
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_ww, __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyNumber_Add(__pyx_v_off, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF_SET(__pyx_v_off, __pyx_t_1);
      __pyx_t_1 = 0;
    }

    /* "mirror_lib_v04.pyx":680
 *           sort = np.hstack([sort, ref_pos[ww][it_sort]])
 * 
 *       elif (order.upper() == 'AZIMUTHAL'):             # <<<<<<<<<<<<<<
 *         #sort = np.argsort(self.azimuth+180./np.pi)[::-1]
 *         sort = np.argsort(self.azimuth)[::-1]
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":698
 * 
 *         #sort = np.arange(self.N)
 *       elif (order.upper() == 'EQUAL'):             # <<<<<<<<<<<<<<
 *         sort = np.int32(self.azimuth * 0)
 *       else:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_order, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_11 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_EQUAL, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":699
 *         #sort = np.arange(self.N)
 *       elif (order.upper() == 'EQUAL'):
 *         sort = np.int32(self.azimuth * 0)             # <<<<<<<<<<<<<<
 *       else:
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_int32); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_azimuth); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_int_0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_v_sort = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":698
 * 
 *         #sort = np.arange(self.N)
 *       elif (order.upper() == 'EQUAL'):             # <<<<<<<<<<<<<<
 *         sort = np.int32(self.azimuth * 0)
 *       else:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":701
 *         sort = np.int32(self.azimuth * 0)
 *       else:
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")             # <<<<<<<<<<<<<<
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 701, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":702
 *       else:
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")
 *         print("\tRANDOM")             # <<<<<<<<<<<<<<
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":703
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")             # <<<<<<<<<<<<<<
 *         print("\tLINEAL")
 *         print("\tAZIMUTHAL")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":704
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")             # <<<<<<<<<<<<<<
 *         print("\tAZIMUTHAL")
 *         sys.exit()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":705
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")
 *         print("\tAZIMUTHAL")             # <<<<<<<<<<<<<<
 *         sys.exit()
 *       #.stop()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":706
 *         print("\tLINEAL")
 *         print("\tAZIMUTHAL")
 *         sys.exit()             # <<<<<<<<<<<<<<
 *       #.stop()
 *       #.print self.families[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_sys); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":723
 *     #
 *       #print(order.upper(), sort)
 *       self.sort = sort * 1             # <<<<<<<<<<<<<<
 * #>< CHECK SORTING      pl.ion()
 * #>< CHECK SORTING      pl.clf()
 */
  if (unlikely(!__pyx_v_sort)) { __Pyx_RaiseUnboundLocalError("sort"); __PYX_ERR(0, 723, __pyx_L1_error) }
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_sort, __pyx_int_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sort, __pyx_t_1) < 0) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":736
 * #>< CHECK SORTING      stop()
 *     #
 *       return             # <<<<<<<<<<<<<<
 *     #
 *     def get_times_new(self, ideal):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":610
 *         return
 *       #
 *     def get_order(self, order):             # <<<<<<<<<<<<<<
 * 
 *       if (order.upper() == 'RANDOM'):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_order", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sort);
  __Pyx_XDECREF(__pyx_v_fsort);
  __Pyx_XDECREF(__pyx_v_it_nnn);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_ref_pos);
  __Pyx_XDECREF(__pyx_v_it_x);
  __Pyx_XDECREF(__pyx_v_it_y);
  __Pyx_XDECREF(__pyx_v_it_a);
  __Pyx_XDECREF(__pyx_v_it_sort);
  __Pyx_XDECREF(__pyx_v_it_index);
  __Pyx_XDECREF(__pyx_v_azi360);
  __Pyx_XDECREF(__pyx_v_init_val);
  __Pyx_XDECREF(__pyx_v_dif);
  __Pyx_XDECREF(__pyx_v_adif);
  __Pyx_XDECREF(__pyx_v_iff_azi);
  __Pyx_XDECREF(__pyx_v_itf_sort);
  __Pyx_XDECREF(__pyx_v_it_nn2);
  __Pyx_XDECREF(__pyx_v_it2_a);
  __Pyx_XDECREF(__pyx_v_ww2);
  __Pyx_XDECREF(__pyx_v_ref_val);
  __Pyx_XDECREF(__pyx_v_off);
  __Pyx_XDECREF(__pyx_v_touse);
  __Pyx_XDECREF(__pyx_v_rdist);
  __Pyx_XDECREF(__pyx_v_ref);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":738
 *       return
 *     #
 *     def get_times_new(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_5get_times_new(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7primary_11primary_obj_5get_times_new = {"get_times_new", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7primary_11primary_obj_5get_times_new, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_5get_times_new(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ideal = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_times_new (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ideal,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ideal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_times_new", 1, 2, 2, 1); __PYX_ERR(0, 738, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_times_new") < 0)) __PYX_ERR(0, 738, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ideal = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_times_new", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 738, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_times_new", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_7primary_11primary_obj_4get_times_new(__pyx_self, __pyx_v_self, __pyx_v_ideal);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_4get_times_new(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ideal) {
  CYTHON_UNUSED PyObject *__pyx_v_to_be_rolled = NULL;
  double __pyx_v_frac;
  PyObject *__pyx_v_cnt = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_offset = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_uts = NULL;
  PyObject *__pyx_v_initial_num_cln_since_last_sch = NULL;
  PyObject *__pyx_v_inital_amount_dust_in_sim_steps = NULL;
  PyObject *__pyx_v_first_acc_amount_dust_in_sim_steps = NULL;
  PyObject *__pyx_v_aux = NULL;
  PyObject *__pyx_v_ginit_dust_val = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_bu_ginit_dust_val = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_it_sgm = NULL;
  PyObject *__pyx_v_it_ttt = NULL;
  PyObject *__pyx_v_aux_seg_chg = NULL;
  PyObject *__pyx_v_excess_sim_step = NULL;
  PyObject *__pyx_v_init_dust_val = NULL;
  PyObject *__pyx_v_last_dust_val = NULL;
  PyObject *__pyx_v_dum = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  Py_ssize_t __pyx_t_15;
  PyObject *(*__pyx_t_16)(PyObject *);
  __Pyx_RefNannySetupContext("get_times_new", 0);

  /* "mirror_lib_v04.pyx":741
 *     #
 * 
 *       if (ideal!=True):             # <<<<<<<<<<<<<<
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_ideal, Py_True, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 741, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":744
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 *         to_be_rolled = np.linspace(0.,self.SimulatedTime \             # <<<<<<<<<<<<<<
 *             , self.SimulatedTimes) % self.period
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTime); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "mirror_lib_v04.pyx":745
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 *         to_be_rolled = np.linspace(0.,self.SimulatedTime \
 *             , self.SimulatedTimes) % self.period             # <<<<<<<<<<<<<<
 * 
 * # Dust:
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_float_0_);
      __Pyx_GIVEREF(__pyx_float_0_);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_float_0_);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_period); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyNumber_Remainder(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_to_be_rolled = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":748
 * 
 * # Dust:
 *         frac = 0.099999             # <<<<<<<<<<<<<<
 *   #      frac = 0.30
 * 
 */
    __pyx_v_frac = 0.099999;

    /* "mirror_lib_v04.pyx":751
 *   #      frac = 0.30
 * 
 *         cnt = 0             # <<<<<<<<<<<<<<
 *         while (cnt<self.N):
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_cnt = __pyx_int_0;

    /* "mirror_lib_v04.pyx":752
 * 
 *         cnt = 0
 *         while (cnt<self.N):             # <<<<<<<<<<<<<<
 * 
 *           for i in range(self.mltch):
 */
    while (1) {
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 752, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_cnt, __pyx_t_8, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 752, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 752, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_2) break;

      /* "mirror_lib_v04.pyx":754
 *         while (cnt<self.N):
 * 
 *           for i in range(self.mltch):             # <<<<<<<<<<<<<<
 * 
 *             # wrong??:offset = self.days_between_change \
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mltch); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 754, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 754, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
        __pyx_t_4 = __pyx_t_8; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
        __pyx_t_10 = NULL;
      } else {
        __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 754, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 754, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      for (;;) {
        if (likely(!__pyx_t_10)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 754, __pyx_L1_error)
            #else
            __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 754, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            #endif
          } else {
            if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 754, __pyx_L1_error)
            #else
            __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 754, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            #endif
          }
        } else {
          __pyx_t_8 = __pyx_t_10(__pyx_t_4);
          if (unlikely(!__pyx_t_8)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 754, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_8);
        }
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_8);
        __pyx_t_8 = 0;

        /* "mirror_lib_v04.pyx":758
 *             # wrong??:offset = self.days_between_change \
 *             # wrong??:    * (self.deltat/self.tstep * (self.sort[cnt] // self.mltch))
 *             offset = ( (self.sort[cnt]//self.mltch) * self.days_between_change ) \             # <<<<<<<<<<<<<<
 *                 / self.tstep
 *             #stop()
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sort); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_8, __pyx_v_cnt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mltch); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_5 = PyNumber_FloorDivide(__pyx_t_1, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_days_between_change); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 758, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "mirror_lib_v04.pyx":759
 *             # wrong??:    * (self.deltat/self.tstep * (self.sort[cnt] // self.mltch))
 *             offset = ( (self.sort[cnt]//self.mltch) * self.days_between_change ) \
 *                 / self.tstep             # <<<<<<<<<<<<<<
 *             #stop()
 * 
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "mirror_lib_v04.pyx":764
 *             # wrong??:self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \             # <<<<<<<<<<<<<<
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period
 *             # in days.
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_arange); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "mirror_lib_v04.pyx":765
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period             # <<<<<<<<<<<<<<
 *             # in days.
 * 
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_float64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "mirror_lib_v04.pyx":764
 *             # wrong??:self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \             # <<<<<<<<<<<<<<
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period
 *             # in days.
 */
        __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "mirror_lib_v04.pyx":765
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period             # <<<<<<<<<<<<<<
 *             # in days.
 * 
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyNumber_Multiply(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyNumber_Multiply(__pyx_v_offset, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_period); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = PyNumber_Remainder(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 765, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "mirror_lib_v04.pyx":764
 *             # wrong??:self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \             # <<<<<<<<<<<<<<
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period
 *             # in days.
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_cnt);
        __Pyx_GIVEREF(__pyx_v_cnt);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_cnt);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_slice__30);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_0);
        if (unlikely(PyObject_SetItem(__pyx_t_6, __pyx_t_5, __pyx_t_1) < 0)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "mirror_lib_v04.pyx":768
 *             # in days.
 * 
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \             # <<<<<<<<<<<<<<
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \
 *                 %self.cleandustcadence)*self.tstep]),axis=0)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_min); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_vstack); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_v_cnt);
        __Pyx_GIVEREF(__pyx_v_cnt);
        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_cnt);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_slice__30);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_int_0);
        __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":769
 * 
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \             # <<<<<<<<<<<<<<
 *                 %self.cleandustcadence)*self.tstep]),axis=0)
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_np); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_float64); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_14) < 0) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_12, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 769, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":770
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \
 *                 %self.cleandustcadence)*self.tstep]),axis=0)             # <<<<<<<<<<<<<<
 * 
 * #            self.time_map[cnt,:,2] = ((1.+frac)**np.floor( \
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 770, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = PyNumber_Remainder(__pyx_t_14, __pyx_t_3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 770, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 770, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_14 = PyNumber_Multiply(__pyx_t_12, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 770, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":768
 *             # in days.
 * 
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \             # <<<<<<<<<<<<<<
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \
 *                 %self.cleandustcadence)*self.tstep]),axis=0)
 */
        __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_11);
        PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_14);
        PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_14);
        __pyx_t_11 = 0;
        __pyx_t_14 = 0;
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_1 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_14, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "mirror_lib_v04.pyx":770
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \
 *                 %self.cleandustcadence)*self.tstep]),axis=0)             # <<<<<<<<<<<<<<
 * 
 * #            self.time_map[cnt,:,2] = ((1.+frac)**np.floor( \
 */
        __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 770, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 770, __pyx_L1_error)

        /* "mirror_lib_v04.pyx":768
 *             # in days.
 * 
 *             self.time_map[cnt,:,1] = np.min(np.vstack([self.time_map[cnt \             # <<<<<<<<<<<<<<
 *                 ,:,0], (np.arange(self.Ntimes,dtype=np.float64) \
 *                 %self.cleandustcadence)*self.tstep]),axis=0)
 */
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_cnt);
        __Pyx_GIVEREF(__pyx_v_cnt);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_cnt);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_slice__30);
        __Pyx_INCREF(__pyx_int_1);
        __Pyx_GIVEREF(__pyx_int_1);
        PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_int_1);
        if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_t_8, __pyx_t_3) < 0)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":779
 * 
 *         #    print(i, cnt, offset, self.time_map[cnt,0,0])
 *             cnt = cnt+1             # <<<<<<<<<<<<<<
 * 
 *         import apy_utils as uts
 */
        __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_cnt, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_cnt, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "mirror_lib_v04.pyx":754
 *         while (cnt<self.N):
 * 
 *           for i in range(self.mltch):             # <<<<<<<<<<<<<<
 * 
 *             # wrong??:offset = self.days_between_change \
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }

    /* "mirror_lib_v04.pyx":781
 *             cnt = cnt+1
 * 
 *         import apy_utils as uts             # <<<<<<<<<<<<<<
 *         #stop()
 * #
 */
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_apy_utils, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_uts = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":813
 * #
 * 
 *         initial_num_cln_since_last_sch = (self.time_map[:,0,0] \             # <<<<<<<<<<<<<<
 *             / self.tstep) / self.cleandustcadence
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_tuple__31); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":814
 * 
 *         initial_num_cln_since_last_sch = (self.time_map[:,0,0] \
 *             / self.tstep) / self.cleandustcadence             # <<<<<<<<<<<<<<
 * 
 *         inital_amount_dust_in_sim_steps = initial_num_cln_since_last_sch \
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_initial_num_cln_since_last_sch = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":817
 * 
 *         inital_amount_dust_in_sim_steps = initial_num_cln_since_last_sch \
 *             - np.floor(initial_num_cln_since_last_sch)             # <<<<<<<<<<<<<<
 * 
 *         first_acc_amount_dust_in_sim_steps \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_floor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_v_initial_num_cln_since_last_sch) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_initial_num_cln_since_last_sch);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Subtract(__pyx_v_initial_num_cln_since_last_sch, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_inital_amount_dust_in_sim_steps = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":820
 * 
 *         first_acc_amount_dust_in_sim_steps \
 *             = inital_amount_dust_in_sim_steps * frac             # <<<<<<<<<<<<<<
 * 
 *         #
 */
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_frac); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_inital_amount_dust_in_sim_steps, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_first_acc_amount_dust_in_sim_steps = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":824
 *         #
 *         # Accumulate initial dust for every segment:
 *         aux = np.floor(initial_num_cln_since_last_sch).astype("i4")             # <<<<<<<<<<<<<<
 *         ginit_dust_val = aux * 0. + first_acc_amount_dust_in_sim_steps \
 *             * self.tstep
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_floor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_v_initial_num_cln_since_last_sch) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_initial_num_cln_since_last_sch);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_astype); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_8, __pyx_n_u_i4) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_n_u_i4);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_aux = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":825
 *         # Accumulate initial dust for every segment:
 *         aux = np.floor(initial_num_cln_since_last_sch).astype("i4")
 *         ginit_dust_val = aux * 0. + first_acc_amount_dust_in_sim_steps \             # <<<<<<<<<<<<<<
 *             * self.tstep
 * 
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_aux, __pyx_float_0_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "mirror_lib_v04.pyx":826
 *         aux = np.floor(initial_num_cln_since_last_sch).astype("i4")
 *         ginit_dust_val = aux * 0. + first_acc_amount_dust_in_sim_steps \
 *             * self.tstep             # <<<<<<<<<<<<<<
 * 
 *         bu_ginit_dust_val = ginit_dust_val * 1.
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 826, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyNumber_Multiply(__pyx_v_first_acc_amount_dust_in_sim_steps, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 826, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":825
 *         # Accumulate initial dust for every segment:
 *         aux = np.floor(initial_num_cln_since_last_sch).astype("i4")
 *         ginit_dust_val = aux * 0. + first_acc_amount_dust_in_sim_steps \             # <<<<<<<<<<<<<<
 *             * self.tstep
 * 
 */
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_ginit_dust_val = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":828
 *             * self.tstep
 * 
 *         bu_ginit_dust_val = ginit_dust_val * 1.             # <<<<<<<<<<<<<<
 * 
 *         while (np.max(aux)>0):
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_ginit_dust_val, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_bu_ginit_dust_val = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":830
 *         bu_ginit_dust_val = ginit_dust_val * 1.
 * 
 *         while (np.max(aux)>0):             # <<<<<<<<<<<<<<
 * 
 *           ww = np.where(aux > 0)[0]
 */
    while (1) {
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_v_aux) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_aux);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_2) break;

      /* "mirror_lib_v04.pyx":832
 *         while (np.max(aux)>0):
 * 
 *           ww = np.where(aux > 0)[0]             # <<<<<<<<<<<<<<
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_where); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_aux, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 832, __pyx_L1_error)
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_1);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_ww, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":834
 *           ww = np.where(aux > 0)[0]
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \             # <<<<<<<<<<<<<<
 *               * self.tstep) * frac
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_ginit_dust_val, __pyx_v_ww); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "mirror_lib_v04.pyx":835
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \
 *               * self.tstep) * frac             # <<<<<<<<<<<<<<
 * 
 *           aux = aux - 1
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":834
 *           ww = np.where(aux > 0)[0]
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \             # <<<<<<<<<<<<<<
 *               * self.tstep) * frac
 * 
 */
      __pyx_t_1 = PyNumber_Add(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":835
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \
 *               * self.tstep) * frac             # <<<<<<<<<<<<<<
 * 
 *           aux = aux - 1
 */
      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_frac); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":834
 *           ww = np.where(aux > 0)[0]
 * 
 *           ginit_dust_val[ww] = (ginit_dust_val[ww] + self.cleandustcadence \             # <<<<<<<<<<<<<<
 *               * self.tstep) * frac
 * 
 */
      if (unlikely(PyObject_SetItem(__pyx_v_ginit_dust_val, __pyx_v_ww, __pyx_t_8) < 0)) __PYX_ERR(0, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":837
 *               * self.tstep) * frac
 * 
 *           aux = aux - 1             # <<<<<<<<<<<<<<
 * 
 *         #for itn in range(aux.size):
 */
      __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_v_aux, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_aux, __pyx_t_8);
      __pyx_t_8 = 0;
    }

    /* "mirror_lib_v04.pyx":844
 *         #stop()
 * 
 *         it_sgm = 0             # <<<<<<<<<<<<<<
 *         for it_sgm in range(self.N):
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_it_sgm = __pyx_int_0;

    /* "mirror_lib_v04.pyx":845
 * 
 *         it_sgm = 0
 *         for it_sgm in range(self.N):             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 845, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 845, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 845, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 845, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 845, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 845, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 845, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 845, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_8);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 845, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_DECREF_SET(__pyx_v_it_sgm, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":848
 * 
 * 
 *           for it_ttt in range(self.Ntimes):             # <<<<<<<<<<<<<<
 * 
 *             # First time:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 848, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_4 = __pyx_t_1; __Pyx_INCREF(__pyx_t_4); __pyx_t_15 = 0;
        __pyx_t_16 = NULL;
      } else {
        __pyx_t_15 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 848, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_16 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 848, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (likely(!__pyx_t_16)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_15 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_15); __Pyx_INCREF(__pyx_t_1); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 848, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          } else {
            if (__pyx_t_15 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_15); __Pyx_INCREF(__pyx_t_1); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 848, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          }
        } else {
          __pyx_t_1 = __pyx_t_16(__pyx_t_4);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 848, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_it_ttt, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "mirror_lib_v04.pyx":851
 * 
 *             # First time:
 *             if (it_ttt == 0):             # <<<<<<<<<<<<<<
 *               print(" Segment %i dust value: %.4f" % (it_sgm, ginit_dust_val[it_sgm]))
 *               self.time_map[it_sgm, it_ttt, 2] = ginit_dust_val[it_sgm] * 1.
 */
        __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_it_ttt, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 851, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_2) {

          /* "mirror_lib_v04.pyx":852
 *             # First time:
 *             if (it_ttt == 0):
 *               print(" Segment %i dust value: %.4f" % (it_sgm, ginit_dust_val[it_sgm]))             # <<<<<<<<<<<<<<
 *               self.time_map[it_sgm, it_ttt, 2] = ginit_dust_val[it_sgm] * 1.
 *               continue
 */
          __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_ginit_dust_val, __pyx_v_it_sgm); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 852, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 852, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_INCREF(__pyx_v_it_sgm);
          __Pyx_GIVEREF(__pyx_v_it_sgm);
          PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_it_sgm);
          __Pyx_GIVEREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyUnicode_Format(__pyx_kp_u_Segment_i_dust_value_4f, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 852, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 852, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "mirror_lib_v04.pyx":853
 *             if (it_ttt == 0):
 *               print(" Segment %i dust value: %.4f" % (it_sgm, ginit_dust_val[it_sgm]))
 *               self.time_map[it_sgm, it_ttt, 2] = ginit_dust_val[it_sgm] * 1.             # <<<<<<<<<<<<<<
 *               continue
 * 
 */
          __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_ginit_dust_val, __pyx_v_it_sgm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 853, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 853, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 853, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 853, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_INCREF(__pyx_v_it_sgm);
          __Pyx_GIVEREF(__pyx_v_it_sgm);
          PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_sgm);
          __Pyx_INCREF(__pyx_v_it_ttt);
          __Pyx_GIVEREF(__pyx_v_it_ttt);
          PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_it_ttt);
          __Pyx_INCREF(__pyx_int_2);
          __Pyx_GIVEREF(__pyx_int_2);
          PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_2);
          if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_5, __pyx_t_1) < 0)) __PYX_ERR(0, 853, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "mirror_lib_v04.pyx":854
 *               print(" Segment %i dust value: %.4f" % (it_sgm, ginit_dust_val[it_sgm]))
 *               self.time_map[it_sgm, it_ttt, 2] = ginit_dust_val[it_sgm] * 1.
 *               continue             # <<<<<<<<<<<<<<
 * 
 *             # If we have changed the segment in this last sim. time:
 */
          goto __pyx_L12_continue;

          /* "mirror_lib_v04.pyx":851
 * 
 *             # First time:
 *             if (it_ttt == 0):             # <<<<<<<<<<<<<<
 *               print(" Segment %i dust value: %.4f" % (it_sgm, ginit_dust_val[it_sgm]))
 *               self.time_map[it_sgm, it_ttt, 2] = ginit_dust_val[it_sgm] * 1.
 */
        }

        /* "mirror_lib_v04.pyx":857
 * 
 *             # If we have changed the segment in this last sim. time:
 *             aux_seg_chg = self.time_map[it_sgm, it_ttt, 0] / self.tstep             # <<<<<<<<<<<<<<
 *             if (aux_seg_chg < 1):
 *               if (aux_seg_chg != 0.):
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 857, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 857, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_it_sgm);
        __Pyx_GIVEREF(__pyx_v_it_sgm);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_sgm);
        __Pyx_INCREF(__pyx_v_it_ttt);
        __Pyx_GIVEREF(__pyx_v_it_ttt);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_it_ttt);
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_GIVEREF(__pyx_int_0);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_0);
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 857, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 857, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 857, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_aux_seg_chg, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "mirror_lib_v04.pyx":858
 *             # If we have changed the segment in this last sim. time:
 *             aux_seg_chg = self.time_map[it_sgm, it_ttt, 0] / self.tstep
 *             if (aux_seg_chg < 1):             # <<<<<<<<<<<<<<
 *               if (aux_seg_chg != 0.):
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep
 */
        __pyx_t_1 = PyObject_RichCompare(__pyx_v_aux_seg_chg, __pyx_int_1, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 858, __pyx_L1_error)
        __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 858, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_2) {

          /* "mirror_lib_v04.pyx":859
 *             aux_seg_chg = self.time_map[it_sgm, it_ttt, 0] / self.tstep
 *             if (aux_seg_chg < 1):
 *               if (aux_seg_chg != 0.):             # <<<<<<<<<<<<<<
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep
 *               else:
 */
          __pyx_t_1 = __Pyx_PyFloat_NeObjC(__pyx_v_aux_seg_chg, __pyx_float_0_, 0., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_2) {

            /* "mirror_lib_v04.pyx":860
 *             if (aux_seg_chg < 1):
 *               if (aux_seg_chg != 0.):
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep             # <<<<<<<<<<<<<<
 *               else:
 *                 excess_sim_step = 0.
 */
            __pyx_t_1 = PyNumber_Remainder(__pyx_v_it_ttt, __pyx_v_aux_seg_chg); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 860, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 860, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF_SET(__pyx_v_excess_sim_step, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":859
 *             aux_seg_chg = self.time_map[it_sgm, it_ttt, 0] / self.tstep
 *             if (aux_seg_chg < 1):
 *               if (aux_seg_chg != 0.):             # <<<<<<<<<<<<<<
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep
 *               else:
 */
            goto __pyx_L16;
          }

          /* "mirror_lib_v04.pyx":862
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep
 *               else:
 *                 excess_sim_step = 0.             # <<<<<<<<<<<<<<
 * 
 *               init_dust_val = excess_sim_step * self.tstep
 */
          /*else*/ {
            __Pyx_INCREF(__pyx_float_0_);
            __Pyx_XDECREF_SET(__pyx_v_excess_sim_step, __pyx_float_0_);
          }
          __pyx_L16:;

          /* "mirror_lib_v04.pyx":864
 *                 excess_sim_step = 0.
 * 
 *               init_dust_val = excess_sim_step * self.tstep             # <<<<<<<<<<<<<<
 *               self.time_map[it_sgm, it_ttt, 2] = init_dust_val * 1.
 * 
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 864, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyNumber_Multiply(__pyx_v_excess_sim_step, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 864, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF_SET(__pyx_v_init_dust_val, __pyx_t_5);
          __pyx_t_5 = 0;

          /* "mirror_lib_v04.pyx":865
 * 
 *               init_dust_val = excess_sim_step * self.tstep
 *               self.time_map[it_sgm, it_ttt, 2] = init_dust_val * 1.             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
          __pyx_t_5 = PyNumber_Multiply(__pyx_v_init_dust_val, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 865, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 865, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 865, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_v_it_sgm);
          __Pyx_GIVEREF(__pyx_v_it_sgm);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_it_sgm);
          __Pyx_INCREF(__pyx_v_it_ttt);
          __Pyx_GIVEREF(__pyx_v_it_ttt);
          PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_it_ttt);
          __Pyx_INCREF(__pyx_int_2);
          __Pyx_GIVEREF(__pyx_int_2);
          PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_2);
          if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_1, __pyx_t_5) < 0)) __PYX_ERR(0, 865, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "mirror_lib_v04.pyx":858
 *             # If we have changed the segment in this last sim. time:
 *             aux_seg_chg = self.time_map[it_sgm, it_ttt, 0] / self.tstep
 *             if (aux_seg_chg < 1):             # <<<<<<<<<<<<<<
 *               if (aux_seg_chg != 0.):
 *                 excess_sim_step = (it_ttt % aux_seg_chg) * self.tstep
 */
          goto __pyx_L15;
        }

        /* "mirror_lib_v04.pyx":870
 * 
 *               # If we have cleaned the segment in this last sim. time:
 *               if (it_ttt % self.cleandustcadence < 1):             # <<<<<<<<<<<<<<
 * 
 *                 excess_sim_step = (it_ttt % self.cleandustcadence ) \
 */
        /*else*/ {
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyNumber_Remainder(__pyx_v_it_ttt, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_int_1, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (__pyx_t_2) {

            /* "mirror_lib_v04.pyx":872
 *               if (it_ttt % self.cleandustcadence < 1):
 * 
 *                 excess_sim_step = (it_ttt % self.cleandustcadence ) \             # <<<<<<<<<<<<<<
 *                     * self.tstep
 * 
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 872, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_1 = PyNumber_Remainder(__pyx_v_it_ttt, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "mirror_lib_v04.pyx":873
 * 
 *                 excess_sim_step = (it_ttt % self.cleandustcadence ) \
 *                     * self.tstep             # <<<<<<<<<<<<<<
 * 
 *                 last_dust_val = self.time_map[it_sgm, it_ttt-1, 2] \
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF_SET(__pyx_v_excess_sim_step, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":875
 *                     * self.tstep
 * 
 *                 last_dust_val = self.time_map[it_sgm, it_ttt-1, 2] \             # <<<<<<<<<<<<<<
 *                     + self.tstep * (1. - excess_sim_step)
 * 
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_v_it_ttt, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_v_it_sgm);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
            __Pyx_INCREF(__pyx_int_2);
            __Pyx_GIVEREF(__pyx_int_2);
            PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_2);
            __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "mirror_lib_v04.pyx":876
 * 
 *                 last_dust_val = self.time_map[it_sgm, it_ttt-1, 2] \
 *                     + self.tstep * (1. - excess_sim_step)             # <<<<<<<<<<<<<<
 * 
 *                 init_dust_val = excess_sim_step * self.tstep
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_, __pyx_v_excess_sim_step, 1., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_14 = PyNumber_Multiply(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = PyNumber_Add(__pyx_t_5, __pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF_SET(__pyx_v_last_dust_val, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":878
 *                     + self.tstep * (1. - excess_sim_step)
 * 
 *                 init_dust_val = excess_sim_step * self.tstep             # <<<<<<<<<<<<<<
 *                 self.time_map[it_sgm, it_ttt, 2] = init_dust_val \
 *                     + last_dust_val * frac
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 878, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_14 = PyNumber_Multiply(__pyx_v_excess_sim_step, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 878, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF_SET(__pyx_v_init_dust_val, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "mirror_lib_v04.pyx":880
 *                 init_dust_val = excess_sim_step * self.tstep
 *                 self.time_map[it_sgm, it_ttt, 2] = init_dust_val \
 *                     + last_dust_val * frac             # <<<<<<<<<<<<<<
 * 
 *               else:
 */
            __pyx_t_14 = PyFloat_FromDouble(__pyx_v_frac); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 880, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_3 = PyNumber_Multiply(__pyx_v_last_dust_val, __pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 880, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = PyNumber_Add(__pyx_v_init_dust_val, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 880, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":879
 * 
 *                 init_dust_val = excess_sim_step * self.tstep
 *                 self.time_map[it_sgm, it_ttt, 2] = init_dust_val \             # <<<<<<<<<<<<<<
 *                     + last_dust_val * frac
 * 
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 879, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 879, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_INCREF(__pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_v_it_sgm);
            PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_sgm);
            __Pyx_INCREF(__pyx_v_it_ttt);
            __Pyx_GIVEREF(__pyx_v_it_ttt);
            PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_it_ttt);
            __Pyx_INCREF(__pyx_int_2);
            __Pyx_GIVEREF(__pyx_int_2);
            PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_2);
            if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_5, __pyx_t_14) < 0)) __PYX_ERR(0, 879, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "mirror_lib_v04.pyx":870
 * 
 *               # If we have cleaned the segment in this last sim. time:
 *               if (it_ttt % self.cleandustcadence < 1):             # <<<<<<<<<<<<<<
 * 
 *                 excess_sim_step = (it_ttt % self.cleandustcadence ) \
 */
            goto __pyx_L17;
          }

          /* "mirror_lib_v04.pyx":886
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \
 *                     , it_ttt-1, 2] + self.tstep             # <<<<<<<<<<<<<<
 * 
 * 
 */
          /*else*/ {

            /* "mirror_lib_v04.pyx":885
 *               # Otherwise we continue to accumulate dust:
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \             # <<<<<<<<<<<<<<
 *                     , it_ttt-1, 2] + self.tstep
 * 
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);

            /* "mirror_lib_v04.pyx":886
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \
 *                     , it_ttt-1, 2] + self.tstep             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_v_it_ttt, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);

            /* "mirror_lib_v04.pyx":885
 *               # Otherwise we continue to accumulate dust:
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \             # <<<<<<<<<<<<<<
 *                     , it_ttt-1, 2] + self.tstep
 * 
 */
            __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_INCREF(__pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_v_it_sgm);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
            __Pyx_INCREF(__pyx_int_2);
            __Pyx_GIVEREF(__pyx_int_2);
            PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_int_2);
            __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_14, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":886
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \
 *                     , it_ttt-1, 2] + self.tstep             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_14 = PyNumber_Add(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "mirror_lib_v04.pyx":885
 *               # Otherwise we continue to accumulate dust:
 *                 # The amount of dust is updated:
 *                 self.time_map[it_sgm, it_ttt, 2] = self.time_map[it_sgm \             # <<<<<<<<<<<<<<
 *                     , it_ttt-1, 2] + self.tstep
 * 
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_INCREF(__pyx_v_it_sgm);
            __Pyx_GIVEREF(__pyx_v_it_sgm);
            PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_sgm);
            __Pyx_INCREF(__pyx_v_it_ttt);
            __Pyx_GIVEREF(__pyx_v_it_ttt);
            PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_it_ttt);
            __Pyx_INCREF(__pyx_int_2);
            __Pyx_GIVEREF(__pyx_int_2);
            PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_2);
            if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_5, __pyx_t_14) < 0)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __pyx_L17:;
        }
        __pyx_L15:;

        /* "mirror_lib_v04.pyx":889
 * 
 * 
 *             dum = self.time_map[it_sgm, it_ttt, 2] * 1.             # <<<<<<<<<<<<<<
 *             if (dum!=dum):
 *               stop()
 */
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_it_sgm);
        __Pyx_GIVEREF(__pyx_v_it_sgm);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_sgm);
        __Pyx_INCREF(__pyx_v_it_ttt);
        __Pyx_GIVEREF(__pyx_v_it_ttt);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_it_ttt);
        __Pyx_INCREF(__pyx_int_2);
        __Pyx_GIVEREF(__pyx_int_2);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_2);
        __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_14, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 889, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF_SET(__pyx_v_dum, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "mirror_lib_v04.pyx":890
 * 
 *             dum = self.time_map[it_sgm, it_ttt, 2] * 1.
 *             if (dum!=dum):             # <<<<<<<<<<<<<<
 *               stop()
 * 
 */
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_dum, __pyx_v_dum, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 890, __pyx_L1_error)
        __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 890, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_2) {

          /* "mirror_lib_v04.pyx":891
 *             dum = self.time_map[it_sgm, it_ttt, 2] * 1.
 *             if (dum!=dum):
 *               stop()             # <<<<<<<<<<<<<<
 * 
 * ###          uts.plot(self.time_map[it_sgm, :, 2], vmin = 0)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_stop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 891, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_14) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 891, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "mirror_lib_v04.pyx":890
 * 
 *             dum = self.time_map[it_sgm, it_ttt, 2] * 1.
 *             if (dum!=dum):             # <<<<<<<<<<<<<<
 *               stop()
 * 
 */
        }

        /* "mirror_lib_v04.pyx":848
 * 
 * 
 *           for it_ttt in range(self.Ntimes):             # <<<<<<<<<<<<<<
 * 
 *             # First time:
 */
        __pyx_L12_continue:;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":845
 * 
 *         it_sgm = 0
 *         for it_sgm in range(self.N):             # <<<<<<<<<<<<<<
 * 
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":741
 *     #
 * 
 *       if (ideal!=True):             # <<<<<<<<<<<<<<
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 */
  }

  /* "mirror_lib_v04.pyx":956
 *       #from pdb import set_trace as stop
 *       #stop()
 *       return             # <<<<<<<<<<<<<<
 *     #
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":738
 *       return
 *     #
 *     def get_times_new(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_times_new", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_to_be_rolled);
  __Pyx_XDECREF(__pyx_v_cnt);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XDECREF(__pyx_v_uts);
  __Pyx_XDECREF(__pyx_v_initial_num_cln_since_last_sch);
  __Pyx_XDECREF(__pyx_v_inital_amount_dust_in_sim_steps);
  __Pyx_XDECREF(__pyx_v_first_acc_amount_dust_in_sim_steps);
  __Pyx_XDECREF(__pyx_v_aux);
  __Pyx_XDECREF(__pyx_v_ginit_dust_val);
  __Pyx_XDECREF(__pyx_v_bu_ginit_dust_val);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_it_sgm);
  __Pyx_XDECREF(__pyx_v_it_ttt);
  __Pyx_XDECREF(__pyx_v_aux_seg_chg);
  __Pyx_XDECREF(__pyx_v_excess_sim_step);
  __Pyx_XDECREF(__pyx_v_init_dust_val);
  __Pyx_XDECREF(__pyx_v_last_dust_val);
  __Pyx_XDECREF(__pyx_v_dum);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":959
 *     #
 * 
 *     def get_times(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_7get_times(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7primary_11primary_obj_7get_times = {"get_times", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7primary_11primary_obj_7get_times, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7primary_11primary_obj_7get_times(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ideal = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_times (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ideal,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ideal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_times", 1, 2, 2, 1); __PYX_ERR(0, 959, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_times") < 0)) __PYX_ERR(0, 959, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ideal = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_times", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 959, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_7primary_11primary_obj_6get_times(__pyx_self, __pyx_v_self, __pyx_v_ideal);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_7primary_11primary_obj_6get_times(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ideal) {
  CYTHON_UNUSED PyObject *__pyx_v_to_be_rolled = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_offset = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  __Pyx_RefNannySetupContext("get_times", 0);

  /* "mirror_lib_v04.pyx":962
 *     #
 * 
 *       if (ideal!=True):             # <<<<<<<<<<<<<<
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_ideal, Py_True, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 962, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 962, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":965
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 *         to_be_rolled = np.linspace(0.,self.SimulatedTime, self.SimulatedTimes) % self.period             # <<<<<<<<<<<<<<
 *         for i in range(self.N):
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTime); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 965, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 965, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 965, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_float_0_);
      __Pyx_GIVEREF(__pyx_float_0_);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_float_0_);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 965, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_period); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyNumber_Remainder(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_to_be_rolled = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":966
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 *         to_be_rolled = np.linspace(0.,self.SimulatedTime, self.SimulatedTimes) % self.period
 *         for i in range(self.N):             # <<<<<<<<<<<<<<
 * 
 *           offset = self.days_between_change * self.sort[i]
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_N); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 966, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 966, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 966, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 966, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 966, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_8);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 966, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":968
 *         for i in range(self.N):
 * 
 *           offset = self.days_between_change * self.sort[i]             # <<<<<<<<<<<<<<
 *           #print offset, i
 *           self.time_map[i,:,0] = (np.arange(self.Ntimes, dtype=np.float64)*self.tstep+offset) % self.period
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_days_between_change); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sort); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":970
 *           offset = self.days_between_change * self.sort[i]
 *           #print offset, i
 *           self.time_map[i,:,0] = (np.arange(self.Ntimes, dtype=np.float64)*self.tstep+offset) % self.period             # <<<<<<<<<<<<<<
 * 
 *           #self.time_map[i,:,1] = self.time_map[i,:,0] * 1.
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_arange); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_float64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(__pyx_t_4, __pyx_v_offset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_period); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = PyNumber_Remainder(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_i);
      __Pyx_INCREF(__pyx_slice__30);
      __Pyx_GIVEREF(__pyx_slice__30);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_slice__30);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
      if (unlikely(PyObject_SetItem(__pyx_t_4, __pyx_t_1, __pyx_t_6) < 0)) __PYX_ERR(0, 970, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":974
 *           #self.time_map[i,:,1] = self.time_map[i,:,0] * 1.
 *           #self.time_map[i,:,1] = self.time_map[i,:,0] % self.cleandustcadence
 *           self.time_map[i,:,1] = np.min(np.vstack([self.time_map[i,:,0], (np.arange(self.Ntimes,dtype=np.float64)*self.tstep)%self.cleandustcadence]),axis=0)             # <<<<<<<<<<<<<<
 * 
 *       #><  dum=np.min(np.vstack([self.time_map[i,:,0], np.arange(self.Ntimes,dtype=np.float64)%self.cleandustcadence]),axis=0)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_min); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_vstack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_i);
      __Pyx_INCREF(__pyx_slice__30);
      __Pyx_GIVEREF(__pyx_slice__30);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_slice__30);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_int_0);
      __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_Ntimes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_np); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_float64); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_14) < 0) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_12, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tstep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_12 = PyNumber_Multiply(__pyx_t_14, __pyx_t_3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cleandustcadence); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_14 = PyNumber_Remainder(__pyx_t_12, __pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_11);
      PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_14);
      __pyx_t_11 = 0;
      __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_6 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_14, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 974, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_time_map); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
      __Pyx_INCREF(__pyx_slice__30);
      __Pyx_GIVEREF(__pyx_slice__30);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_slice__30);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_int_1);
      if (unlikely(PyObject_SetItem(__pyx_t_6, __pyx_t_5, __pyx_t_3) < 0)) __PYX_ERR(0, 974, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":966
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 *         to_be_rolled = np.linspace(0.,self.SimulatedTime, self.SimulatedTimes) % self.period
 *         for i in range(self.N):             # <<<<<<<<<<<<<<
 * 
 *           offset = self.days_between_change * self.sort[i]
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":962
 *     #
 * 
 *       if (ideal!=True):             # <<<<<<<<<<<<<<
 * 
 *         #to_be_rolled = np.linspace(0.,self.period, self.Ntimes)
 */
  }

  /* "mirror_lib_v04.pyx":1025
 * # It seems to work:        stop()
 *     #
 *       return             # <<<<<<<<<<<<<<
 *     #
 *   #
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":959
 *     #
 * 
 *     def get_times(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("pymirrors.primary.primary_obj.get_times", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_to_be_rolled);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */

static PyObject *__pyx_pf_9pymirrors_4primary(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_order, PyObject *__pyx_v_tstep, PyObject *__pyx_v_tlong, PyObject *__pyx_v_cleandust, PyObject *__pyx_v_period, PyObject *__pyx_v_deltat, CYTHON_UNUSED PyObject *__pyx_v_SimulatedTime, PyObject *__pyx_v_ideal, PyObject *__pyx_v_multiplechange) {
  PyObject *__pyx_v_primary_obj = NULL;
  PyObject *__pyx_v_segments = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("primary", 0);

  /* "mirror_lib_v04.pyx":288
 *     , ideal=False, multiplechange=1):
 * #
 *   class primary_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__32); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__32, __pyx_n_s_primary_obj, __pyx_n_s_primary_locals_primary_obj, (PyObject *) NULL, __pyx_n_s_pymirrors, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mirror_lib_v04.pyx":290
 *   class primary_obj(object):
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \             # <<<<<<<<<<<<<<
 *             , mltch):
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_7primary_11primary_obj_1__init__, 0, __pyx_n_s_primary_locals_primary_obj___ini_2, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__34)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":610
 *         return
 *       #
 *     def get_order(self, order):             # <<<<<<<<<<<<<<
 * 
 *       if (order.upper() == 'RANDOM'):
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_7primary_11primary_obj_3get_order, 0, __pyx_n_s_primary_locals_primary_obj_get_o, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__36)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_get_order, __pyx_t_3) < 0) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":738
 *       return
 *     #
 *     def get_times_new(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_7primary_11primary_obj_5get_times_new, 0, __pyx_n_s_primary_locals_primary_obj_get_t, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_get_times_new, __pyx_t_3) < 0) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":959
 *     #
 * 
 *     def get_times(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_7primary_11primary_obj_7get_times, 0, __pyx_n_s_primary_locals_primary_obj_get_t_2, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_get_times, __pyx_t_3) < 0) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":288
 *     , ideal=False, multiplechange=1):
 * #
 *   class primary_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_primary_obj, __pyx_tuple__32, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_primary_obj = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1028
 *     #
 *   #
 *   if ( (deltat==0.) & (period==0.) ):             # <<<<<<<<<<<<<<
 *     print('deltat and period are 0, one of them must not be 0!')
 *     return np.nan
 */
  __pyx_t_1 = __Pyx_PyFloat_EqObjC(__pyx_v_deltat, __pyx_float_0_, 0., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyFloat_EqObjC(__pyx_v_period, __pyx_float_0_, 0., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_And(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1029
 *   #
 *   if ( (deltat==0.) & (period==0.) ):
 *     print('deltat and period are 0, one of them must not be 0!')             # <<<<<<<<<<<<<<
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1030
 *   if ( (deltat==0.) & (period==0.) ):
 *     print('deltat and period are 0, one of them must not be 0!')
 *     return np.nan             # <<<<<<<<<<<<<<
 *   if ( (deltat!=0.) & (period!=0.) ):
 *     print('deltat and period are non 0, one of them must be 0!')
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_nan); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1028
 *     #
 *   #
 *   if ( (deltat==0.) & (period==0.) ):             # <<<<<<<<<<<<<<
 *     print('deltat and period are 0, one of them must not be 0!')
 *     return np.nan
 */
  }

  /* "mirror_lib_v04.pyx":1031
 *     print('deltat and period are 0, one of them must not be 0!')
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):             # <<<<<<<<<<<<<<
 *     print('deltat and period are non 0, one of them must be 0!')
 *     return np.nan
 */
  __pyx_t_2 = __Pyx_PyFloat_NeObjC(__pyx_v_deltat, __pyx_float_0_, 0., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1031, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyFloat_NeObjC(__pyx_v_period, __pyx_float_0_, 0., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1031, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_And(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1031, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1032
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):
 *     print('deltat and period are non 0, one of them must be 0!')             # <<<<<<<<<<<<<<
 *     return np.nan
 *   #
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1032, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1033
 *   if ( (deltat!=0.) & (period!=0.) ):
 *     print('deltat and period are non 0, one of them must be 0!')
 *     return np.nan             # <<<<<<<<<<<<<<
 *   #
 *   #
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1033, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_nan); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1033, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1031
 *     print('deltat and period are 0, one of them must not be 0!')
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):             # <<<<<<<<<<<<<<
 *     print('deltat and period are non 0, one of them must be 0!')
 *     return np.nan
 */
  }

  /* "mirror_lib_v04.pyx":1036
 *   #
 *   #
 *   segments = primary_obj(telescope, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *       , period, deltat, multiplechange)
 *   segments.get_order(order)
 */
  __pyx_t_3 = PyTuple_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_telescope);
  __Pyx_GIVEREF(__pyx_v_telescope);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_telescope);
  __Pyx_INCREF(__pyx_v_tstep);
  __Pyx_GIVEREF(__pyx_v_tstep);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_tstep);
  __Pyx_INCREF(__pyx_v_tlong);
  __Pyx_GIVEREF(__pyx_v_tlong);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_tlong);
  __Pyx_INCREF(__pyx_v_cleandust);
  __Pyx_GIVEREF(__pyx_v_cleandust);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_cleandust);
  __Pyx_INCREF(__pyx_v_period);
  __Pyx_GIVEREF(__pyx_v_period);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_v_period);
  __Pyx_INCREF(__pyx_v_deltat);
  __Pyx_GIVEREF(__pyx_v_deltat);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_v_deltat);
  __Pyx_INCREF(__pyx_v_multiplechange);
  __Pyx_GIVEREF(__pyx_v_multiplechange);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_v_multiplechange);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_v_primary_obj, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_segments = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1038
 *   segments = primary_obj(telescope, tstep, tlong, cleandust \
 *       , period, deltat, multiplechange)
 *   segments.get_order(order)             # <<<<<<<<<<<<<<
 *   #segments.get_times(ideal)
 *   segments.get_times_new(ideal)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_get_order); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_order) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_order);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1040
 *   segments.get_order(order)
 *   #segments.get_times(ideal)
 *   segments.get_times_new(ideal)             # <<<<<<<<<<<<<<
 * #
 *   return segments
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_get_times_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_ideal) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_ideal);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1042
 *   segments.get_times_new(ideal)
 * #
 *   return segments             # <<<<<<<<<<<<<<
 * #
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_segments);
  __pyx_r = __pyx_v_segments;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.primary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_primary_obj);
  __Pyx_XDECREF(__pyx_v_segments);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1045
 * #
 * 
 * def cinside(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] xir \
 *     , ar [double, ndim=1] yir \
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_7cinside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_7cinside = {"cinside", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_7cinside, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_7cinside(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xir = 0;
  PyArrayObject *__pyx_v_yir = 0;
  PyArrayObject *__pyx_v_xer = 0;
  PyArrayObject *__pyx_v_yer = 0;
  PyArrayObject *__pyx_v_xc = 0;
  PyArrayObject *__pyx_v_yc = 0;
  int __pyx_v_nthreads;
  int __pyx_v_vectors;
  int __pyx_v_complementary;
  CYTHON_UNUSED int __pyx_v_verbose;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cinside (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xir,&__pyx_n_s_yir,&__pyx_n_s_xer,&__pyx_n_s_yer,&__pyx_n_s_xc,&__pyx_n_s_yc,&__pyx_n_s_nthreads,&__pyx_n_s_vectors,&__pyx_n_s_complementary,&__pyx_n_s_verbose,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xir)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_yir)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 1); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 2); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_yer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 3); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 4); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_yc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 5); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nthreads)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, 6); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vectors);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_complementary);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[9] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cinside") < 0)) __PYX_ERR(0, 1045, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xir = ((PyArrayObject *)values[0]);
    __pyx_v_yir = ((PyArrayObject *)values[1]);
    __pyx_v_xer = ((PyArrayObject *)values[2]);
    __pyx_v_yer = ((PyArrayObject *)values[3]);
    __pyx_v_xc = ((PyArrayObject *)values[4]);
    __pyx_v_yc = ((PyArrayObject *)values[5]);
    __pyx_v_nthreads = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_nthreads == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1052, __pyx_L3_error)
    if (values[7]) {
      __pyx_v_vectors = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_vectors == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L3_error)
    } else {
      __pyx_v_vectors = ((int)1);
    }
    if (values[8]) {
      __pyx_v_complementary = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_complementary == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1054, __pyx_L3_error)
    } else {
      __pyx_v_complementary = ((int)0);
    }
    if (values[9]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[9]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1055, __pyx_L3_error)
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cinside", 0, 7, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1045, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.cinside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xir), __pyx_ptype_5numpy_ndarray, 1, "xir", 0))) __PYX_ERR(0, 1046, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_yir), __pyx_ptype_5numpy_ndarray, 1, "yir", 0))) __PYX_ERR(0, 1047, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xer), __pyx_ptype_5numpy_ndarray, 1, "xer", 0))) __PYX_ERR(0, 1048, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_yer), __pyx_ptype_5numpy_ndarray, 1, "yer", 0))) __PYX_ERR(0, 1049, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xc), __pyx_ptype_5numpy_ndarray, 1, "xc", 0))) __PYX_ERR(0, 1050, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_yc), __pyx_ptype_5numpy_ndarray, 1, "yc", 0))) __PYX_ERR(0, 1051, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pymirrors_6cinside(__pyx_self, __pyx_v_xir, __pyx_v_yir, __pyx_v_xer, __pyx_v_yer, __pyx_v_xc, __pyx_v_yc, __pyx_v_nthreads, __pyx_v_vectors, __pyx_v_complementary, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_6cinside(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xir, PyArrayObject *__pyx_v_yir, PyArrayObject *__pyx_v_xer, PyArrayObject *__pyx_v_yer, PyArrayObject *__pyx_v_xc, PyArrayObject *__pyx_v_yc, int __pyx_v_nthreads, int __pyx_v_vectors, int __pyx_v_complementary, CYTHON_UNUSED int __pyx_v_verbose) {
  long __pyx_v_cnrays;
  PyArrayObject *__pyx_v_res = 0;
  int __pyx_v_nrefs;
  PyObject *__pyx_v_ww = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_res;
  __Pyx_Buffer __pyx_pybuffer_res;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xc;
  __Pyx_Buffer __pyx_pybuffer_xc;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xer;
  __Pyx_Buffer __pyx_pybuffer_xer;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xir;
  __Pyx_Buffer __pyx_pybuffer_xir;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_yc;
  __Pyx_Buffer __pyx_pybuffer_yc;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_yer;
  __Pyx_Buffer __pyx_pybuffer_yer;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_yir;
  __Pyx_Buffer __pyx_pybuffer_yir;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  __Pyx_RefNannySetupContext("cinside", 0);
  __pyx_pybuffer_res.pybuffer.buf = NULL;
  __pyx_pybuffer_res.refcount = 0;
  __pyx_pybuffernd_res.data = NULL;
  __pyx_pybuffernd_res.rcbuffer = &__pyx_pybuffer_res;
  __pyx_pybuffer_xir.pybuffer.buf = NULL;
  __pyx_pybuffer_xir.refcount = 0;
  __pyx_pybuffernd_xir.data = NULL;
  __pyx_pybuffernd_xir.rcbuffer = &__pyx_pybuffer_xir;
  __pyx_pybuffer_yir.pybuffer.buf = NULL;
  __pyx_pybuffer_yir.refcount = 0;
  __pyx_pybuffernd_yir.data = NULL;
  __pyx_pybuffernd_yir.rcbuffer = &__pyx_pybuffer_yir;
  __pyx_pybuffer_xer.pybuffer.buf = NULL;
  __pyx_pybuffer_xer.refcount = 0;
  __pyx_pybuffernd_xer.data = NULL;
  __pyx_pybuffernd_xer.rcbuffer = &__pyx_pybuffer_xer;
  __pyx_pybuffer_yer.pybuffer.buf = NULL;
  __pyx_pybuffer_yer.refcount = 0;
  __pyx_pybuffernd_yer.data = NULL;
  __pyx_pybuffernd_yer.rcbuffer = &__pyx_pybuffer_yer;
  __pyx_pybuffer_xc.pybuffer.buf = NULL;
  __pyx_pybuffer_xc.refcount = 0;
  __pyx_pybuffernd_xc.data = NULL;
  __pyx_pybuffernd_xc.rcbuffer = &__pyx_pybuffer_xc;
  __pyx_pybuffer_yc.pybuffer.buf = NULL;
  __pyx_pybuffer_yc.refcount = 0;
  __pyx_pybuffernd_yc.data = NULL;
  __pyx_pybuffernd_yc.rcbuffer = &__pyx_pybuffer_yc;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xir.rcbuffer->pybuffer, (PyObject*)__pyx_v_xir, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_xir.diminfo[0].strides = __pyx_pybuffernd_xir.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xir.diminfo[0].shape = __pyx_pybuffernd_xir.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_yir.rcbuffer->pybuffer, (PyObject*)__pyx_v_yir, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_yir.diminfo[0].strides = __pyx_pybuffernd_yir.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_yir.diminfo[0].shape = __pyx_pybuffernd_yir.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xer.rcbuffer->pybuffer, (PyObject*)__pyx_v_xer, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_xer.diminfo[0].strides = __pyx_pybuffernd_xer.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xer.diminfo[0].shape = __pyx_pybuffernd_xer.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_yer.rcbuffer->pybuffer, (PyObject*)__pyx_v_yer, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_yer.diminfo[0].strides = __pyx_pybuffernd_yer.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_yer.diminfo[0].shape = __pyx_pybuffernd_yer.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xc.rcbuffer->pybuffer, (PyObject*)__pyx_v_xc, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_xc.diminfo[0].strides = __pyx_pybuffernd_xc.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xc.diminfo[0].shape = __pyx_pybuffernd_xc.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_yc.rcbuffer->pybuffer, (PyObject*)__pyx_v_yc, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_pybuffernd_yc.diminfo[0].strides = __pyx_pybuffernd_yc.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_yc.diminfo[0].shape = __pyx_pybuffernd_yc.rcbuffer->pybuffer.shape[0];

  /* "mirror_lib_v04.pyx":1057
 *     , int verbose=0):
 * 
 *   cdef long cnrays = xc.size             # <<<<<<<<<<<<<<
 *   cdef ar[long, ndim=1] res = np.ones((cnrays,), dtype=long)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_xc), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_2 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cnrays = __pyx_t_2;

  /* "mirror_lib_v04.pyx":1058
 * 
 *   cdef long cnrays = xc.size
 *   cdef ar[long, ndim=1] res = np.ones((cnrays,), dtype=long)             # <<<<<<<<<<<<<<
 * 
 *   cdef int nrefs
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_cnrays); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, ((PyObject *)(&PyLong_Type))) < 0) __PYX_ERR(0, 1058, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1058, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_res.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_res = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_res.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1058, __pyx_L1_error)
    } else {__pyx_pybuffernd_res.diminfo[0].strides = __pyx_pybuffernd_res.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_res.diminfo[0].shape = __pyx_pybuffernd_res.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_res = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":1065
 *   # Internal perimeter:
 *   #
 *   nrefs = xir.size             # <<<<<<<<<<<<<<
 *   if (nrefs==1):
 *     # Anular mirror:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_xir), __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_nrefs = __pyx_t_7;

  /* "mirror_lib_v04.pyx":1066
 *   #
 *   nrefs = xir.size
 *   if (nrefs==1):             # <<<<<<<<<<<<<<
 *     # Anular mirror:
 *     # xir: circle radius
 */
  __pyx_t_8 = ((__pyx_v_nrefs == 1) != 0);
  if (__pyx_t_8) {

    /* "mirror_lib_v04.pyx":1070
 *     # xir: circle radius
 *     # yir: circle radius (only xr is used)
 *     inside_circle(nthreads, 0, xir[0], cnrays, <double*>xc.data \             # <<<<<<<<<<<<<<
 *         , <double*>yc.data, <long*>res.data)
 *   else:
 */
    __pyx_t_9 = 0;
    __pyx_t_7 = -1;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_pybuffernd_xir.diminfo[0].shape;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_7 = 0;
    } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_xir.diminfo[0].shape)) __pyx_t_7 = 0;
    if (unlikely(__pyx_t_7 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_7);
      __PYX_ERR(0, 1070, __pyx_L1_error)
    }

    /* "mirror_lib_v04.pyx":1071
 *     # yir: circle radius (only xr is used)
 *     inside_circle(nthreads, 0, xir[0], cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)             # <<<<<<<<<<<<<<
 *   else:
 *     # Polygon-shaped mirror:
 */
    mrr::eval_pts_circle<long,double>(__pyx_v_nthreads, 0, (*__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_xir.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_xir.diminfo[0].strides)), __pyx_v_cnrays, ((double *)__pyx_v_xc->data), ((double *)__pyx_v_yc->data), ((long *)__pyx_v_res->data));

    /* "mirror_lib_v04.pyx":1066
 *   #
 *   nrefs = xir.size
 *   if (nrefs==1):             # <<<<<<<<<<<<<<
 *     # Anular mirror:
 *     # xir: circle radius
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":1074
 *   else:
 *     # Polygon-shaped mirror:
 *     inside_polygon(nthreads, 0, nrefs, <double*> xir.data \             # <<<<<<<<<<<<<<
 *         , <double*> yir.data, cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)
 */
  /*else*/ {

    /* "mirror_lib_v04.pyx":1076
 *     inside_polygon(nthreads, 0, nrefs, <double*> xir.data \
 *         , <double*> yir.data, cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)             # <<<<<<<<<<<<<<
 * 
 *   #
 */
    mrr::eval_pts_polygon<int,long,double>(__pyx_v_nthreads, 0, __pyx_v_nrefs, ((double *)__pyx_v_xir->data), ((double *)__pyx_v_yir->data), __pyx_v_cnrays, ((double *)__pyx_v_xc->data), ((double *)__pyx_v_yc->data), ((long *)__pyx_v_res->data));
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":1081
 *   # External perimeter:
 *   #
 *   nrefs = xer.size             # <<<<<<<<<<<<<<
 *   if (nrefs==1):
 *     # Anular mirror:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_xer), __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_nrefs = __pyx_t_7;

  /* "mirror_lib_v04.pyx":1082
 *   #
 *   nrefs = xer.size
 *   if (nrefs==1):             # <<<<<<<<<<<<<<
 *     # Anular mirror:
 *     # xer: circle radius
 */
  __pyx_t_8 = ((__pyx_v_nrefs == 1) != 0);
  if (__pyx_t_8) {

    /* "mirror_lib_v04.pyx":1086
 *     # xer: circle radius
 *     # yer: circle radius (only xr is used)
 *     inside_circle(nthreads, 1, xer[0], cnrays, <double*>xc.data \             # <<<<<<<<<<<<<<
 *         , <double*>yc.data, <long*>res.data)
 *   else:
 */
    __pyx_t_10 = 0;
    __pyx_t_7 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_pybuffernd_xer.diminfo[0].shape;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_xer.diminfo[0].shape)) __pyx_t_7 = 0;
    if (unlikely(__pyx_t_7 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_7);
      __PYX_ERR(0, 1086, __pyx_L1_error)
    }

    /* "mirror_lib_v04.pyx":1087
 *     # yer: circle radius (only xr is used)
 *     inside_circle(nthreads, 1, xer[0], cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)             # <<<<<<<<<<<<<<
 *   else:
 *     # Polygon-shaped mirror:
 */
    mrr::eval_pts_circle<long,double>(__pyx_v_nthreads, 1, (*__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_xer.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_xer.diminfo[0].strides)), __pyx_v_cnrays, ((double *)__pyx_v_xc->data), ((double *)__pyx_v_yc->data), ((long *)__pyx_v_res->data));

    /* "mirror_lib_v04.pyx":1082
 *   #
 *   nrefs = xer.size
 *   if (nrefs==1):             # <<<<<<<<<<<<<<
 *     # Anular mirror:
 *     # xer: circle radius
 */
    goto __pyx_L4;
  }

  /* "mirror_lib_v04.pyx":1090
 *   else:
 *     # Polygon-shaped mirror:
 *     inside_polygon(nthreads, 1, nrefs, <double*> xer.data \             # <<<<<<<<<<<<<<
 *         , <double*> yer.data, cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)
 */
  /*else*/ {

    /* "mirror_lib_v04.pyx":1092
 *     inside_polygon(nthreads, 1, nrefs, <double*> xer.data \
 *         , <double*> yer.data, cnrays, <double*>xc.data \
 *         , <double*>yc.data, <long*>res.data)             # <<<<<<<<<<<<<<
 * 
 *   if (complementary):
 */
    mrr::eval_pts_polygon<int,long,double>(__pyx_v_nthreads, 1, __pyx_v_nrefs, ((double *)__pyx_v_xer->data), ((double *)__pyx_v_yer->data), __pyx_v_cnrays, ((double *)__pyx_v_xc->data), ((double *)__pyx_v_yc->data), ((long *)__pyx_v_res->data));
  }
  __pyx_L4:;

  /* "mirror_lib_v04.pyx":1094
 *         , <double*>yc.data, <long*>res.data)
 * 
 *   if (complementary):             # <<<<<<<<<<<<<<
 *     ww = res < 0.5
 *   else:
 */
  __pyx_t_8 = (__pyx_v_complementary != 0);
  if (__pyx_t_8) {

    /* "mirror_lib_v04.pyx":1095
 * 
 *   if (complementary):
 *     ww = res < 0.5             # <<<<<<<<<<<<<<
 *   else:
 *     ww = res > 0.5
 */
    __pyx_t_5 = PyObject_RichCompare(((PyObject *)__pyx_v_res), __pyx_float_0_5, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1095, __pyx_L1_error)
    __pyx_v_ww = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1094
 *         , <double*>yc.data, <long*>res.data)
 * 
 *   if (complementary):             # <<<<<<<<<<<<<<
 *     ww = res < 0.5
 *   else:
 */
    goto __pyx_L5;
  }

  /* "mirror_lib_v04.pyx":1097
 *     ww = res < 0.5
 *   else:
 *     ww = res > 0.5             # <<<<<<<<<<<<<<
 * 
 *   if (vectors):
 */
  /*else*/ {
    __pyx_t_5 = PyObject_RichCompare(((PyObject *)__pyx_v_res), __pyx_float_0_5, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1097, __pyx_L1_error)
    __pyx_v_ww = __pyx_t_5;
    __pyx_t_5 = 0;
  }
  __pyx_L5:;

  /* "mirror_lib_v04.pyx":1099
 *     ww = res > 0.5
 * 
 *   if (vectors):             # <<<<<<<<<<<<<<
 *     return xc[ww], yc[ww]
 *   else:
 */
  __pyx_t_8 = (__pyx_v_vectors != 0);
  if (__pyx_t_8) {

    /* "mirror_lib_v04.pyx":1100
 * 
 *   if (vectors):
 *     return xc[ww], yc[ww]             # <<<<<<<<<<<<<<
 *   else:
 *     return ww
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_xc), __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_yc), __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
    __pyx_t_5 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1099
 *     ww = res > 0.5
 * 
 *   if (vectors):             # <<<<<<<<<<<<<<
 *     return xc[ww], yc[ww]
 *   else:
 */
  }

  /* "mirror_lib_v04.pyx":1102
 *     return xc[ww], yc[ww]
 *   else:
 *     return ww             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_ww);
    __pyx_r = __pyx_v_ww;
    goto __pyx_L0;
  }

  /* "mirror_lib_v04.pyx":1045
 * #
 * 
 * def cinside(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] xir \
 *     , ar [double, ndim=1] yir \
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_res.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xc.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xer.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xir.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yc.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yer.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yir.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("pymirrors.cinside", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_res.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xc.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xer.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xir.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yc.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yer.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_yir.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1106
 * 
 * 
 * def secondary(telescope):             # <<<<<<<<<<<<<<
 * #
 *   class mirror_obj(object):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9secondary(PyObject *__pyx_self, PyObject *__pyx_v_telescope); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9secondary = {"secondary", (PyCFunction)__pyx_pw_9pymirrors_9secondary, METH_O, 0};
static PyObject *__pyx_pw_9pymirrors_9secondary(PyObject *__pyx_self, PyObject *__pyx_v_telescope) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("secondary (wrapper)", 0);
  __pyx_r = __pyx_pf_9pymirrors_8secondary(__pyx_self, ((PyObject *)__pyx_v_telescope));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1110
 *   class mirror_obj(object):
 * 
 *     def __init__(self,telescope):             # <<<<<<<<<<<<<<
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9secondary_10mirror_obj_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9secondary_10mirror_obj_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_telescope,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1110, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1110, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_telescope = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1110, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9secondary_10mirror_obj___init__(__pyx_self, __pyx_v_self, __pyx_v_telescope);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope) {
  CYTHON_UNUSED PyObject *__pyx_v_vmax = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "mirror_lib_v04.pyx":1111
 * 
 *     def __init__(self,telescope):
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1             # <<<<<<<<<<<<<<
 *       if (telescope.ID == 'GTC'):
 *         self.ID = 'GTC'
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_sec_ext_radius); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_sec_num_esp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_vmax = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1112
 *     def __init__(self,telescope):
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'GTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_GTC, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1113
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):
 *         self.ID = 'GTC'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_GTC) < 0) __PYX_ERR(0, 1113, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1112
 *     def __init__(self,telescope):
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'GTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  }

  /* "mirror_lib_v04.pyx":1117
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'SGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SGTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_SGTC, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1118
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'SGTC'):
 *         self.ID = 'SGTC'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_SGTC) < 0) __PYX_ERR(0, 1118, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1117
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'SGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SGTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  }

  /* "mirror_lib_v04.pyx":1122
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'AGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AGTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_AGTC, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1123
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'AGTC'):
 *         self.ID = 'AGTC'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_AGTC) < 0) __PYX_ERR(0, 1123, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1122
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       if (telescope.ID == 'AGTC'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AGTC'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    goto __pyx_L5;
  }

  /* "mirror_lib_v04.pyx":1127
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'EELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'EELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_EELT, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1128
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'EELT'):
 *         self.ID = 'EELT'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_EELT) < 0) __PYX_ERR(0, 1128, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1127
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'EELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'EELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    goto __pyx_L5;
  }

  /* "mirror_lib_v04.pyx":1132
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'SEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SEELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_SEELT, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1133
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'SEELT'):
 *         self.ID = 'SEELT'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_SEELT) < 0) __PYX_ERR(0, 1133, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1132
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'SEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'SEELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    goto __pyx_L5;
  }

  /* "mirror_lib_v04.pyx":1137
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'AEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AEELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_ID); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_AEELT, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_6) {

    /* "mirror_lib_v04.pyx":1138
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'AEELT'):
 *         self.ID = 'AEELT'             # <<<<<<<<<<<<<<
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ID, __pyx_n_u_AEELT) < 0) __PYX_ERR(0, 1138, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":1137
 *         #self.y = np.linspace(-vmax, vmax, telescope.sec_num)
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 *       elif (telescope.ID == 'AEELT'):             # <<<<<<<<<<<<<<
 *         self.ID = 'AEELT'
 *         #self.x = np.linspace(-vmax, vmax, telescope.sec_num)
 */
  }
  __pyx_L5:;

  /* "mirror_lib_v04.pyx":1143
 *         #self.mirror = np.zeros((telescope.sec_num, telescope.sec_num))
 * 
 *       return             # <<<<<<<<<<<<<<
 * #
 *     def get_secondary_geometry(self,inum_esp, isec_ext_radius \
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1110
 *   class mirror_obj(object):
 * 
 *     def __init__(self,telescope):             # <<<<<<<<<<<<<<
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vmax);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1145
 *       return
 * #
 *     def get_secondary_geometry(self,inum_esp, isec_ext_radius \             # <<<<<<<<<<<<<<
 *         , isec_int_radius,ishape):
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_3get_secondary_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9secondary_10mirror_obj_3get_secondary_geometry = {"get_secondary_geometry", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9secondary_10mirror_obj_3get_secondary_geometry, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_3get_secondary_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_inum_esp = 0;
  PyObject *__pyx_v_isec_ext_radius = 0;
  PyObject *__pyx_v_isec_int_radius = 0;
  PyObject *__pyx_v_ishape = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_secondary_geometry (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_inum_esp,&__pyx_n_s_isec_ext_radius,&__pyx_n_s_isec_int_radius,&__pyx_n_s_ishape,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inum_esp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_secondary_geometry", 1, 5, 5, 1); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_isec_ext_radius)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_secondary_geometry", 1, 5, 5, 2); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_isec_int_radius)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_secondary_geometry", 1, 5, 5, 3); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ishape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_secondary_geometry", 1, 5, 5, 4); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_secondary_geometry") < 0)) __PYX_ERR(0, 1145, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_inum_esp = values[1];
    __pyx_v_isec_ext_radius = values[2];
    __pyx_v_isec_int_radius = values[3];
    __pyx_v_ishape = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_secondary_geometry", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.get_secondary_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9secondary_10mirror_obj_2get_secondary_geometry(__pyx_self, __pyx_v_self, __pyx_v_inum_esp, __pyx_v_isec_ext_radius, __pyx_v_isec_int_radius, __pyx_v_ishape);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj_2get_secondary_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_inum_esp, PyObject *__pyx_v_isec_ext_radius, PyObject *__pyx_v_isec_int_radius, PyObject *__pyx_v_ishape) {
  PyObject *__pyx_v_ones = NULL;
  PyObject *__pyx_v_x_odds = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_y_odds = NULL;
  PyObject *__pyx_v_x_even = NULL;
  PyObject *__pyx_v_y_even = NULL;
  PyObject *__pyx_v_ap = NULL;
  PyObject *__pyx_v_x_fact_odds = NULL;
  PyObject *__pyx_v_y_fact_odds = NULL;
  PyObject *__pyx_v_x_fact_even = NULL;
  PyObject *__pyx_v_y_fact_even = NULL;
  PyObject *__pyx_v_rads_odds = NULL;
  PyObject *__pyx_v_rads_even = NULL;
  PyObject *__pyx_v_sort = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_rads = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_last = NULL;
  PyObject *__pyx_v_sangs = NULL;
  PyObject *__pyx_v_srads = NULL;
  PyObject *__pyx_v_sdx = NULL;
  PyObject *__pyx_v_sdy = NULL;
  PyObject *__pyx_v_sx = NULL;
  PyObject *__pyx_v_sy = NULL;
  PyObject *__pyx_v_srs = NULL;
  PyObject *__pyx_v_sazis = NULL;
  PyObject *__pyx_v_diffs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("get_secondary_geometry", 0);

  /* "mirror_lib_v04.pyx":1148
 *         , isec_int_radius,ishape):
 * 
 *       if (ishape=='hexagonal'):             # <<<<<<<<<<<<<<
 *         #
 *         #GET AN INITIAL ESTIMATION OF MIRRORS:
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_ishape, __pyx_n_u_hexagonal, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1148, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "mirror_lib_v04.pyx":1152
 *         #GET AN INITIAL ESTIMATION OF MIRRORS:
 *         #
 *         ones = np.ones(inum_esp, dtype=np.float64)             # <<<<<<<<<<<<<<
 *         x_odds = np.arange(inum_esp) - inum_esp / 2
 *         _, x_odds = np.meshgrid(ones, x_odds)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_inum_esp);
    __Pyx_GIVEREF(__pyx_v_inum_esp);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_inum_esp);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_float64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_6) < 0) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_ones = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1153
 *         #
 *         ones = np.ones(inum_esp, dtype=np.float64)
 *         x_odds = np.arange(inum_esp) - inum_esp / 2             # <<<<<<<<<<<<<<
 *         _, x_odds = np.meshgrid(ones, x_odds)
 *         y_odds = np.arange(inum_esp) - inum_esp / 2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_arange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_x_odds = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1154
 *         ones = np.ones(inum_esp, dtype=np.float64)
 *         x_odds = np.arange(inum_esp) - inum_esp / 2
 *         _, x_odds = np.meshgrid(ones, x_odds)             # <<<<<<<<<<<<<<
 *         y_odds = np.arange(inum_esp) - inum_esp / 2
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ones, __pyx_v_x_odds};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_v_ones, __pyx_v_x_odds};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_2) {
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
      }
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, __pyx_v_ones);
      __Pyx_INCREF(__pyx_v_x_odds);
      __Pyx_GIVEREF(__pyx_v_x_odds);
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_v_x_odds);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1154, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_2)->tp_iternext;
      index = 0; __pyx_t_6 = __pyx_t_8(__pyx_t_2); if (unlikely(!__pyx_t_6)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 1; __pyx_t_3 = __pyx_t_8(__pyx_t_2); if (unlikely(!__pyx_t_3)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_2), 2) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L5_unpacking_done;
      __pyx_L4_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1154, __pyx_L1_error)
      __pyx_L5_unpacking_done:;
    }
    __pyx_v__ = __pyx_t_6;
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1155
 *         x_odds = np.arange(inum_esp) - inum_esp / 2
 *         _, x_odds = np.meshgrid(ones, x_odds)
 *         y_odds = np.arange(inum_esp) - inum_esp / 2             # <<<<<<<<<<<<<<
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 *         x_even = (np.arange(inum_esp) - \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_y_odds = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1156
 *         _, x_odds = np.meshgrid(ones, x_odds)
 *         y_odds = np.arange(inum_esp) - inum_esp / 2
 *         y_odds, _ = np.meshgrid(y_odds, ones)             # <<<<<<<<<<<<<<
 *         x_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_y_odds, __pyx_v_ones};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_y_odds, __pyx_v_ones};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_v_y_odds);
      __Pyx_GIVEREF(__pyx_v_y_odds);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_v_y_odds);
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_v_ones);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
      PyObject* sequence = __pyx_t_3;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1156, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_6 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_8(__pyx_t_6); if (unlikely(!__pyx_t_4)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_2 = __pyx_t_8(__pyx_t_6); if (unlikely(!__pyx_t_2)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_6), 2) < 0) __PYX_ERR(0, 1156, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1156, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1157
 *         y_odds = np.arange(inum_esp) - inum_esp / 2
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 *         x_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *             inum_esp / 2) * 2. - 1.
 *         _, x_even = np.meshgrid(ones, x_even)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_arange); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1158
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 *         x_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \
 */
    __pyx_t_4 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "mirror_lib_v04.pyx":1157
 *         y_odds = np.arange(inum_esp) - inum_esp / 2
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 *         x_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *             inum_esp / 2) * 2. - 1.
 *         _, x_even = np.meshgrid(ones, x_even)
 */
    __pyx_t_2 = PyNumber_Subtract(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1158
 *         y_odds, _ = np.meshgrid(y_odds, ones)
 *         x_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \
 */
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_float_2_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyFloat_SubtractObjC(__pyx_t_4, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_x_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1159
 *         x_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.
 *         _, x_even = np.meshgrid(ones, x_even)             # <<<<<<<<<<<<<<
 *         y_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ones, __pyx_v_x_even};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_ones, __pyx_v_x_even};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_7, __pyx_v_ones);
      __Pyx_INCREF(__pyx_v_x_even);
      __Pyx_GIVEREF(__pyx_v_x_even);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_7, __pyx_v_x_even);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1159, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L8_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_4); if (unlikely(!__pyx_t_6)) goto __pyx_L8_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_4), 2) < 0) __PYX_ERR(0, 1159, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L9_unpacking_done;
      __pyx_L8_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1159, __pyx_L1_error)
      __pyx_L9_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1160
 *             inum_esp / 2) * 2. - 1.
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *             inum_esp / 2) * 2. - 1.
 *         y_even, _ = np.meshgrid(y_even, ones)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_arange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_inum_esp) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_inum_esp);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1161
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *         y_even, _ = np.meshgrid(y_even, ones)
 *         #
 */
    __pyx_t_3 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_inum_esp, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "mirror_lib_v04.pyx":1160
 *             inum_esp / 2) * 2. - 1.
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \             # <<<<<<<<<<<<<<
 *             inum_esp / 2) * 2. - 1.
 *         y_even, _ = np.meshgrid(y_even, ones)
 */
    __pyx_t_6 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1161
 *         _, x_even = np.meshgrid(ones, x_even)
 *         y_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.             # <<<<<<<<<<<<<<
 *         y_even, _ = np.meshgrid(y_even, ones)
 *         #
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_6, __pyx_float_2_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyFloat_SubtractObjC(__pyx_t_3, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_y_even = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1162
 *         y_even = (np.arange(inum_esp) - \
 *             inum_esp / 2) * 2. - 1.
 *         y_even, _ = np.meshgrid(y_even, ones)             # <<<<<<<<<<<<<<
 *         #
 *         #GIVE SPATIAL DIMENSIONS TO THE POSITIONS:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_meshgrid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_y_even, __pyx_v_ones};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_y_even, __pyx_v_ones};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_v_y_even);
      __Pyx_GIVEREF(__pyx_v_y_even);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_7, __pyx_v_y_even);
      __Pyx_INCREF(__pyx_v_ones);
      __Pyx_GIVEREF(__pyx_v_ones);
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_7, __pyx_v_ones);
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
      PyObject* sequence = __pyx_t_6;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1162, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
      index = 0; __pyx_t_2 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L10_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      index = 1; __pyx_t_4 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_4)) goto __pyx_L10_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_3), 2) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L11_unpacking_done;
      __pyx_L10_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1162, __pyx_L1_error)
      __pyx_L11_unpacking_done:;
    }
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v__, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1166
 *         #GIVE SPATIAL DIMENSIONS TO THE POSITIONS:
 *         #
 *         ap = isec_ext_radius * np.cos(30./180.*np.pi)             # <<<<<<<<<<<<<<
 *         x_fact_odds = 3. * isec_ext_radius
 *         y_fact_odds = 2. * ap
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_cos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble((30. / 180.)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_pi); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_v_isec_ext_radius, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_ap = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1167
 *         #
 *         ap = isec_ext_radius * np.cos(30./180.*np.pi)
 *         x_fact_odds = 3. * isec_ext_radius             # <<<<<<<<<<<<<<
 *         y_fact_odds = 2. * ap
 *         x_fact_even = 1.5 * isec_ext_radius
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_3_, __pyx_v_isec_ext_radius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_x_fact_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1168
 *         ap = isec_ext_radius * np.cos(30./180.*np.pi)
 *         x_fact_odds = 3. * isec_ext_radius
 *         y_fact_odds = 2. * ap             # <<<<<<<<<<<<<<
 *         x_fact_even = 1.5 * isec_ext_radius
 *         y_fact_even = 1.* ap
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_ap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_y_fact_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1169
 *         x_fact_odds = 3. * isec_ext_radius
 *         y_fact_odds = 2. * ap
 *         x_fact_even = 1.5 * isec_ext_radius             # <<<<<<<<<<<<<<
 *         y_fact_even = 1.* ap
 *         x_odds = x_odds.flatten() * x_fact_odds
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_5, __pyx_v_isec_ext_radius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_x_fact_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1170
 *         y_fact_odds = 2. * ap
 *         x_fact_even = 1.5 * isec_ext_radius
 *         y_fact_even = 1.* ap             # <<<<<<<<<<<<<<
 *         x_odds = x_odds.flatten() * x_fact_odds
 *         y_odds = y_odds.flatten() * y_fact_odds
 */
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_, __pyx_v_ap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_y_fact_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1171
 *         x_fact_even = 1.5 * isec_ext_radius
 *         y_fact_even = 1.* ap
 *         x_odds = x_odds.flatten() * x_fact_odds             # <<<<<<<<<<<<<<
 *         y_odds = y_odds.flatten() * y_fact_odds
 *         x_even = x_even.flatten() * x_fact_even
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x_odds, __pyx_n_s_flatten); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_v_x_fact_odds); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1172
 *         y_fact_even = 1.* ap
 *         x_odds = x_odds.flatten() * x_fact_odds
 *         y_odds = y_odds.flatten() * y_fact_odds             # <<<<<<<<<<<<<<
 *         x_even = x_even.flatten() * x_fact_even
 *         y_even = y_even.flatten() * y_fact_even
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_y_odds, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_6, __pyx_v_y_fact_odds); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1173
 *         x_odds = x_odds.flatten() * x_fact_odds
 *         y_odds = y_odds.flatten() * y_fact_odds
 *         x_even = x_even.flatten() * x_fact_even             # <<<<<<<<<<<<<<
 *         y_even = y_even.flatten() * y_fact_even
 *         #
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x_even, __pyx_n_s_flatten); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_v_x_fact_even); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1174
 *         y_odds = y_odds.flatten() * y_fact_odds
 *         x_even = x_even.flatten() * x_fact_even
 *         y_even = y_even.flatten() * y_fact_even             # <<<<<<<<<<<<<<
 *         #
 *         rads_odds = np.sqrt(x_odds**2 + y_odds**2)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_y_even, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_6, __pyx_v_y_fact_even); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1176
 *         y_even = y_even.flatten() * y_fact_even
 *         #
 *         rads_odds = np.sqrt(x_odds**2 + y_odds**2)             # <<<<<<<<<<<<<<
 *         rads_even = np.sqrt(x_even**2 + y_even**2)
 *         #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Power(__pyx_v_x_odds, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyNumber_Power(__pyx_v_y_odds, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rads_odds = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1177
 *         #
 *         rads_odds = np.sqrt(x_odds**2 + y_odds**2)
 *         rads_even = np.sqrt(x_even**2 + y_even**2)             # <<<<<<<<<<<<<<
 *         #
 *         #SORT:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Power(__pyx_v_x_even, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Power(__pyx_v_y_even, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_rads_even = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1181
 *         #SORT:
 *         #
 *         sort = np.argsort(rads_odds)             # <<<<<<<<<<<<<<
 *         x_odds = x_odds[sort]
 *         y_odds = y_odds[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_argsort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_v_rads_odds) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_rads_odds);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_sort = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1182
 *         #
 *         sort = np.argsort(rads_odds)
 *         x_odds = x_odds[sort]             # <<<<<<<<<<<<<<
 *         y_odds = y_odds[sort]
 *         rads_odds = rads_odds[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1183
 *         sort = np.argsort(rads_odds)
 *         x_odds = x_odds[sort]
 *         y_odds = y_odds[sort]             # <<<<<<<<<<<<<<
 *         rads_odds = rads_odds[sort]
 *         sort = np.argsort(rads_even)
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1184
 *         x_odds = x_odds[sort]
 *         y_odds = y_odds[sort]
 *         rads_odds = rads_odds[sort]             # <<<<<<<<<<<<<<
 *         sort = np.argsort(rads_even)
 *         x_even = x_even[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads_odds, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads_odds, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1185
 *         y_odds = y_odds[sort]
 *         rads_odds = rads_odds[sort]
 *         sort = np.argsort(rads_even)             # <<<<<<<<<<<<<<
 *         x_even = x_even[sort]
 *         y_even = y_even[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1185, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1185, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_v_rads_even) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_rads_even);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1185, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1186
 *         rads_odds = rads_odds[sort]
 *         sort = np.argsort(rads_even)
 *         x_even = x_even[sort]             # <<<<<<<<<<<<<<
 *         y_even = y_even[sort]
 *         rads_even = rads_even[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1187
 *         sort = np.argsort(rads_even)
 *         x_even = x_even[sort]
 *         y_even = y_even[sort]             # <<<<<<<<<<<<<<
 *         rads_even = rads_even[sort]
 *         #
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1188
 *         x_even = x_even[sort]
 *         y_even = y_even[sort]
 *         rads_even = rads_even[sort]             # <<<<<<<<<<<<<<
 *         #
 *         #CONCATENATE:
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads_even, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads_even, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1192
 *         #CONCATENATE:
 *         #
 *         x = np.concatenate([x_odds, x_even])             # <<<<<<<<<<<<<<
 *         y = np.concatenate([y_odds, y_even])
 *         rads = np.concatenate([rads_odds, rads_even])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_x_odds);
    __Pyx_GIVEREF(__pyx_v_x_odds);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_x_odds);
    __Pyx_INCREF(__pyx_v_x_even);
    __Pyx_GIVEREF(__pyx_v_x_even);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_x_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_x = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1193
 *         #
 *         x = np.concatenate([x_odds, x_even])
 *         y = np.concatenate([y_odds, y_even])             # <<<<<<<<<<<<<<
 *         rads = np.concatenate([rads_odds, rads_even])
 *         sort =  np.argsort(rads)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_y_odds);
    __Pyx_GIVEREF(__pyx_v_y_odds);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_y_odds);
    __Pyx_INCREF(__pyx_v_y_even);
    __Pyx_GIVEREF(__pyx_v_y_even);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_v_y_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1194
 *         x = np.concatenate([x_odds, x_even])
 *         y = np.concatenate([y_odds, y_even])
 *         rads = np.concatenate([rads_odds, rads_even])             # <<<<<<<<<<<<<<
 *         sort =  np.argsort(rads)
 *         x = x[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_rads_odds);
    __Pyx_GIVEREF(__pyx_v_rads_odds);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_rads_odds);
    __Pyx_INCREF(__pyx_v_rads_even);
    __Pyx_GIVEREF(__pyx_v_rads_even);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_rads_even);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_rads = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1195
 *         y = np.concatenate([y_odds, y_even])
 *         rads = np.concatenate([rads_odds, rads_even])
 *         sort =  np.argsort(rads)             # <<<<<<<<<<<<<<
 *         x = x[sort]
 *         y = y[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_argsort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_v_rads) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_rads);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_sort, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1196
 *         rads = np.concatenate([rads_odds, rads_even])
 *         sort =  np.argsort(rads)
 *         x = x[sort]             # <<<<<<<<<<<<<<
 *         y = y[sort]
 *         rads = rads[sort]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1197
 *         sort =  np.argsort(rads)
 *         x = x[sort]
 *         y = y[sort]             # <<<<<<<<<<<<<<
 *         rads = rads[sort]
 *         #
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1198
 *         x = x[sort]
 *         y = y[sort]
 *         rads = rads[sort]             # <<<<<<<<<<<<<<
 *         #
 *         ww = np.where(rads >= isec_ext_radius)[0]
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_v_sort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1200
 *         rads = rads[sort]
 *         #
 *         ww = np.where(rads >= isec_ext_radius)[0]             # <<<<<<<<<<<<<<
 *         rads = rads[ww]
 *         x = x[ww]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_rads, __pyx_v_isec_ext_radius, Py_GE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_ww = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1201
 *         #
 *         ww = np.where(rads >= isec_ext_radius)[0]
 *         rads = rads[ww]             # <<<<<<<<<<<<<<
 *         x = x[ww]
 *         y = y[ww]
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1202
 *         ww = np.where(rads >= isec_ext_radius)[0]
 *         rads = rads[ww]
 *         x = x[ww]             # <<<<<<<<<<<<<<
 *         y = y[ww]
 *         #
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1203
 *         rads = rads[ww]
 *         x = x[ww]
 *         y = y[ww]             # <<<<<<<<<<<<<<
 *         #
 *         #LAST MIRROR
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1207
 *         #LAST MIRROR
 *         #
 *         last = rads[inum_esp-1]             # <<<<<<<<<<<<<<
 *         ww = np.where(rads == last)[0]
 *         if ( np.max(ww) > inum_esp-1 ):
 */
    __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_v_inum_esp, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_rads, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_last = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1208
 *         #
 *         last = rads[inum_esp-1]
 *         ww = np.where(rads == last)[0]             # <<<<<<<<<<<<<<
 *         if ( np.max(ww) > inum_esp-1 ):
 *           sys.exit()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_where); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_rads, __pyx_v_last, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1208, __pyx_L1_error)
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1209
 *         last = rads[inum_esp-1]
 *         ww = np.where(rads == last)[0]
 *         if ( np.max(ww) > inum_esp-1 ):             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         rads = rads[0:inum_esp]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_max); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_v_ww) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_ww);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_v_inum_esp, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "mirror_lib_v04.pyx":1210
 *         ww = np.where(rads == last)[0]
 *         if ( np.max(ww) > inum_esp-1 ):
 *           sys.exit()             # <<<<<<<<<<<<<<
 *         rads = rads[0:inum_esp]
 *         x = x[0:inum_esp]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_sys); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":1209
 *         last = rads[inum_esp-1]
 *         ww = np.where(rads == last)[0]
 *         if ( np.max(ww) > inum_esp-1 ):             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         rads = rads[0:inum_esp]
 */
    }

    /* "mirror_lib_v04.pyx":1211
 *         if ( np.max(ww) > inum_esp-1 ):
 *           sys.exit()
 *         rads = rads[0:inum_esp]             # <<<<<<<<<<<<<<
 *         x = x[0:inum_esp]
 *         y = y[0:inum_esp]
 */
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_rads, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_rads, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1212
 *           sys.exit()
 *         rads = rads[0:inum_esp]
 *         x = x[0:inum_esp]             # <<<<<<<<<<<<<<
 *         y = y[0:inum_esp]
 * #
 */
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_x, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1212, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1213
 *         rads = rads[0:inum_esp]
 *         x = x[0:inum_esp]
 *         y = y[0:inum_esp]             # <<<<<<<<<<<<<<
 * #
 * #
 */
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_y, 0, 0, NULL, &__pyx_v_inum_esp, NULL, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1221
 * #
 * #
 *         sangs = np.arange(6) * np.pi / 3.             # <<<<<<<<<<<<<<
 *         srads = np.sqrt(x**2 + y**2)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_arange); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_int_6) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_int_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_pi); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_6, __pyx_float_3_, 3., 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_sangs = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1222
 * #
 *         sangs = np.arange(6) * np.pi / 3.
 *         srads = np.sqrt(x**2 + y**2)             # <<<<<<<<<<<<<<
 * 
 *         ww = np.where(srads+isec_ext_radius>srads.max())[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Power(__pyx_v_x, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyNumber_Power(__pyx_v_y, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyNumber_Add(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_srads = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1224
 *         srads = np.sqrt(x**2 + y**2)
 * 
 *         ww = np.where(srads+isec_ext_radius>srads.max())[0]             # <<<<<<<<<<<<<<
 * 
 *         sdx = isec_ext_radius * np.cos(sangs)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_where); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Add(__pyx_v_srads, __pyx_v_isec_ext_radius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_srads, __pyx_n_s_max); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_5 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_2, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1226
 *         ww = np.where(srads+isec_ext_radius>srads.max())[0]
 * 
 *         sdx = isec_ext_radius * np.cos(sangs)             # <<<<<<<<<<<<<<
 *         sdy = isec_ext_radius * np.sin(sangs)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_cos); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_v_sangs) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_sangs);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_v_isec_ext_radius, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sdx = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1227
 * 
 *         sdx = isec_ext_radius * np.cos(sangs)
 *         sdy = isec_ext_radius * np.sin(sangs)             # <<<<<<<<<<<<<<
 * 
 *         sx = x[ww][:,None] + sdx[None,:]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_sangs) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_sangs);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_v_isec_ext_radius, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_sdy = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1229
 *         sdy = isec_ext_radius * np.sin(sangs)
 * 
 *         sx = x[ww][:,None] + sdx[None,:]             # <<<<<<<<<<<<<<
 *         sy = y[ww][:,None] + sdy[None,:]
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_tuple__43); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_sdx, __pyx_tuple__44); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Add(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_sx = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1230
 * 
 *         sx = x[ww][:,None] + sdx[None,:]
 *         sy = y[ww][:,None] + sdy[None,:]             # <<<<<<<<<<<<<<
 * 
 *         srads = np.sqrt(x[ww]**2 + y[ww]**2)
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_tuple__43); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_sdy, __pyx_tuple__44); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyNumber_Add(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sy = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1232
 *         sy = y[ww][:,None] + sdy[None,:]
 * 
 *         srads = np.sqrt(x[ww]**2 + y[ww]**2)             # <<<<<<<<<<<<<<
 *         srs = np.sqrt(sx**2 + sy**2)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Power(__pyx_t_3, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Power(__pyx_t_3, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_srads, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1233
 * 
 *         srads = np.sqrt(x[ww]**2 + y[ww]**2)
 *         srs = np.sqrt(sx**2 + sy**2)             # <<<<<<<<<<<<<<
 * 
 *         ww = np.where( (srs-srads[:,None]) > 0 )
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Power(__pyx_v_sx, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyNumber_Power(__pyx_v_sy, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_srs = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1235
 *         srs = np.sqrt(sx**2 + sy**2)
 * 
 *         ww = np.where( (srs-srads[:,None]) > 0 )             # <<<<<<<<<<<<<<
 *         sx = sx[ww[0], ww[1]]
 *         sy = sy[ww[0], ww[1]]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_srads, __pyx_tuple__43); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Subtract(__pyx_v_srs, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1236
 * 
 *         ww = np.where( (srs-srads[:,None]) > 0 )
 *         sx = sx[ww[0], ww[1]]             # <<<<<<<<<<<<<<
 *         sy = sy[ww[0], ww[1]]
 * 
 */
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_ww, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_ww, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_sx, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_sx, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1237
 *         ww = np.where( (srs-srads[:,None]) > 0 )
 *         sx = sx[ww[0], ww[1]]
 *         sy = sy[ww[0], ww[1]]             # <<<<<<<<<<<<<<
 * 
 *         sazis = np.arctan2(sy.flatten(), sx.flatten())
 */
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_ww, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_ww, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
    __pyx_t_5 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_sy, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_sy, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1239
 *         sy = sy[ww[0], ww[1]]
 * 
 *         sazis = np.arctan2(sy.flatten(), sx.flatten())             # <<<<<<<<<<<<<<
 * 
 *         sx = sx.flatten()[np.argsort(sazis)]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_sy, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_sx, __pyx_n_s_flatten); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_2};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_2};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1239, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_7, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_7, __pyx_t_2);
      __pyx_t_6 = 0;
      __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1239, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_sazis = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1241
 *         sazis = np.arctan2(sy.flatten(), sx.flatten())
 * 
 *         sx = sx.flatten()[np.argsort(sazis)]             # <<<<<<<<<<<<<<
 *         sy = sy.flatten()[np.argsort(sazis)]
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_sx, __pyx_n_s_flatten); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_argsort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_9, __pyx_v_sazis) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_sazis);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_sx, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1242
 * 
 *         sx = sx.flatten()[np.argsort(sazis)]
 *         sy = sy.flatten()[np.argsort(sazis)]             # <<<<<<<<<<<<<<
 * 
 *         sx = np.concatenate([sx, [sx[0],]])
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_sy, __pyx_n_s_flatten); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_argsort); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_3, __pyx_v_sazis) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_sazis);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_sy, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1244
 *         sy = sy.flatten()[np.argsort(sazis)]
 * 
 *         sx = np.concatenate([sx, [sx[0],]])             # <<<<<<<<<<<<<<
 *         sy = np.concatenate([sy, [sy[0],]])
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_sx, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_sx);
    __Pyx_GIVEREF(__pyx_v_sx);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_v_sx);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_9 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_sx, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1245
 * 
 *         sx = np.concatenate([sx, [sx[0],]])
 *         sy = np.concatenate([sy, [sy[0],]])             # <<<<<<<<<<<<<<
 * 
 *         # Remove duplicated points:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_concatenate); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_sy, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_sy);
    __Pyx_GIVEREF(__pyx_v_sy);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_v_sy);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_9 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_sy, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1248
 * 
 *         # Remove duplicated points:
 *         diffs = np.abs(sx[1:]-sx[0:-1]) + np.abs(sy[1:]-sy[0:-1])             # <<<<<<<<<<<<<<
 *         ww = np.where(diffs > 1.e-5)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_abs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetSlice(__pyx_v_sx, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_sx, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyNumber_Subtract(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_9 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_abs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetSlice(__pyx_v_sy, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetSlice(__pyx_v_sy, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_9, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_diffs = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1249
 *         # Remove duplicated points:
 *         diffs = np.abs(sx[1:]-sx[0:-1]) + np.abs(sy[1:]-sy[0:-1])
 *         ww = np.where(diffs > 1.e-5)             # <<<<<<<<<<<<<<
 * 
 *         self.esx = sx[ww[0]+1]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_where); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_diffs, __pyx_float_1_eneg_5, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1249, __pyx_L1_error)
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1251
 *         ww = np.where(diffs > 1.e-5)
 * 
 *         self.esx = sx[ww[0]+1]             # <<<<<<<<<<<<<<
 *         self.esy = sy[ww[0]+1]
 * #
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_ww, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_sx, __pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_esx, __pyx_t_3) < 0) __PYX_ERR(0, 1251, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1252
 * 
 *         self.esx = sx[ww[0]+1]
 *         self.esy = sy[ww[0]+1]             # <<<<<<<<<<<<<<
 * #
 * #
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_ww, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_sy, __pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_esy, __pyx_t_3) < 0) __PYX_ERR(0, 1252, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1256
 * #
 * #
 *         self.isx = isec_int_radius * np.cos(sangs)             # <<<<<<<<<<<<<<
 *         self.isy = isec_int_radius * np.sin(sangs)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_cos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_9, __pyx_v_sangs) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_sangs);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_v_isec_int_radius, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_isx, __pyx_t_2) < 0) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1257
 * #
 *         self.isx = isec_int_radius * np.cos(sangs)
 *         self.isy = isec_int_radius * np.sin(sangs)             # <<<<<<<<<<<<<<
 * 
 *       elif (ishape=='anular'):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_3, __pyx_v_sangs) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_sangs);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_v_isec_int_radius, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_isy, __pyx_t_9) < 0) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1148
 *         , isec_int_radius,ishape):
 * 
 *       if (ishape=='hexagonal'):             # <<<<<<<<<<<<<<
 *         #
 *         #GET AN INITIAL ESTIMATION OF MIRRORS:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":1259
 *         self.isy = isec_int_radius * np.sin(sangs)
 * 
 *       elif (ishape=='anular'):             # <<<<<<<<<<<<<<
 * 
 *         self.isx = np.ones((1,)) * isec_int_radius
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_ishape, __pyx_n_u_anular, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1259, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "mirror_lib_v04.pyx":1261
 *       elif (ishape=='anular'):
 * 
 *         self.isx = np.ones((1,)) * isec_int_radius             # <<<<<<<<<<<<<<
 *         self.isy = np.ones((1,)) * isec_int_radius
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_9, __pyx_v_isec_int_radius); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_isx, __pyx_t_3) < 0) __PYX_ERR(0, 1261, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1262
 * 
 *         self.isx = np.ones((1,)) * isec_int_radius
 *         self.isy = np.ones((1,)) * isec_int_radius             # <<<<<<<<<<<<<<
 * 
 *         self.esx = np.ones((1,)) * isec_ext_radius
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_ones); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_9, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_v_isec_int_radius); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_isy, __pyx_t_2) < 0) __PYX_ERR(0, 1262, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1264
 *         self.isy = np.ones((1,)) * isec_int_radius
 * 
 *         self.esx = np.ones((1,)) * isec_ext_radius             # <<<<<<<<<<<<<<
 *         self.esy = np.ones((1,)) * isec_ext_radius
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ones); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_3, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_2, __pyx_v_isec_ext_radius); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_esx, __pyx_t_9) < 0) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1265
 * 
 *         self.esx = np.ones((1,)) * isec_ext_radius
 *         self.esy = np.ones((1,)) * isec_ext_radius             # <<<<<<<<<<<<<<
 * 
 *       else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_9, __pyx_v_isec_ext_radius); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_esy, __pyx_t_3) < 0) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1259
 *         self.isy = isec_int_radius * np.sin(sangs)
 * 
 *       elif (ishape=='anular'):             # <<<<<<<<<<<<<<
 * 
 *         self.isx = np.ones((1,)) * isec_int_radius
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":1268
 * 
 *       else:
 *         print('Secondary:')             # <<<<<<<<<<<<<<
 *         print('\tShape unknown!')
 *         print('')
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1268, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1269
 *       else:
 *         print('Secondary:')
 *         print('\tShape unknown!')             # <<<<<<<<<<<<<<
 *         print('')
 *         stop()
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1270
 *         print('Secondary:')
 *         print('\tShape unknown!')
 *         print('')             # <<<<<<<<<<<<<<
 *         stop()
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1271
 *         print('\tShape unknown!')
 *         print('')
 *         stop()             # <<<<<<<<<<<<<<
 * 
 *       return
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_stop); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":1273
 *         stop()
 * 
 *       return             # <<<<<<<<<<<<<<
 * 
 *     def get_mirror(self, telescope):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1145
 *       return
 * #
 *     def get_secondary_geometry(self,inum_esp, isec_ext_radius \             # <<<<<<<<<<<<<<
 *         , isec_int_radius,ishape):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.get_secondary_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ones);
  __Pyx_XDECREF(__pyx_v_x_odds);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_y_odds);
  __Pyx_XDECREF(__pyx_v_x_even);
  __Pyx_XDECREF(__pyx_v_y_even);
  __Pyx_XDECREF(__pyx_v_ap);
  __Pyx_XDECREF(__pyx_v_x_fact_odds);
  __Pyx_XDECREF(__pyx_v_y_fact_odds);
  __Pyx_XDECREF(__pyx_v_x_fact_even);
  __Pyx_XDECREF(__pyx_v_y_fact_even);
  __Pyx_XDECREF(__pyx_v_rads_odds);
  __Pyx_XDECREF(__pyx_v_rads_even);
  __Pyx_XDECREF(__pyx_v_sort);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_rads);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_last);
  __Pyx_XDECREF(__pyx_v_sangs);
  __Pyx_XDECREF(__pyx_v_srads);
  __Pyx_XDECREF(__pyx_v_sdx);
  __Pyx_XDECREF(__pyx_v_sdy);
  __Pyx_XDECREF(__pyx_v_sx);
  __Pyx_XDECREF(__pyx_v_sy);
  __Pyx_XDECREF(__pyx_v_srs);
  __Pyx_XDECREF(__pyx_v_sazis);
  __Pyx_XDECREF(__pyx_v_diffs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1275
 *       return
 * 
 *     def get_mirror(self, telescope):             # <<<<<<<<<<<<<<
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_5get_mirror(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9secondary_10mirror_obj_5get_mirror = {"get_mirror", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9secondary_10mirror_obj_5get_mirror, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9secondary_10mirror_obj_5get_mirror(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_mirror (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_telescope,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_mirror", 1, 2, 2, 1); __PYX_ERR(0, 1275, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_mirror") < 0)) __PYX_ERR(0, 1275, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_telescope = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_mirror", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1275, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.get_mirror", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9secondary_10mirror_obj_4get_mirror(__pyx_self, __pyx_v_self, __pyx_v_telescope);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9secondary_10mirror_obj_4get_mirror(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_telescope) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("get_mirror", 0);

  /* "mirror_lib_v04.pyx":1277
 *     def get_mirror(self, telescope):
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \             # <<<<<<<<<<<<<<
 *           , telescope.sec_ext_radius, telescope.sec_int_radius \
 *           , telescope.secondary_shape)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_get_secondary_geometry); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_sec_num_esp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "mirror_lib_v04.pyx":1278
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 *           , telescope.sec_ext_radius, telescope.sec_int_radius \             # <<<<<<<<<<<<<<
 *           , telescope.secondary_shape)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_sec_ext_radius); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_sec_int_radius); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "mirror_lib_v04.pyx":1279
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 *           , telescope.sec_ext_radius, telescope.sec_int_radius \
 *           , telescope.secondary_shape)             # <<<<<<<<<<<<<<
 * 
 *       return
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_secondary_shape); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1277, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1277, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1281
 *           , telescope.secondary_shape)
 * 
 *       return             # <<<<<<<<<<<<<<
 *     #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1275
 *       return
 * 
 *     def get_mirror(self, telescope):             # <<<<<<<<<<<<<<
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pymirrors.secondary.mirror_obj.get_mirror", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1106
 * 
 * 
 * def secondary(telescope):             # <<<<<<<<<<<<<<
 * #
 *   class mirror_obj(object):
 */

static PyObject *__pyx_pf_9pymirrors_8secondary(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope) {
  PyObject *__pyx_v_mirror_obj = NULL;
  PyObject *__pyx_v_secondary = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("secondary", 0);

  /* "mirror_lib_v04.pyx":1108
 * def secondary(telescope):
 * #
 *   class mirror_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope):
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__49); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__49, __pyx_n_s_mirror_obj, __pyx_n_s_secondary_locals_mirror_obj, (PyObject *) NULL, __pyx_n_s_pymirrors, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mirror_lib_v04.pyx":1110
 *   class mirror_obj(object):
 * 
 *     def __init__(self,telescope):             # <<<<<<<<<<<<<<
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9secondary_10mirror_obj_1__init__, 0, __pyx_n_s_secondary_locals_mirror_obj___in, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__51)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 1110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1145
 *       return
 * #
 *     def get_secondary_geometry(self,inum_esp, isec_ext_radius \             # <<<<<<<<<<<<<<
 *         , isec_int_radius,ishape):
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9secondary_10mirror_obj_3get_secondary_geometry, 0, __pyx_n_s_secondary_locals_mirror_obj_get, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_get_secondary_geometry, __pyx_t_3) < 0) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1275
 *       return
 * 
 *     def get_mirror(self, telescope):             # <<<<<<<<<<<<<<
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9secondary_10mirror_obj_5get_mirror, 0, __pyx_n_s_secondary_locals_mirror_obj_get_2, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_get_mirror, __pyx_t_3) < 0) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1108
 * def secondary(telescope):
 * #
 *   class mirror_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_mirror_obj, __pyx_tuple__49, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_mirror_obj = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1284
 *     #
 * #
 *   secondary = mirror_obj(telescope)             # <<<<<<<<<<<<<<
 *   secondary.get_mirror(telescope)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_v_mirror_obj, __pyx_v_telescope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_secondary = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1285
 * #
 *   secondary = mirror_obj(telescope)
 *   secondary.get_mirror(telescope)             # <<<<<<<<<<<<<<
 * 
 *   return secondary
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_get_mirror); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_telescope) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_telescope);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1287
 *   secondary.get_mirror(telescope)
 * 
 *   return secondary             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_secondary);
  __pyx_r = __pyx_v_secondary;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1106
 * 
 * 
 * def secondary(telescope):             # <<<<<<<<<<<<<<
 * #
 *   class mirror_obj(object):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.secondary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mirror_obj);
  __Pyx_XDECREF(__pyx_v_secondary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1295
 * 
 * #
 * def dirt_timing(lamb, time):             # <<<<<<<<<<<<<<
 * #
 *   def zerodux(lamb, angstrom=True):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing = {"dirt_timing", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lamb = 0;
  PyObject *__pyx_v_time = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dirt_timing (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_lamb,&__pyx_n_s_time,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lamb)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_time)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dirt_timing", 1, 2, 2, 1); __PYX_ERR(0, 1295, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dirt_timing") < 0)) __PYX_ERR(0, 1295, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_lamb = values[0];
    __pyx_v_time = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dirt_timing", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1295, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_10dirt_timing(__pyx_self, __pyx_v_lamb, __pyx_v_time);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1297
 * def dirt_timing(lamb, time):
 * #
 *   def zerodux(lamb, angstrom=True):             # <<<<<<<<<<<<<<
 *   #
 *     if (angstrom == True):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_1zerodux(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing_1zerodux = {"zerodux", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing_1zerodux, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_1zerodux(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lamb = 0;
  PyObject *__pyx_v_angstrom = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zerodux (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_lamb,&__pyx_n_s_angstrom,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)((PyObject *)Py_True));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lamb)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_angstrom);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zerodux") < 0)) __PYX_ERR(0, 1297, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lamb = values[0];
    __pyx_v_angstrom = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zerodux", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1297, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing.zerodux", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_11dirt_timing_zerodux(__pyx_self, __pyx_v_lamb, __pyx_v_angstrom);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_11dirt_timing_zerodux(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lamb, PyObject *__pyx_v_angstrom) {
  PyObject *__pyx_v_lamb_mu = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("zerodux", 0);

  /* "mirror_lib_v04.pyx":1299
 *   def zerodux(lamb, angstrom=True):
 *   #
 *     if (angstrom == True):             # <<<<<<<<<<<<<<
 *       lamb_mu = lamb * 1.e-4
 *     else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_angstrom, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":1300
 *   #
 *     if (angstrom == True):
 *       lamb_mu = lamb * 1.e-4             # <<<<<<<<<<<<<<
 *     else:
 *       lamb_mu = lamb * 1.e0
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_lamb, __pyx_float_1_eneg_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_lamb_mu = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1299
 *   def zerodux(lamb, angstrom=True):
 *   #
 *     if (angstrom == True):             # <<<<<<<<<<<<<<
 *       lamb_mu = lamb * 1.e-4
 *     else:
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":1302
 *       lamb_mu = lamb * 1.e-4
 *     else:
 *       lamb_mu = lamb * 1.e0             # <<<<<<<<<<<<<<
 *   #
 *     b=[1.3182408e0,2.44e-2,1.08915181]
 */
  /*else*/ {
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_lamb, __pyx_float_1_e0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_lamb_mu = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":1304
 *       lamb_mu = lamb * 1.e0
 *   #
 *     b=[1.3182408e0,2.44e-2,1.08915181]             # <<<<<<<<<<<<<<
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \
 */
  __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_float_1_3182408e0);
  __Pyx_GIVEREF(__pyx_float_1_3182408e0);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_float_1_3182408e0);
  __Pyx_INCREF(__pyx_float_2_44eneg_2);
  __Pyx_GIVEREF(__pyx_float_2_44eneg_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_float_2_44eneg_2);
  __Pyx_INCREF(__pyx_float_1_08915181);
  __Pyx_GIVEREF(__pyx_float_1_08915181);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_float_1_08915181);
  __pyx_v_b = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1305
 *   #
 *     b=[1.3182408e0,2.44e-2,1.08915181]
 *     c=[8.79e-3,6.09e-2,1.1e2]             # <<<<<<<<<<<<<<
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)
 */
  __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_float_8_79eneg_3);
  __Pyx_GIVEREF(__pyx_float_8_79eneg_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_float_8_79eneg_3);
  __Pyx_INCREF(__pyx_float_6_09eneg_2);
  __Pyx_GIVEREF(__pyx_float_6_09eneg_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_float_6_09eneg_2);
  __Pyx_INCREF(__pyx_float_1_1e2);
  __Pyx_GIVEREF(__pyx_float_1_1e2);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_float_1_1e2);
  __pyx_v_c = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1306
 *     b=[1.3182408e0,2.44e-2,1.08915181]
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \             # <<<<<<<<<<<<<<
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)
 *   #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1307
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)             # <<<<<<<<<<<<<<
 *   #
 *     return n
 */
  __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "mirror_lib_v04.pyx":1306
 *     b=[1.3182408e0,2.44e-2,1.08915181]
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \             # <<<<<<<<<<<<<<
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)
 *   #
 */
  __pyx_t_5 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_c, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = PyNumber_Subtract(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":1307
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)             # <<<<<<<<<<<<<<
 *   #
 *     return n
 */
  __pyx_t_6 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_c, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyNumber_Subtract(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "mirror_lib_v04.pyx":1306
 *     b=[1.3182408e0,2.44e-2,1.08915181]
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \             # <<<<<<<<<<<<<<
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)
 *   #
 */
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyNumber_Add(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "mirror_lib_v04.pyx":1307
 *     c=[8.79e-3,6.09e-2,1.1e2]
 *     n=np.sqrt(b[0] * lamb_mu**2 / (lamb_mu**2 - c[0]) + b[1] * lamb_mu**2 / \
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)             # <<<<<<<<<<<<<<
 *   #
 *     return n
 */
  __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_b, 2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Power(__pyx_v_lamb_mu, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = PyNumber_Subtract(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Add(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyFloat_AddObjC(__pyx_t_6, __pyx_float_1_e0, 1.e0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_n = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1309
 *         (lamb_mu**2 - c[1]) + b[2] * lamb_mu**2 / (lamb_mu**2 - c[2]) + 1.e0)
 *   #
 *     return n             # <<<<<<<<<<<<<<
 * #
 *   def indexes(elem, lam_in):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_n);
  __pyx_r = __pyx_v_n;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1297
 * def dirt_timing(lamb, time):
 * #
 *   def zerodux(lamb, angstrom=True):             # <<<<<<<<<<<<<<
 *   #
 *     if (angstrom == True):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pymirrors.dirt_timing.zerodux", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lamb_mu);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1311
 *     return n
 * #
 *   def indexes(elem, lam_in):             # <<<<<<<<<<<<<<
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_3indexes(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing_3indexes = {"indexes", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing_3indexes, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_3indexes(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_elem = 0;
  PyObject *__pyx_v_lam_in = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("indexes (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_elem,&__pyx_n_s_lam_in,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_elem)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lam_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("indexes", 1, 2, 2, 1); __PYX_ERR(0, 1311, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "indexes") < 0)) __PYX_ERR(0, 1311, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_elem = values[0];
    __pyx_v_lam_in = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("indexes", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1311, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing.indexes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_11dirt_timing_2indexes(__pyx_self, __pyx_v_elem, __pyx_v_lam_in);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_11dirt_timing_2indexes(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_elem, PyObject *__pyx_v_lam_in) {
  PyObject *__pyx_v_lam = NULL;
  PyObject *__pyx_v_n2 = NULL;
  PyObject *__pyx_v_n_out = NULL;
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_interpol = NULL;
  PyObject *__pyx_v_sort = NULL;
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_v_k_out = NULL;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("indexes", 0);

  /* "mirror_lib_v04.pyx":1313
 *   def indexes(elem, lam_in):
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):             # <<<<<<<<<<<<<<
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_elem, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_DUST, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1313, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1314
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):
 *       lam = lam_in * 1.e-4             # <<<<<<<<<<<<<<
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_lam_in, __pyx_float_1_eneg_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_lam = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1315
 *     if (elem.upper() == 'DUST'):
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \             # <<<<<<<<<<<<<<
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \
 *           (lam**2 - 100.e0)
 */
    __pyx_t_1 = PyNumber_Power(__pyx_v_lam, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_07044083e0, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1316
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \             # <<<<<<<<<<<<<<
 *           (lam**2 - 100.e0)
 *       n_out = np.sqrt(n2)
 */
    __pyx_t_1 = PyNumber_Power(__pyx_v_lam, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyFloat_SubtractObjC(__pyx_t_1, __pyx_float_1_00585997eneg_2, 1.00585997e-2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1315
 *     if (elem.upper() == 'DUST'):
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \             # <<<<<<<<<<<<<<
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \
 *           (lam**2 - 100.e0)
 */
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyFloat_AddCObj(__pyx_float_1_28604141e0, __pyx_t_1, 1.28604141e0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1316
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \             # <<<<<<<<<<<<<<
 *           (lam**2 - 100.e0)
 *       n_out = np.sqrt(n2)
 */
    __pyx_t_1 = PyNumber_Power(__pyx_v_lam, __pyx_float_2_, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Multiply(__pyx_float_1_10202242e0, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1317
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \
 *           (lam**2 - 100.e0)             # <<<<<<<<<<<<<<
 *       n_out = np.sqrt(n2)
 *       return n_out, np.nan
 */
    __pyx_t_1 = PyNumber_Power(__pyx_v_lam, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyFloat_SubtractObjC(__pyx_t_1, __pyx_float_100_e0, 100.e0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1316
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \             # <<<<<<<<<<<<<<
 *           (lam**2 - 100.e0)
 *       n_out = np.sqrt(n2)
 */
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_n2 = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1318
 *           (lam**2 - 1.00585997e-2) + (1.10202242e0 * lam**2.) / \
 *           (lam**2 - 100.e0)
 *       n_out = np.sqrt(n2)             # <<<<<<<<<<<<<<
 *       return n_out, np.nan
 *     if (elem.upper() == 'OX'):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_n2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_n2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_n_out = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1319
 *           (lam**2 - 100.e0)
 *       n_out = np.sqrt(n2)
 *       return n_out, np.nan             # <<<<<<<<<<<<<<
 *     if (elem.upper() == 'OX'):
 *       lam = np.array([2.480000 ,2.066000 ,1.771000 ,1.550000 ,1.378000 ,\
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_nan); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_n_out);
    __Pyx_GIVEREF(__pyx_v_n_out);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_n_out);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1313
 *   def indexes(elem, lam_in):
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):             # <<<<<<<<<<<<<<
 *       lam = lam_in * 1.e-4
 *       n2 = 1.28604141e0 + (1.07044083e0 * lam**2) / \
 */
  }

  /* "mirror_lib_v04.pyx":1320
 *       n_out = np.sqrt(n2)
 *       return n_out, np.nan
 *     if (elem.upper() == 'OX'):             # <<<<<<<<<<<<<<
 *       lam = np.array([2.480000 ,2.066000 ,1.771000 ,1.550000 ,1.378000 ,\
 *           1.240000 ,1.127000 ,1.033000 ,0.953700 ,0.885600 ,0.826600 ,\
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_elem, __pyx_n_s_upper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_5, __pyx_n_u_OX, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1321
 *       return n_out, np.nan
 *     if (elem.upper() == 'OX'):
 *       lam = np.array([2.480000 ,2.066000 ,1.771000 ,1.550000 ,1.378000 ,\             # <<<<<<<<<<<<<<
 *           1.240000 ,1.127000 ,1.033000 ,0.953700 ,0.885600 ,0.826600 ,\
 *           0.774900 ,0.729300 ,0.688800 ,0.652500 ,0.619900 ,0.590400 ,\
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(56); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_float_2_480000);
    __Pyx_GIVEREF(__pyx_float_2_480000);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_float_2_480000);
    __Pyx_INCREF(__pyx_float_2_066000);
    __Pyx_GIVEREF(__pyx_float_2_066000);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_float_2_066000);
    __Pyx_INCREF(__pyx_float_1_771000);
    __Pyx_GIVEREF(__pyx_float_1_771000);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_float_1_771000);
    __Pyx_INCREF(__pyx_float_1_550000);
    __Pyx_GIVEREF(__pyx_float_1_550000);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_float_1_550000);
    __Pyx_INCREF(__pyx_float_1_378000);
    __Pyx_GIVEREF(__pyx_float_1_378000);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_float_1_378000);
    __Pyx_INCREF(__pyx_float_1_240000);
    __Pyx_GIVEREF(__pyx_float_1_240000);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_float_1_240000);
    __Pyx_INCREF(__pyx_float_1_127000);
    __Pyx_GIVEREF(__pyx_float_1_127000);
    PyList_SET_ITEM(__pyx_t_3, 6, __pyx_float_1_127000);
    __Pyx_INCREF(__pyx_float_1_033000);
    __Pyx_GIVEREF(__pyx_float_1_033000);
    PyList_SET_ITEM(__pyx_t_3, 7, __pyx_float_1_033000);
    __Pyx_INCREF(__pyx_float_0_953700);
    __Pyx_GIVEREF(__pyx_float_0_953700);
    PyList_SET_ITEM(__pyx_t_3, 8, __pyx_float_0_953700);
    __Pyx_INCREF(__pyx_float_0_885600);
    __Pyx_GIVEREF(__pyx_float_0_885600);
    PyList_SET_ITEM(__pyx_t_3, 9, __pyx_float_0_885600);
    __Pyx_INCREF(__pyx_float_0_826600);
    __Pyx_GIVEREF(__pyx_float_0_826600);
    PyList_SET_ITEM(__pyx_t_3, 10, __pyx_float_0_826600);
    __Pyx_INCREF(__pyx_float_0_774900);
    __Pyx_GIVEREF(__pyx_float_0_774900);
    PyList_SET_ITEM(__pyx_t_3, 11, __pyx_float_0_774900);
    __Pyx_INCREF(__pyx_float_0_729300);
    __Pyx_GIVEREF(__pyx_float_0_729300);
    PyList_SET_ITEM(__pyx_t_3, 12, __pyx_float_0_729300);
    __Pyx_INCREF(__pyx_float_0_688800);
    __Pyx_GIVEREF(__pyx_float_0_688800);
    PyList_SET_ITEM(__pyx_t_3, 13, __pyx_float_0_688800);
    __Pyx_INCREF(__pyx_float_0_652500);
    __Pyx_GIVEREF(__pyx_float_0_652500);
    PyList_SET_ITEM(__pyx_t_3, 14, __pyx_float_0_652500);
    __Pyx_INCREF(__pyx_float_0_619900);
    __Pyx_GIVEREF(__pyx_float_0_619900);
    PyList_SET_ITEM(__pyx_t_3, 15, __pyx_float_0_619900);
    __Pyx_INCREF(__pyx_float_0_590400);
    __Pyx_GIVEREF(__pyx_float_0_590400);
    PyList_SET_ITEM(__pyx_t_3, 16, __pyx_float_0_590400);
    __Pyx_INCREF(__pyx_float_0_563600);
    __Pyx_GIVEREF(__pyx_float_0_563600);
    PyList_SET_ITEM(__pyx_t_3, 17, __pyx_float_0_563600);
    __Pyx_INCREF(__pyx_float_0_539100);
    __Pyx_GIVEREF(__pyx_float_0_539100);
    PyList_SET_ITEM(__pyx_t_3, 18, __pyx_float_0_539100);
    __Pyx_INCREF(__pyx_float_0_516600);
    __Pyx_GIVEREF(__pyx_float_0_516600);
    PyList_SET_ITEM(__pyx_t_3, 19, __pyx_float_0_516600);
    __Pyx_INCREF(__pyx_float_0_495900);
    __Pyx_GIVEREF(__pyx_float_0_495900);
    PyList_SET_ITEM(__pyx_t_3, 20, __pyx_float_0_495900);
    __Pyx_INCREF(__pyx_float_0_476900);
    __Pyx_GIVEREF(__pyx_float_0_476900);
    PyList_SET_ITEM(__pyx_t_3, 21, __pyx_float_0_476900);
    __Pyx_INCREF(__pyx_float_0_459200);
    __Pyx_GIVEREF(__pyx_float_0_459200);
    PyList_SET_ITEM(__pyx_t_3, 22, __pyx_float_0_459200);
    __Pyx_INCREF(__pyx_float_0_442800);
    __Pyx_GIVEREF(__pyx_float_0_442800);
    PyList_SET_ITEM(__pyx_t_3, 23, __pyx_float_0_442800);
    __Pyx_INCREF(__pyx_float_0_427500);
    __Pyx_GIVEREF(__pyx_float_0_427500);
    PyList_SET_ITEM(__pyx_t_3, 24, __pyx_float_0_427500);
    __Pyx_INCREF(__pyx_float_0_413300);
    __Pyx_GIVEREF(__pyx_float_0_413300);
    PyList_SET_ITEM(__pyx_t_3, 25, __pyx_float_0_413300);
    __Pyx_INCREF(__pyx_float_0_399900);
    __Pyx_GIVEREF(__pyx_float_0_399900);
    PyList_SET_ITEM(__pyx_t_3, 26, __pyx_float_0_399900);
    __Pyx_INCREF(__pyx_float_0_387500);
    __Pyx_GIVEREF(__pyx_float_0_387500);
    PyList_SET_ITEM(__pyx_t_3, 27, __pyx_float_0_387500);
    __Pyx_INCREF(__pyx_float_0_375700);
    __Pyx_GIVEREF(__pyx_float_0_375700);
    PyList_SET_ITEM(__pyx_t_3, 28, __pyx_float_0_375700);
    __Pyx_INCREF(__pyx_float_0_364700);
    __Pyx_GIVEREF(__pyx_float_0_364700);
    PyList_SET_ITEM(__pyx_t_3, 29, __pyx_float_0_364700);
    __Pyx_INCREF(__pyx_float_0_354200);
    __Pyx_GIVEREF(__pyx_float_0_354200);
    PyList_SET_ITEM(__pyx_t_3, 30, __pyx_float_0_354200);
    __Pyx_INCREF(__pyx_float_0_344400);
    __Pyx_GIVEREF(__pyx_float_0_344400);
    PyList_SET_ITEM(__pyx_t_3, 31, __pyx_float_0_344400);
    __Pyx_INCREF(__pyx_float_0_335100);
    __Pyx_GIVEREF(__pyx_float_0_335100);
    PyList_SET_ITEM(__pyx_t_3, 32, __pyx_float_0_335100);
    __Pyx_INCREF(__pyx_float_0_326300);
    __Pyx_GIVEREF(__pyx_float_0_326300);
    PyList_SET_ITEM(__pyx_t_3, 33, __pyx_float_0_326300);
    __Pyx_INCREF(__pyx_float_0_317900);
    __Pyx_GIVEREF(__pyx_float_0_317900);
    PyList_SET_ITEM(__pyx_t_3, 34, __pyx_float_0_317900);
    __Pyx_INCREF(__pyx_float_0_310000);
    __Pyx_GIVEREF(__pyx_float_0_310000);
    PyList_SET_ITEM(__pyx_t_3, 35, __pyx_float_0_310000);
    __Pyx_INCREF(__pyx_float_0_302400);
    __Pyx_GIVEREF(__pyx_float_0_302400);
    PyList_SET_ITEM(__pyx_t_3, 36, __pyx_float_0_302400);
    __Pyx_INCREF(__pyx_float_0_295200);
    __Pyx_GIVEREF(__pyx_float_0_295200);
    PyList_SET_ITEM(__pyx_t_3, 37, __pyx_float_0_295200);
    __Pyx_INCREF(__pyx_float_0_288300);
    __Pyx_GIVEREF(__pyx_float_0_288300);
    PyList_SET_ITEM(__pyx_t_3, 38, __pyx_float_0_288300);
    __Pyx_INCREF(__pyx_float_0_281800);
    __Pyx_GIVEREF(__pyx_float_0_281800);
    PyList_SET_ITEM(__pyx_t_3, 39, __pyx_float_0_281800);
    __Pyx_INCREF(__pyx_float_0_275500);
    __Pyx_GIVEREF(__pyx_float_0_275500);
    PyList_SET_ITEM(__pyx_t_3, 40, __pyx_float_0_275500);
    __Pyx_INCREF(__pyx_float_0_269500);
    __Pyx_GIVEREF(__pyx_float_0_269500);
    PyList_SET_ITEM(__pyx_t_3, 41, __pyx_float_0_269500);
    __Pyx_INCREF(__pyx_float_0_263800);
    __Pyx_GIVEREF(__pyx_float_0_263800);
    PyList_SET_ITEM(__pyx_t_3, 42, __pyx_float_0_263800);
    __Pyx_INCREF(__pyx_float_0_258300);
    __Pyx_GIVEREF(__pyx_float_0_258300);
    PyList_SET_ITEM(__pyx_t_3, 43, __pyx_float_0_258300);
    __Pyx_INCREF(__pyx_float_0_253000);
    __Pyx_GIVEREF(__pyx_float_0_253000);
    PyList_SET_ITEM(__pyx_t_3, 44, __pyx_float_0_253000);
    __Pyx_INCREF(__pyx_float_0_248000);
    __Pyx_GIVEREF(__pyx_float_0_248000);
    PyList_SET_ITEM(__pyx_t_3, 45, __pyx_float_0_248000);
    __Pyx_INCREF(__pyx_float_0_243100);
    __Pyx_GIVEREF(__pyx_float_0_243100);
    PyList_SET_ITEM(__pyx_t_3, 46, __pyx_float_0_243100);
    __Pyx_INCREF(__pyx_float_0_238400);
    __Pyx_GIVEREF(__pyx_float_0_238400);
    PyList_SET_ITEM(__pyx_t_3, 47, __pyx_float_0_238400);
    __Pyx_INCREF(__pyx_float_0_233900);
    __Pyx_GIVEREF(__pyx_float_0_233900);
    PyList_SET_ITEM(__pyx_t_3, 48, __pyx_float_0_233900);
    __Pyx_INCREF(__pyx_float_0_229600);
    __Pyx_GIVEREF(__pyx_float_0_229600);
    PyList_SET_ITEM(__pyx_t_3, 49, __pyx_float_0_229600);
    __Pyx_INCREF(__pyx_float_0_225400);
    __Pyx_GIVEREF(__pyx_float_0_225400);
    PyList_SET_ITEM(__pyx_t_3, 50, __pyx_float_0_225400);
    __Pyx_INCREF(__pyx_float_0_221400);
    __Pyx_GIVEREF(__pyx_float_0_221400);
    PyList_SET_ITEM(__pyx_t_3, 51, __pyx_float_0_221400);
    __Pyx_INCREF(__pyx_float_0_217500);
    __Pyx_GIVEREF(__pyx_float_0_217500);
    PyList_SET_ITEM(__pyx_t_3, 52, __pyx_float_0_217500);
    __Pyx_INCREF(__pyx_float_0_213800);
    __Pyx_GIVEREF(__pyx_float_0_213800);
    PyList_SET_ITEM(__pyx_t_3, 53, __pyx_float_0_213800);
    __Pyx_INCREF(__pyx_float_0_210100);
    __Pyx_GIVEREF(__pyx_float_0_210100);
    PyList_SET_ITEM(__pyx_t_3, 54, __pyx_float_0_210100);
    __Pyx_INCREF(__pyx_float_0_206600);
    __Pyx_GIVEREF(__pyx_float_0_206600);
    PyList_SET_ITEM(__pyx_t_3, 55, __pyx_float_0_206600);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1330
 *           0.269500 ,0.263800 ,0.258300 ,0.253000 ,0.248000 ,0.243100 ,\
 *           0.238400 ,0.233900 ,0.229600 ,0.225400 ,0.221400 ,0.217500 ,\
 *           0.213800 ,0.210100 ,0.206600]) * 1.e4             # <<<<<<<<<<<<<<
 *       n = np.array([1.726000 ,1.736000 ,1.742000 ,1.746000 ,1.749000 ,\
 *           1.751000 ,1.752600 ,1.754200 ,1.755800 ,1.757400 ,1.759000 ,\
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_e4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1330, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_lam = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1331
 *           0.238400 ,0.233900 ,0.229600 ,0.225400 ,0.221400 ,0.217500 ,\
 *           0.213800 ,0.210100 ,0.206600]) * 1.e4
 *       n = np.array([1.726000 ,1.736000 ,1.742000 ,1.746000 ,1.749000 ,\             # <<<<<<<<<<<<<<
 *           1.751000 ,1.752600 ,1.754200 ,1.755800 ,1.757400 ,1.759000 ,\
 *           1.760600 ,1.762200 ,1.763800 ,1.765400 ,1.767000 ,1.768568 ,\
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(56); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_float_1_726000);
    __Pyx_GIVEREF(__pyx_float_1_726000);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_float_1_726000);
    __Pyx_INCREF(__pyx_float_1_736000);
    __Pyx_GIVEREF(__pyx_float_1_736000);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_float_1_736000);
    __Pyx_INCREF(__pyx_float_1_742000);
    __Pyx_GIVEREF(__pyx_float_1_742000);
    PyList_SET_ITEM(__pyx_t_5, 2, __pyx_float_1_742000);
    __Pyx_INCREF(__pyx_float_1_746000);
    __Pyx_GIVEREF(__pyx_float_1_746000);
    PyList_SET_ITEM(__pyx_t_5, 3, __pyx_float_1_746000);
    __Pyx_INCREF(__pyx_float_1_749000);
    __Pyx_GIVEREF(__pyx_float_1_749000);
    PyList_SET_ITEM(__pyx_t_5, 4, __pyx_float_1_749000);
    __Pyx_INCREF(__pyx_float_1_751000);
    __Pyx_GIVEREF(__pyx_float_1_751000);
    PyList_SET_ITEM(__pyx_t_5, 5, __pyx_float_1_751000);
    __Pyx_INCREF(__pyx_float_1_752600);
    __Pyx_GIVEREF(__pyx_float_1_752600);
    PyList_SET_ITEM(__pyx_t_5, 6, __pyx_float_1_752600);
    __Pyx_INCREF(__pyx_float_1_754200);
    __Pyx_GIVEREF(__pyx_float_1_754200);
    PyList_SET_ITEM(__pyx_t_5, 7, __pyx_float_1_754200);
    __Pyx_INCREF(__pyx_float_1_755800);
    __Pyx_GIVEREF(__pyx_float_1_755800);
    PyList_SET_ITEM(__pyx_t_5, 8, __pyx_float_1_755800);
    __Pyx_INCREF(__pyx_float_1_757400);
    __Pyx_GIVEREF(__pyx_float_1_757400);
    PyList_SET_ITEM(__pyx_t_5, 9, __pyx_float_1_757400);
    __Pyx_INCREF(__pyx_float_1_759000);
    __Pyx_GIVEREF(__pyx_float_1_759000);
    PyList_SET_ITEM(__pyx_t_5, 10, __pyx_float_1_759000);
    __Pyx_INCREF(__pyx_float_1_760600);
    __Pyx_GIVEREF(__pyx_float_1_760600);
    PyList_SET_ITEM(__pyx_t_5, 11, __pyx_float_1_760600);
    __Pyx_INCREF(__pyx_float_1_762200);
    __Pyx_GIVEREF(__pyx_float_1_762200);
    PyList_SET_ITEM(__pyx_t_5, 12, __pyx_float_1_762200);
    __Pyx_INCREF(__pyx_float_1_763800);
    __Pyx_GIVEREF(__pyx_float_1_763800);
    PyList_SET_ITEM(__pyx_t_5, 13, __pyx_float_1_763800);
    __Pyx_INCREF(__pyx_float_1_765400);
    __Pyx_GIVEREF(__pyx_float_1_765400);
    PyList_SET_ITEM(__pyx_t_5, 14, __pyx_float_1_765400);
    __Pyx_INCREF(__pyx_float_1_767000);
    __Pyx_GIVEREF(__pyx_float_1_767000);
    PyList_SET_ITEM(__pyx_t_5, 15, __pyx_float_1_767000);
    __Pyx_INCREF(__pyx_float_1_768568);
    __Pyx_GIVEREF(__pyx_float_1_768568);
    PyList_SET_ITEM(__pyx_t_5, 16, __pyx_float_1_768568);
    __Pyx_INCREF(__pyx_float_1_770144);
    __Pyx_GIVEREF(__pyx_float_1_770144);
    PyList_SET_ITEM(__pyx_t_5, 17, __pyx_float_1_770144);
    __Pyx_INCREF(__pyx_float_1_771736);
    __Pyx_GIVEREF(__pyx_float_1_771736);
    PyList_SET_ITEM(__pyx_t_5, 18, __pyx_float_1_771736);
    __Pyx_INCREF(__pyx_float_1_773352);
    __Pyx_GIVEREF(__pyx_float_1_773352);
    PyList_SET_ITEM(__pyx_t_5, 19, __pyx_float_1_773352);
    __Pyx_INCREF(__pyx_float_1_775000);
    __Pyx_GIVEREF(__pyx_float_1_775000);
    PyList_SET_ITEM(__pyx_t_5, 20, __pyx_float_1_775000);
    __Pyx_INCREF(__pyx_float_1_776656);
    __Pyx_GIVEREF(__pyx_float_1_776656);
    PyList_SET_ITEM(__pyx_t_5, 21, __pyx_float_1_776656);
    __Pyx_INCREF(__pyx_float_1_778368);
    __Pyx_GIVEREF(__pyx_float_1_778368);
    PyList_SET_ITEM(__pyx_t_5, 22, __pyx_float_1_778368);
    __Pyx_INCREF(__pyx_float_1_780152);
    __Pyx_GIVEREF(__pyx_float_1_780152);
    PyList_SET_ITEM(__pyx_t_5, 23, __pyx_float_1_780152);
    __Pyx_INCREF(__pyx_float_1_782024);
    __Pyx_GIVEREF(__pyx_float_1_782024);
    PyList_SET_ITEM(__pyx_t_5, 24, __pyx_float_1_782024);
    __Pyx_INCREF(__pyx_float_1_784000);
    __Pyx_GIVEREF(__pyx_float_1_784000);
    PyList_SET_ITEM(__pyx_t_5, 25, __pyx_float_1_784000);
    __Pyx_INCREF(__pyx_float_1_786192);
    __Pyx_GIVEREF(__pyx_float_1_786192);
    PyList_SET_ITEM(__pyx_t_5, 26, __pyx_float_1_786192);
    __Pyx_INCREF(__pyx_float_1_788496);
    __Pyx_GIVEREF(__pyx_float_1_788496);
    PyList_SET_ITEM(__pyx_t_5, 27, __pyx_float_1_788496);
    __Pyx_INCREF(__pyx_float_1_790904);
    __Pyx_GIVEREF(__pyx_float_1_790904);
    PyList_SET_ITEM(__pyx_t_5, 28, __pyx_float_1_790904);
    __Pyx_INCREF(__pyx_float_1_793408);
    __Pyx_GIVEREF(__pyx_float_1_793408);
    PyList_SET_ITEM(__pyx_t_5, 29, __pyx_float_1_793408);
    __Pyx_INCREF(__pyx_float_1_796000);
    __Pyx_GIVEREF(__pyx_float_1_796000);
    PyList_SET_ITEM(__pyx_t_5, 30, __pyx_float_1_796000);
    __Pyx_INCREF(__pyx_float_1_798608);
    __Pyx_GIVEREF(__pyx_float_1_798608);
    PyList_SET_ITEM(__pyx_t_5, 31, __pyx_float_1_798608);
    __Pyx_INCREF(__pyx_float_1_801304);
    __Pyx_GIVEREF(__pyx_float_1_801304);
    PyList_SET_ITEM(__pyx_t_5, 32, __pyx_float_1_801304);
    __Pyx_INCREF(__pyx_float_1_804096);
    __Pyx_GIVEREF(__pyx_float_1_804096);
    PyList_SET_ITEM(__pyx_t_5, 33, __pyx_float_1_804096);
    __Pyx_INCREF(__pyx_float_1_806992);
    __Pyx_GIVEREF(__pyx_float_1_806992);
    PyList_SET_ITEM(__pyx_t_5, 34, __pyx_float_1_806992);
    __Pyx_INCREF(__pyx_float_1_810000);
    __Pyx_GIVEREF(__pyx_float_1_810000);
    PyList_SET_ITEM(__pyx_t_5, 35, __pyx_float_1_810000);
    __Pyx_INCREF(__pyx_float_1_813576);
    __Pyx_GIVEREF(__pyx_float_1_813576);
    PyList_SET_ITEM(__pyx_t_5, 36, __pyx_float_1_813576);
    __Pyx_INCREF(__pyx_float_1_817168);
    __Pyx_GIVEREF(__pyx_float_1_817168);
    PyList_SET_ITEM(__pyx_t_5, 37, __pyx_float_1_817168);
    __Pyx_INCREF(__pyx_float_1_820672);
    __Pyx_GIVEREF(__pyx_float_1_820672);
    PyList_SET_ITEM(__pyx_t_5, 38, __pyx_float_1_820672);
    __Pyx_INCREF(__pyx_float_1_823984);
    __Pyx_GIVEREF(__pyx_float_1_823984);
    PyList_SET_ITEM(__pyx_t_5, 39, __pyx_float_1_823984);
    __Pyx_INCREF(__pyx_float_1_827000);
    __Pyx_GIVEREF(__pyx_float_1_827000);
    PyList_SET_ITEM(__pyx_t_5, 40, __pyx_float_1_827000);
    __Pyx_INCREF(__pyx_float_1_829104);
    __Pyx_GIVEREF(__pyx_float_1_829104);
    PyList_SET_ITEM(__pyx_t_5, 41, __pyx_float_1_829104);
    __Pyx_INCREF(__pyx_float_1_830832);
    __Pyx_GIVEREF(__pyx_float_1_830832);
    PyList_SET_ITEM(__pyx_t_5, 42, __pyx_float_1_830832);
    __Pyx_INCREF(__pyx_float_1_832208);
    __Pyx_GIVEREF(__pyx_float_1_832208);
    PyList_SET_ITEM(__pyx_t_5, 43, __pyx_float_1_832208);
    __Pyx_INCREF(__pyx_float_1_833256);
    __Pyx_GIVEREF(__pyx_float_1_833256);
    PyList_SET_ITEM(__pyx_t_5, 44, __pyx_float_1_833256);
    __Pyx_INCREF(__pyx_float_1_834000);
    __Pyx_GIVEREF(__pyx_float_1_834000);
    PyList_SET_ITEM(__pyx_t_5, 45, __pyx_float_1_834000);
    __Pyx_INCREF(__pyx_float_1_834336);
    __Pyx_GIVEREF(__pyx_float_1_834336);
    PyList_SET_ITEM(__pyx_t_5, 46, __pyx_float_1_834336);
    __Pyx_INCREF(__pyx_float_1_834448);
    __Pyx_GIVEREF(__pyx_float_1_834448);
    PyList_SET_ITEM(__pyx_t_5, 47, __pyx_float_1_834448);
    __Pyx_INCREF(__pyx_float_1_834392);
    __Pyx_GIVEREF(__pyx_float_1_834392);
    PyList_SET_ITEM(__pyx_t_5, 48, __pyx_float_1_834392);
    __Pyx_INCREF(__pyx_float_1_834224);
    __Pyx_GIVEREF(__pyx_float_1_834224);
    PyList_SET_ITEM(__pyx_t_5, 49, __pyx_float_1_834224);
    __Pyx_INCREF(__pyx_float_1_834000);
    __Pyx_GIVEREF(__pyx_float_1_834000);
    PyList_SET_ITEM(__pyx_t_5, 50, __pyx_float_1_834000);
    __Pyx_INCREF(__pyx_float_1_833776);
    __Pyx_GIVEREF(__pyx_float_1_833776);
    PyList_SET_ITEM(__pyx_t_5, 51, __pyx_float_1_833776);
    __Pyx_INCREF(__pyx_float_1_833608);
    __Pyx_GIVEREF(__pyx_float_1_833608);
    PyList_SET_ITEM(__pyx_t_5, 52, __pyx_float_1_833608);
    __Pyx_INCREF(__pyx_float_1_833552);
    __Pyx_GIVEREF(__pyx_float_1_833552);
    PyList_SET_ITEM(__pyx_t_5, 53, __pyx_float_1_833552);
    __Pyx_INCREF(__pyx_float_1_833664);
    __Pyx_GIVEREF(__pyx_float_1_833664);
    PyList_SET_ITEM(__pyx_t_5, 54, __pyx_float_1_833664);
    __Pyx_INCREF(__pyx_float_1_834000);
    __Pyx_GIVEREF(__pyx_float_1_834000);
    PyList_SET_ITEM(__pyx_t_5, 55, __pyx_float_1_834000);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_n = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1341
 *           1.834448 ,1.834392 ,1.834224 ,1.834000 ,1.833776 ,1.833608 ,\
 *           1.833552 ,1.833664 ,1.834000])
 *       from scipy.interpolate import interp1d as interpol             # <<<<<<<<<<<<<<
 *       sort = np.argsort(lam)
 *       lam = lam[sort]
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_interp1d);
    __Pyx_GIVEREF(__pyx_n_s_interp1d);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_interp1d);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_scipy_interpolate, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_interp1d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v_interpol = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1342
 *           1.833552 ,1.833664 ,1.834000])
 *       from scipy.interpolate import interp1d as interpol
 *       sort = np.argsort(lam)             # <<<<<<<<<<<<<<
 *       lam = lam[sort]
 *       n = n[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_argsort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_1, __pyx_v_lam) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_lam);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_sort = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1343
 *       from scipy.interpolate import interp1d as interpol
 *       sort = np.argsort(lam)
 *       lam = lam[sort]             # <<<<<<<<<<<<<<
 *       n = n[sort]
 *       f = interpol(lam, n)
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_lam, __pyx_v_sort); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_lam, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1344
 *       sort = np.argsort(lam)
 *       lam = lam[sort]
 *       n = n[sort]             # <<<<<<<<<<<<<<
 *       f = interpol(lam, n)
 *       print(lam[0], lam_in, lam[-1])
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_n, __pyx_v_sort); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_n, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1345
 *       lam = lam[sort]
 *       n = n[sort]
 *       f = interpol(lam, n)             # <<<<<<<<<<<<<<
 *       print(lam[0], lam_in, lam[-1])
 *       n_out = f(lam_in)
 */
    __Pyx_INCREF(__pyx_v_interpol);
    __pyx_t_5 = __pyx_v_interpol; __pyx_t_1 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_lam, __pyx_v_n};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_lam, __pyx_v_n};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1345, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_v_lam);
      __Pyx_GIVEREF(__pyx_v_lam);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_6, __pyx_v_lam);
      __Pyx_INCREF(__pyx_v_n);
      __Pyx_GIVEREF(__pyx_v_n);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_6, __pyx_v_n);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_f = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1346
 *       n = n[sort]
 *       f = interpol(lam, n)
 *       print(lam[0], lam_in, lam[-1])             # <<<<<<<<<<<<<<
 *       n_out = f(lam_in)
 *       k_out = 0.
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_lam, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_lam, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_lam_in);
    __Pyx_GIVEREF(__pyx_v_lam_in);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_lam_in);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1347
 *       f = interpol(lam, n)
 *       print(lam[0], lam_in, lam[-1])
 *       n_out = f(lam_in)             # <<<<<<<<<<<<<<
 *       k_out = 0.
 *       return n_out, k_out
 */
    __Pyx_INCREF(__pyx_v_f);
    __pyx_t_2 = __pyx_v_f; __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_lam_in) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_lam_in);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_n_out = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1348
 *       print(lam[0], lam_in, lam[-1])
 *       n_out = f(lam_in)
 *       k_out = 0.             # <<<<<<<<<<<<<<
 *       return n_out, k_out
 * 
 */
    __Pyx_INCREF(__pyx_float_0_);
    __pyx_v_k_out = __pyx_float_0_;

    /* "mirror_lib_v04.pyx":1349
 *       n_out = f(lam_in)
 *       k_out = 0.
 *       return n_out, k_out             # <<<<<<<<<<<<<<
 * 
 *     elif (elem.upper() == 'AL'):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_n_out);
    __Pyx_GIVEREF(__pyx_v_n_out);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_n_out);
    __Pyx_INCREF(__pyx_v_k_out);
    __Pyx_GIVEREF(__pyx_v_k_out);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_k_out);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1320
 *       n_out = np.sqrt(n2)
 *       return n_out, np.nan
 *     if (elem.upper() == 'OX'):             # <<<<<<<<<<<<<<
 *       lam = np.array([2.480000 ,2.066000 ,1.771000 ,1.550000 ,1.378000 ,\
 *           1.240000 ,1.127000 ,1.033000 ,0.953700 ,0.885600 ,0.826600 ,\
 */
  }

  /* "mirror_lib_v04.pyx":1351
 *       return n_out, k_out
 * 
 *     elif (elem.upper() == 'AL'):             # <<<<<<<<<<<<<<
 *       lam = np.array([200.000000, 177.119995, 153.850006, 137.759995, \
 *           125.000000, 99.996002, 80.000999, 66.666000, 57.144001, 50.000000, \
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_elem, __pyx_n_s_upper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_5, __pyx_n_u_AL, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1351, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1352
 * 
 *     elif (elem.upper() == 'AL'):
 *       lam = np.array([200.000000, 177.119995, 153.850006, 137.759995, \             # <<<<<<<<<<<<<<
 *           125.000000, 99.996002, 80.000999, 66.666000, 57.144001, 50.000000, \
 *           44.444000, 40.000000, 33.333000, 30.996000, 27.552000, 24.797001, \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyList_New(206); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_float_200_000000);
    __Pyx_GIVEREF(__pyx_float_200_000000);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_float_200_000000);
    __Pyx_INCREF(__pyx_float_177_119995);
    __Pyx_GIVEREF(__pyx_float_177_119995);
    PyList_SET_ITEM(__pyx_t_2, 1, __pyx_float_177_119995);
    __Pyx_INCREF(__pyx_float_153_850006);
    __Pyx_GIVEREF(__pyx_float_153_850006);
    PyList_SET_ITEM(__pyx_t_2, 2, __pyx_float_153_850006);
    __Pyx_INCREF(__pyx_float_137_759995);
    __Pyx_GIVEREF(__pyx_float_137_759995);
    PyList_SET_ITEM(__pyx_t_2, 3, __pyx_float_137_759995);
    __Pyx_INCREF(__pyx_float_125_000000);
    __Pyx_GIVEREF(__pyx_float_125_000000);
    PyList_SET_ITEM(__pyx_t_2, 4, __pyx_float_125_000000);
    __Pyx_INCREF(__pyx_float_99_996002);
    __Pyx_GIVEREF(__pyx_float_99_996002);
    PyList_SET_ITEM(__pyx_t_2, 5, __pyx_float_99_996002);
    __Pyx_INCREF(__pyx_float_80_000999);
    __Pyx_GIVEREF(__pyx_float_80_000999);
    PyList_SET_ITEM(__pyx_t_2, 6, __pyx_float_80_000999);
    __Pyx_INCREF(__pyx_float_66_666000);
    __Pyx_GIVEREF(__pyx_float_66_666000);
    PyList_SET_ITEM(__pyx_t_2, 7, __pyx_float_66_666000);
    __Pyx_INCREF(__pyx_float_57_144001);
    __Pyx_GIVEREF(__pyx_float_57_144001);
    PyList_SET_ITEM(__pyx_t_2, 8, __pyx_float_57_144001);
    __Pyx_INCREF(__pyx_float_50_000000);
    __Pyx_GIVEREF(__pyx_float_50_000000);
    PyList_SET_ITEM(__pyx_t_2, 9, __pyx_float_50_000000);
    __Pyx_INCREF(__pyx_float_44_444000);
    __Pyx_GIVEREF(__pyx_float_44_444000);
    PyList_SET_ITEM(__pyx_t_2, 10, __pyx_float_44_444000);
    __Pyx_INCREF(__pyx_float_40_000000);
    __Pyx_GIVEREF(__pyx_float_40_000000);
    PyList_SET_ITEM(__pyx_t_2, 11, __pyx_float_40_000000);
    __Pyx_INCREF(__pyx_float_33_333000);
    __Pyx_GIVEREF(__pyx_float_33_333000);
    PyList_SET_ITEM(__pyx_t_2, 12, __pyx_float_33_333000);
    __Pyx_INCREF(__pyx_float_30_996000);
    __Pyx_GIVEREF(__pyx_float_30_996000);
    PyList_SET_ITEM(__pyx_t_2, 13, __pyx_float_30_996000);
    __Pyx_INCREF(__pyx_float_27_552000);
    __Pyx_GIVEREF(__pyx_float_27_552000);
    PyList_SET_ITEM(__pyx_t_2, 14, __pyx_float_27_552000);
    __Pyx_INCREF(__pyx_float_24_797001);
    __Pyx_GIVEREF(__pyx_float_24_797001);
    PyList_SET_ITEM(__pyx_t_2, 15, __pyx_float_24_797001);
    __Pyx_INCREF(__pyx_float_22_542999);
    __Pyx_GIVEREF(__pyx_float_22_542999);
    PyList_SET_ITEM(__pyx_t_2, 16, __pyx_float_22_542999);
    __Pyx_INCREF(__pyx_float_20_664000);
    __Pyx_GIVEREF(__pyx_float_20_664000);
    PyList_SET_ITEM(__pyx_t_2, 17, __pyx_float_20_664000);
    __Pyx_INCREF(__pyx_float_19_075001);
    __Pyx_GIVEREF(__pyx_float_19_075001);
    PyList_SET_ITEM(__pyx_t_2, 18, __pyx_float_19_075001);
    __Pyx_INCREF(__pyx_float_17_712000);
    __Pyx_GIVEREF(__pyx_float_17_712000);
    PyList_SET_ITEM(__pyx_t_2, 19, __pyx_float_17_712000);
    __Pyx_INCREF(__pyx_float_15_498000);
    __Pyx_GIVEREF(__pyx_float_15_498000);
    PyList_SET_ITEM(__pyx_t_2, 20, __pyx_float_15_498000);
    __Pyx_INCREF(__pyx_float_13_776000);
    __Pyx_GIVEREF(__pyx_float_13_776000);
    PyList_SET_ITEM(__pyx_t_2, 21, __pyx_float_13_776000);
    __Pyx_INCREF(__pyx_float_12_399000);
    __Pyx_GIVEREF(__pyx_float_12_399000);
    PyList_SET_ITEM(__pyx_t_2, 22, __pyx_float_12_399000);
    __Pyx_INCREF(__pyx_float_10_332000);
    __Pyx_GIVEREF(__pyx_float_10_332000);
    PyList_SET_ITEM(__pyx_t_2, 23, __pyx_float_10_332000);
    __Pyx_INCREF(__pyx_float_8_856100);
    __Pyx_GIVEREF(__pyx_float_8_856100);
    PyList_SET_ITEM(__pyx_t_2, 24, __pyx_float_8_856100);
    __Pyx_INCREF(__pyx_float_7_749100);
    __Pyx_GIVEREF(__pyx_float_7_749100);
    PyList_SET_ITEM(__pyx_t_2, 25, __pyx_float_7_749100);
    __Pyx_INCREF(__pyx_float_6_888100);
    __Pyx_GIVEREF(__pyx_float_6_888100);
    PyList_SET_ITEM(__pyx_t_2, 26, __pyx_float_6_888100);
    __Pyx_INCREF(__pyx_float_6_199300);
    __Pyx_GIVEREF(__pyx_float_6_199300);
    PyList_SET_ITEM(__pyx_t_2, 27, __pyx_float_6_199300);
    __Pyx_INCREF(__pyx_float_5_635700);
    __Pyx_GIVEREF(__pyx_float_5_635700);
    PyList_SET_ITEM(__pyx_t_2, 28, __pyx_float_5_635700);
    __Pyx_INCREF(__pyx_float_5_166000);
    __Pyx_GIVEREF(__pyx_float_5_166000);
    PyList_SET_ITEM(__pyx_t_2, 29, __pyx_float_5_166000);
    __Pyx_INCREF(__pyx_float_4_768700);
    __Pyx_GIVEREF(__pyx_float_4_768700);
    PyList_SET_ITEM(__pyx_t_2, 30, __pyx_float_4_768700);
    __Pyx_INCREF(__pyx_float_4_428000);
    __Pyx_GIVEREF(__pyx_float_4_428000);
    PyList_SET_ITEM(__pyx_t_2, 31, __pyx_float_4_428000);
    __Pyx_INCREF(__pyx_float_4_132800);
    __Pyx_GIVEREF(__pyx_float_4_132800);
    PyList_SET_ITEM(__pyx_t_2, 32, __pyx_float_4_132800);
    __Pyx_INCREF(__pyx_float_3_874500);
    __Pyx_GIVEREF(__pyx_float_3_874500);
    PyList_SET_ITEM(__pyx_t_2, 33, __pyx_float_3_874500);
    __Pyx_INCREF(__pyx_float_3_646600);
    __Pyx_GIVEREF(__pyx_float_3_646600);
    PyList_SET_ITEM(__pyx_t_2, 34, __pyx_float_3_646600);
    __Pyx_INCREF(__pyx_float_3_444000);
    __Pyx_GIVEREF(__pyx_float_3_444000);
    PyList_SET_ITEM(__pyx_t_2, 35, __pyx_float_3_444000);
    __Pyx_INCREF(__pyx_float_3_262800);
    __Pyx_GIVEREF(__pyx_float_3_262800);
    PyList_SET_ITEM(__pyx_t_2, 36, __pyx_float_3_262800);
    __Pyx_INCREF(__pyx_float_3_099600);
    __Pyx_GIVEREF(__pyx_float_3_099600);
    PyList_SET_ITEM(__pyx_t_2, 37, __pyx_float_3_099600);
    __Pyx_INCREF(__pyx_float_2_755200);
    __Pyx_GIVEREF(__pyx_float_2_755200);
    PyList_SET_ITEM(__pyx_t_2, 38, __pyx_float_2_755200);
    __Pyx_INCREF(__pyx_float_2_479700);
    __Pyx_GIVEREF(__pyx_float_2_479700);
    PyList_SET_ITEM(__pyx_t_2, 39, __pyx_float_2_479700);
    __Pyx_INCREF(__pyx_float_2_066400);
    __Pyx_GIVEREF(__pyx_float_2_066400);
    PyList_SET_ITEM(__pyx_t_2, 40, __pyx_float_2_066400);
    __Pyx_INCREF(__pyx_float_1_771200);
    __Pyx_GIVEREF(__pyx_float_1_771200);
    PyList_SET_ITEM(__pyx_t_2, 41, __pyx_float_1_771200);
    __Pyx_INCREF(__pyx_float_1_549800);
    __Pyx_GIVEREF(__pyx_float_1_549800);
    PyList_SET_ITEM(__pyx_t_2, 42, __pyx_float_1_549800);
    __Pyx_INCREF(__pyx_float_1_377600);
    __Pyx_GIVEREF(__pyx_float_1_377600);
    PyList_SET_ITEM(__pyx_t_2, 43, __pyx_float_1_377600);
    __Pyx_INCREF(__pyx_float_1_239900);
    __Pyx_GIVEREF(__pyx_float_1_239900);
    PyList_SET_ITEM(__pyx_t_2, 44, __pyx_float_1_239900);
    __Pyx_INCREF(__pyx_float_1_127100);
    __Pyx_GIVEREF(__pyx_float_1_127100);
    PyList_SET_ITEM(__pyx_t_2, 45, __pyx_float_1_127100);
    __Pyx_INCREF(__pyx_float_1_033200);
    __Pyx_GIVEREF(__pyx_float_1_033200);
    PyList_SET_ITEM(__pyx_t_2, 46, __pyx_float_1_033200);
    __Pyx_INCREF(__pyx_float_0_999880);
    __Pyx_GIVEREF(__pyx_float_0_999880);
    PyList_SET_ITEM(__pyx_t_2, 47, __pyx_float_0_999880);
    __Pyx_INCREF(__pyx_float_0_968630);
    __Pyx_GIVEREF(__pyx_float_0_968630);
    PyList_SET_ITEM(__pyx_t_2, 48, __pyx_float_0_968630);
    __Pyx_INCREF(__pyx_float_0_939280);
    __Pyx_GIVEREF(__pyx_float_0_939280);
    PyList_SET_ITEM(__pyx_t_2, 49, __pyx_float_0_939280);
    __Pyx_INCREF(__pyx_float_0_911660);
    __Pyx_GIVEREF(__pyx_float_0_911660);
    PyList_SET_ITEM(__pyx_t_2, 50, __pyx_float_0_911660);
    __Pyx_INCREF(__pyx_float_0_885610);
    __Pyx_GIVEREF(__pyx_float_0_885610);
    PyList_SET_ITEM(__pyx_t_2, 51, __pyx_float_0_885610);
    __Pyx_INCREF(__pyx_float_0_837740);
    __Pyx_GIVEREF(__pyx_float_0_837740);
    PyList_SET_ITEM(__pyx_t_2, 52, __pyx_float_0_837740);
    __Pyx_INCREF(__pyx_float_0_815690);
    __Pyx_GIVEREF(__pyx_float_0_815690);
    PyList_SET_ITEM(__pyx_t_2, 53, __pyx_float_0_815690);
    __Pyx_INCREF(__pyx_float_0_794780);
    __Pyx_GIVEREF(__pyx_float_0_794780);
    PyList_SET_ITEM(__pyx_t_2, 54, __pyx_float_0_794780);
    __Pyx_INCREF(__pyx_float_0_774910);
    __Pyx_GIVEREF(__pyx_float_0_774910);
    PyList_SET_ITEM(__pyx_t_2, 55, __pyx_float_0_774910);
    __Pyx_INCREF(__pyx_float_0_729320);
    __Pyx_GIVEREF(__pyx_float_0_729320);
    PyList_SET_ITEM(__pyx_t_2, 56, __pyx_float_0_729320);
    __Pyx_INCREF(__pyx_float_0_688810);
    __Pyx_GIVEREF(__pyx_float_0_688810);
    PyList_SET_ITEM(__pyx_t_2, 57, __pyx_float_0_688810);
    __Pyx_INCREF(__pyx_float_0_652250);
    __Pyx_GIVEREF(__pyx_float_0_652250);
    PyList_SET_ITEM(__pyx_t_2, 58, __pyx_float_0_652250);
    __Pyx_INCREF(__pyx_float_0_619930);
    __Pyx_GIVEREF(__pyx_float_0_619930);
    PyList_SET_ITEM(__pyx_t_2, 59, __pyx_float_0_619930);
    __Pyx_INCREF(__pyx_float_0_563570);
    __Pyx_GIVEREF(__pyx_float_0_563570);
    PyList_SET_ITEM(__pyx_t_2, 60, __pyx_float_0_563570);
    __Pyx_INCREF(__pyx_float_0_516600);
    __Pyx_GIVEREF(__pyx_float_0_516600);
    PyList_SET_ITEM(__pyx_t_2, 61, __pyx_float_0_516600);
    __Pyx_INCREF(__pyx_float_0_476870);
    __Pyx_GIVEREF(__pyx_float_0_476870);
    PyList_SET_ITEM(__pyx_t_2, 62, __pyx_float_0_476870);
    __Pyx_INCREF(__pyx_float_0_442800);
    __Pyx_GIVEREF(__pyx_float_0_442800);
    PyList_SET_ITEM(__pyx_t_2, 63, __pyx_float_0_442800);
    __Pyx_INCREF(__pyx_float_0_413280);
    __Pyx_GIVEREF(__pyx_float_0_413280);
    PyList_SET_ITEM(__pyx_t_2, 64, __pyx_float_0_413280);
    __Pyx_INCREF(__pyx_float_0_364660);
    __Pyx_GIVEREF(__pyx_float_0_364660);
    PyList_SET_ITEM(__pyx_t_2, 65, __pyx_float_0_364660);
    __Pyx_INCREF(__pyx_float_0_326280);
    __Pyx_GIVEREF(__pyx_float_0_326280);
    PyList_SET_ITEM(__pyx_t_2, 66, __pyx_float_0_326280);
    __Pyx_INCREF(__pyx_float_0_309960);
    __Pyx_GIVEREF(__pyx_float_0_309960);
    PyList_SET_ITEM(__pyx_t_2, 67, __pyx_float_0_309960);
    __Pyx_INCREF(__pyx_float_0_247970);
    __Pyx_GIVEREF(__pyx_float_0_247970);
    PyList_SET_ITEM(__pyx_t_2, 68, __pyx_float_0_247970);
    __Pyx_INCREF(__pyx_float_0_206640);
    __Pyx_GIVEREF(__pyx_float_0_206640);
    PyList_SET_ITEM(__pyx_t_2, 69, __pyx_float_0_206640);
    __Pyx_INCREF(__pyx_float_0_177120);
    __Pyx_GIVEREF(__pyx_float_0_177120);
    PyList_SET_ITEM(__pyx_t_2, 70, __pyx_float_0_177120);
    __Pyx_INCREF(__pyx_float_0_154980);
    __Pyx_GIVEREF(__pyx_float_0_154980);
    PyList_SET_ITEM(__pyx_t_2, 71, __pyx_float_0_154980);
    __Pyx_INCREF(__pyx_float_0_137760);
    __Pyx_GIVEREF(__pyx_float_0_137760);
    PyList_SET_ITEM(__pyx_t_2, 72, __pyx_float_0_137760);
    __Pyx_INCREF(__pyx_float_0_123990);
    __Pyx_GIVEREF(__pyx_float_0_123990);
    PyList_SET_ITEM(__pyx_t_2, 73, __pyx_float_0_123990);
    __Pyx_INCREF(__pyx_float_0_112710);
    __Pyx_GIVEREF(__pyx_float_0_112710);
    PyList_SET_ITEM(__pyx_t_2, 74, __pyx_float_0_112710);
    __Pyx_INCREF(__pyx_float_0_103320);
    __Pyx_GIVEREF(__pyx_float_0_103320);
    PyList_SET_ITEM(__pyx_t_2, 75, __pyx_float_0_103320);
    __Pyx_INCREF(__pyx_float_0_095373);
    __Pyx_GIVEREF(__pyx_float_0_095373);
    PyList_SET_ITEM(__pyx_t_2, 76, __pyx_float_0_095373);
    __Pyx_INCREF(__pyx_float_0_088561);
    __Pyx_GIVEREF(__pyx_float_0_088561);
    PyList_SET_ITEM(__pyx_t_2, 77, __pyx_float_0_088561);
    __Pyx_INCREF(__pyx_float_0_086101);
    __Pyx_GIVEREF(__pyx_float_0_086101);
    PyList_SET_ITEM(__pyx_t_2, 78, __pyx_float_0_086101);
    __Pyx_INCREF(__pyx_float_0_084921);
    __Pyx_GIVEREF(__pyx_float_0_084921);
    PyList_SET_ITEM(__pyx_t_2, 79, __pyx_float_0_084921);
    __Pyx_INCREF(__pyx_float_0_083774);
    __Pyx_GIVEREF(__pyx_float_0_083774);
    PyList_SET_ITEM(__pyx_t_2, 80, __pyx_float_0_083774);
    __Pyx_INCREF(__pyx_float_0_082657);
    __Pyx_GIVEREF(__pyx_float_0_082657);
    PyList_SET_ITEM(__pyx_t_2, 81, __pyx_float_0_082657);
    __Pyx_INCREF(__pyx_float_0_082109);
    __Pyx_GIVEREF(__pyx_float_0_082109);
    PyList_SET_ITEM(__pyx_t_2, 82, __pyx_float_0_082109);
    __Pyx_INCREF(__pyx_float_0_081569);
    __Pyx_GIVEREF(__pyx_float_0_081569);
    PyList_SET_ITEM(__pyx_t_2, 83, __pyx_float_0_081569);
    __Pyx_INCREF(__pyx_float_0_081036);
    __Pyx_GIVEREF(__pyx_float_0_081036);
    PyList_SET_ITEM(__pyx_t_2, 84, __pyx_float_0_081036);
    __Pyx_INCREF(__pyx_float_0_080510);
    __Pyx_GIVEREF(__pyx_float_0_080510);
    PyList_SET_ITEM(__pyx_t_2, 85, __pyx_float_0_080510);
    __Pyx_INCREF(__pyx_float_0_079990);
    __Pyx_GIVEREF(__pyx_float_0_079990);
    PyList_SET_ITEM(__pyx_t_2, 86, __pyx_float_0_079990);
    __Pyx_INCREF(__pyx_float_0_079478);
    __Pyx_GIVEREF(__pyx_float_0_079478);
    PyList_SET_ITEM(__pyx_t_2, 87, __pyx_float_0_079478);
    __Pyx_INCREF(__pyx_float_0_078472);
    __Pyx_GIVEREF(__pyx_float_0_078472);
    PyList_SET_ITEM(__pyx_t_2, 88, __pyx_float_0_078472);
    __Pyx_INCREF(__pyx_float_0_077491);
    __Pyx_GIVEREF(__pyx_float_0_077491);
    PyList_SET_ITEM(__pyx_t_2, 89, __pyx_float_0_077491);
    __Pyx_INCREF(__pyx_float_0_072932);
    __Pyx_GIVEREF(__pyx_float_0_072932);
    PyList_SET_ITEM(__pyx_t_2, 90, __pyx_float_0_072932);
    __Pyx_INCREF(__pyx_float_0_068881);
    __Pyx_GIVEREF(__pyx_float_0_068881);
    PyList_SET_ITEM(__pyx_t_2, 91, __pyx_float_0_068881);
    __Pyx_INCREF(__pyx_float_0_065255);
    __Pyx_GIVEREF(__pyx_float_0_065255);
    PyList_SET_ITEM(__pyx_t_2, 92, __pyx_float_0_065255);
    __Pyx_INCREF(__pyx_float_0_061993);
    __Pyx_GIVEREF(__pyx_float_0_061993);
    PyList_SET_ITEM(__pyx_t_2, 93, __pyx_float_0_061993);
    __Pyx_INCREF(__pyx_float_0_049594);
    __Pyx_GIVEREF(__pyx_float_0_049594);
    PyList_SET_ITEM(__pyx_t_2, 94, __pyx_float_0_049594);
    __Pyx_INCREF(__pyx_float_0_041328);
    __Pyx_GIVEREF(__pyx_float_0_041328);
    PyList_SET_ITEM(__pyx_t_2, 95, __pyx_float_0_041328);
    __Pyx_INCREF(__pyx_float_0_035424);
    __Pyx_GIVEREF(__pyx_float_0_035424);
    PyList_SET_ITEM(__pyx_t_2, 96, __pyx_float_0_035424);
    __Pyx_INCREF(__pyx_float_0_030996);
    __Pyx_GIVEREF(__pyx_float_0_030996);
    PyList_SET_ITEM(__pyx_t_2, 97, __pyx_float_0_030996);
    __Pyx_INCREF(__pyx_float_0_027552);
    __Pyx_GIVEREF(__pyx_float_0_027552);
    PyList_SET_ITEM(__pyx_t_2, 98, __pyx_float_0_027552);
    __Pyx_INCREF(__pyx_float_0_024797);
    __Pyx_GIVEREF(__pyx_float_0_024797);
    PyList_SET_ITEM(__pyx_t_2, 99, __pyx_float_0_024797);
    __Pyx_INCREF(__pyx_float_0_022543);
    __Pyx_GIVEREF(__pyx_float_0_022543);
    PyList_SET_ITEM(__pyx_t_2, 100, __pyx_float_0_022543);
    __Pyx_INCREF(__pyx_float_0_020664);
    __Pyx_GIVEREF(__pyx_float_0_020664);
    PyList_SET_ITEM(__pyx_t_2, 101, __pyx_float_0_020664);
    __Pyx_INCREF(__pyx_float_0_019998);
    __Pyx_GIVEREF(__pyx_float_0_019998);
    PyList_SET_ITEM(__pyx_t_2, 102, __pyx_float_0_019998);
    __Pyx_INCREF(__pyx_float_0_019373);
    __Pyx_GIVEREF(__pyx_float_0_019373);
    PyList_SET_ITEM(__pyx_t_2, 103, __pyx_float_0_019373);
    __Pyx_INCREF(__pyx_float_0_018786);
    __Pyx_GIVEREF(__pyx_float_0_018786);
    PyList_SET_ITEM(__pyx_t_2, 104, __pyx_float_0_018786);
    __Pyx_INCREF(__pyx_float_0_018233);
    __Pyx_GIVEREF(__pyx_float_0_018233);
    PyList_SET_ITEM(__pyx_t_2, 105, __pyx_float_0_018233);
    __Pyx_INCREF(__pyx_float_0_017712);
    __Pyx_GIVEREF(__pyx_float_0_017712);
    PyList_SET_ITEM(__pyx_t_2, 106, __pyx_float_0_017712);
    __Pyx_INCREF(__pyx_float_0_017463);
    __Pyx_GIVEREF(__pyx_float_0_017463);
    PyList_SET_ITEM(__pyx_t_2, 107, __pyx_float_0_017463);
    __Pyx_INCREF(__pyx_float_0_017220);
    __Pyx_GIVEREF(__pyx_float_0_017220);
    PyList_SET_ITEM(__pyx_t_2, 108, __pyx_float_0_017220);
    __Pyx_INCREF(__pyx_float_0_017208);
    __Pyx_GIVEREF(__pyx_float_0_017208);
    PyList_SET_ITEM(__pyx_t_2, 109, __pyx_float_0_017208);
    __Pyx_INCREF(__pyx_float_0_017196);
    __Pyx_GIVEREF(__pyx_float_0_017196);
    PyList_SET_ITEM(__pyx_t_2, 110, __pyx_float_0_017196);
    __Pyx_INCREF(__pyx_float_0_017172);
    __Pyx_GIVEREF(__pyx_float_0_017172);
    PyList_SET_ITEM(__pyx_t_2, 111, __pyx_float_0_017172);
    __Pyx_INCREF(__pyx_float_0_017149);
    __Pyx_GIVEREF(__pyx_float_0_017149);
    PyList_SET_ITEM(__pyx_t_2, 112, __pyx_float_0_017149);
    __Pyx_INCREF(__pyx_float_0_017125);
    __Pyx_GIVEREF(__pyx_float_0_017125);
    PyList_SET_ITEM(__pyx_t_2, 113, __pyx_float_0_017125);
    __Pyx_INCREF(__pyx_float_0_017101);
    __Pyx_GIVEREF(__pyx_float_0_017101);
    PyList_SET_ITEM(__pyx_t_2, 114, __pyx_float_0_017101);
    __Pyx_INCREF(__pyx_float_0_017078);
    __Pyx_GIVEREF(__pyx_float_0_017078);
    PyList_SET_ITEM(__pyx_t_2, 115, __pyx_float_0_017078);
    __Pyx_INCREF(__pyx_float_0_017054);
    __Pyx_GIVEREF(__pyx_float_0_017054);
    PyList_SET_ITEM(__pyx_t_2, 116, __pyx_float_0_017054);
    __Pyx_INCREF(__pyx_float_0_017031);
    __Pyx_GIVEREF(__pyx_float_0_017031);
    PyList_SET_ITEM(__pyx_t_2, 117, __pyx_float_0_017031);
    __Pyx_INCREF(__pyx_float_0_017008);
    __Pyx_GIVEREF(__pyx_float_0_017008);
    PyList_SET_ITEM(__pyx_t_2, 118, __pyx_float_0_017008);
    __Pyx_INCREF(__pyx_float_0_016984);
    __Pyx_GIVEREF(__pyx_float_0_016984);
    PyList_SET_ITEM(__pyx_t_2, 119, __pyx_float_0_016984);
    __Pyx_INCREF(__pyx_float_0_016961);
    __Pyx_GIVEREF(__pyx_float_0_016961);
    PyList_SET_ITEM(__pyx_t_2, 120, __pyx_float_0_016961);
    __Pyx_INCREF(__pyx_float_0_016938);
    __Pyx_GIVEREF(__pyx_float_0_016938);
    PyList_SET_ITEM(__pyx_t_2, 121, __pyx_float_0_016938);
    __Pyx_INCREF(__pyx_float_0_016915);
    __Pyx_GIVEREF(__pyx_float_0_016915);
    PyList_SET_ITEM(__pyx_t_2, 122, __pyx_float_0_016915);
    __Pyx_INCREF(__pyx_float_0_016892);
    __Pyx_GIVEREF(__pyx_float_0_016892);
    PyList_SET_ITEM(__pyx_t_2, 123, __pyx_float_0_016892);
    __Pyx_INCREF(__pyx_float_0_016869);
    __Pyx_GIVEREF(__pyx_float_0_016869);
    PyList_SET_ITEM(__pyx_t_2, 124, __pyx_float_0_016869);
    __Pyx_INCREF(__pyx_float_0_016846);
    __Pyx_GIVEREF(__pyx_float_0_016846);
    PyList_SET_ITEM(__pyx_t_2, 125, __pyx_float_0_016846);
    __Pyx_INCREF(__pyx_float_0_016823);
    __Pyx_GIVEREF(__pyx_float_0_016823);
    PyList_SET_ITEM(__pyx_t_2, 126, __pyx_float_0_016823);
    __Pyx_INCREF(__pyx_float_0_016800);
    __Pyx_GIVEREF(__pyx_float_0_016800);
    PyList_SET_ITEM(__pyx_t_2, 127, __pyx_float_0_016800);
    __Pyx_INCREF(__pyx_float_0_016777);
    __Pyx_GIVEREF(__pyx_float_0_016777);
    PyList_SET_ITEM(__pyx_t_2, 128, __pyx_float_0_016777);
    __Pyx_INCREF(__pyx_float_0_016755);
    __Pyx_GIVEREF(__pyx_float_0_016755);
    PyList_SET_ITEM(__pyx_t_2, 129, __pyx_float_0_016755);
    __Pyx_INCREF(__pyx_float_0_016642);
    __Pyx_GIVEREF(__pyx_float_0_016642);
    PyList_SET_ITEM(__pyx_t_2, 130, __pyx_float_0_016642);
    __Pyx_INCREF(__pyx_float_0_016531);
    __Pyx_GIVEREF(__pyx_float_0_016531);
    PyList_SET_ITEM(__pyx_t_2, 131, __pyx_float_0_016531);
    __Pyx_INCREF(__pyx_float_0_016422);
    __Pyx_GIVEREF(__pyx_float_0_016422);
    PyList_SET_ITEM(__pyx_t_2, 132, __pyx_float_0_016422);
    __Pyx_INCREF(__pyx_float_0_016314);
    __Pyx_GIVEREF(__pyx_float_0_016314);
    PyList_SET_ITEM(__pyx_t_2, 133, __pyx_float_0_016314);
    __Pyx_INCREF(__pyx_float_0_016102);
    __Pyx_GIVEREF(__pyx_float_0_016102);
    PyList_SET_ITEM(__pyx_t_2, 134, __pyx_float_0_016102);
    __Pyx_INCREF(__pyx_float_0_015896);
    __Pyx_GIVEREF(__pyx_float_0_015896);
    PyList_SET_ITEM(__pyx_t_2, 135, __pyx_float_0_015896);
    __Pyx_INCREF(__pyx_float_0_015694);
    __Pyx_GIVEREF(__pyx_float_0_015694);
    PyList_SET_ITEM(__pyx_t_2, 136, __pyx_float_0_015694);
    __Pyx_INCREF(__pyx_float_0_015498);
    __Pyx_GIVEREF(__pyx_float_0_015498);
    PyList_SET_ITEM(__pyx_t_2, 137, __pyx_float_0_015498);
    __Pyx_INCREF(__pyx_float_0_015120);
    __Pyx_GIVEREF(__pyx_float_0_015120);
    PyList_SET_ITEM(__pyx_t_2, 138, __pyx_float_0_015120);
    __Pyx_INCREF(__pyx_float_0_014760);
    __Pyx_GIVEREF(__pyx_float_0_014760);
    PyList_SET_ITEM(__pyx_t_2, 139, __pyx_float_0_014760);
    __Pyx_INCREF(__pyx_float_0_014417);
    __Pyx_GIVEREF(__pyx_float_0_014417);
    PyList_SET_ITEM(__pyx_t_2, 140, __pyx_float_0_014417);
    __Pyx_INCREF(__pyx_float_0_014089);
    __Pyx_GIVEREF(__pyx_float_0_014089);
    PyList_SET_ITEM(__pyx_t_2, 141, __pyx_float_0_014089);
    __Pyx_INCREF(__pyx_float_0_013776);
    __Pyx_GIVEREF(__pyx_float_0_013776);
    PyList_SET_ITEM(__pyx_t_2, 142, __pyx_float_0_013776);
    __Pyx_INCREF(__pyx_float_0_013477);
    __Pyx_GIVEREF(__pyx_float_0_013477);
    PyList_SET_ITEM(__pyx_t_2, 143, __pyx_float_0_013477);
    __Pyx_INCREF(__pyx_float_0_013190);
    __Pyx_GIVEREF(__pyx_float_0_013190);
    PyList_SET_ITEM(__pyx_t_2, 144, __pyx_float_0_013190);
    __Pyx_INCREF(__pyx_float_0_012915);
    __Pyx_GIVEREF(__pyx_float_0_012915);
    PyList_SET_ITEM(__pyx_t_2, 145, __pyx_float_0_012915);
    __Pyx_INCREF(__pyx_float_0_012652);
    __Pyx_GIVEREF(__pyx_float_0_012652);
    PyList_SET_ITEM(__pyx_t_2, 146, __pyx_float_0_012652);
    __Pyx_INCREF(__pyx_float_0_012399);
    __Pyx_GIVEREF(__pyx_float_0_012399);
    PyList_SET_ITEM(__pyx_t_2, 147, __pyx_float_0_012399);
    __Pyx_INCREF(__pyx_float_0_011808);
    __Pyx_GIVEREF(__pyx_float_0_011808);
    PyList_SET_ITEM(__pyx_t_2, 148, __pyx_float_0_011808);
    __Pyx_INCREF(__pyx_float_0_011271);
    __Pyx_GIVEREF(__pyx_float_0_011271);
    PyList_SET_ITEM(__pyx_t_2, 149, __pyx_float_0_011271);
    __Pyx_INCREF(__pyx_float_0_010781);
    __Pyx_GIVEREF(__pyx_float_0_010781);
    PyList_SET_ITEM(__pyx_t_2, 150, __pyx_float_0_010781);
    __Pyx_INCREF(__pyx_float_0_010332);
    __Pyx_GIVEREF(__pyx_float_0_010332);
    PyList_SET_ITEM(__pyx_t_2, 151, __pyx_float_0_010332);
    __Pyx_INCREF(__pyx_float_0_009919);
    __Pyx_GIVEREF(__pyx_float_0_009919);
    PyList_SET_ITEM(__pyx_t_2, 152, __pyx_float_0_009919);
    __Pyx_INCREF(__pyx_float_0_009537);
    __Pyx_GIVEREF(__pyx_float_0_009537);
    PyList_SET_ITEM(__pyx_t_2, 153, __pyx_float_0_009537);
    __Pyx_INCREF(__pyx_float_0_009184);
    __Pyx_GIVEREF(__pyx_float_0_009184);
    PyList_SET_ITEM(__pyx_t_2, 154, __pyx_float_0_009184);
    __Pyx_INCREF(__pyx_float_0_008856);
    __Pyx_GIVEREF(__pyx_float_0_008856);
    PyList_SET_ITEM(__pyx_t_2, 155, __pyx_float_0_008856);
    __Pyx_INCREF(__pyx_float_0_008551);
    __Pyx_GIVEREF(__pyx_float_0_008551);
    PyList_SET_ITEM(__pyx_t_2, 156, __pyx_float_0_008551);
    __Pyx_INCREF(__pyx_float_0_008266);
    __Pyx_GIVEREF(__pyx_float_0_008266);
    PyList_SET_ITEM(__pyx_t_2, 157, __pyx_float_0_008266);
    __Pyx_INCREF(__pyx_float_0_007749);
    __Pyx_GIVEREF(__pyx_float_0_007749);
    PyList_SET_ITEM(__pyx_t_2, 158, __pyx_float_0_007749);
    __Pyx_INCREF(__pyx_float_0_007293);
    __Pyx_GIVEREF(__pyx_float_0_007293);
    PyList_SET_ITEM(__pyx_t_2, 159, __pyx_float_0_007293);
    __Pyx_INCREF(__pyx_float_0_006888);
    __Pyx_GIVEREF(__pyx_float_0_006888);
    PyList_SET_ITEM(__pyx_t_2, 160, __pyx_float_0_006888);
    __Pyx_INCREF(__pyx_float_0_006526);
    __Pyx_GIVEREF(__pyx_float_0_006526);
    PyList_SET_ITEM(__pyx_t_2, 161, __pyx_float_0_006526);
    __Pyx_INCREF(__pyx_float_0_006199);
    __Pyx_GIVEREF(__pyx_float_0_006199);
    PyList_SET_ITEM(__pyx_t_2, 162, __pyx_float_0_006199);
    __Pyx_INCREF(__pyx_float_0_004959);
    __Pyx_GIVEREF(__pyx_float_0_004959);
    PyList_SET_ITEM(__pyx_t_2, 163, __pyx_float_0_004959);
    __Pyx_INCREF(__pyx_float_0_004133);
    __Pyx_GIVEREF(__pyx_float_0_004133);
    PyList_SET_ITEM(__pyx_t_2, 164, __pyx_float_0_004133);
    __Pyx_INCREF(__pyx_float_0_003100);
    __Pyx_GIVEREF(__pyx_float_0_003100);
    PyList_SET_ITEM(__pyx_t_2, 165, __pyx_float_0_003100);
    __Pyx_INCREF(__pyx_float_0_002480);
    __Pyx_GIVEREF(__pyx_float_0_002480);
    PyList_SET_ITEM(__pyx_t_2, 166, __pyx_float_0_002480);
    __Pyx_INCREF(__pyx_float_0_002066);
    __Pyx_GIVEREF(__pyx_float_0_002066);
    PyList_SET_ITEM(__pyx_t_2, 167, __pyx_float_0_002066);
    __Pyx_INCREF(__pyx_float_0_001771);
    __Pyx_GIVEREF(__pyx_float_0_001771);
    PyList_SET_ITEM(__pyx_t_2, 168, __pyx_float_0_001771);
    __Pyx_INCREF(__pyx_float_0_001550);
    __Pyx_GIVEREF(__pyx_float_0_001550);
    PyList_SET_ITEM(__pyx_t_2, 169, __pyx_float_0_001550);
    __Pyx_INCREF(__pyx_float_0_001378);
    __Pyx_GIVEREF(__pyx_float_0_001378);
    PyList_SET_ITEM(__pyx_t_2, 170, __pyx_float_0_001378);
    __Pyx_INCREF(__pyx_float_0_001240);
    __Pyx_GIVEREF(__pyx_float_0_001240);
    PyList_SET_ITEM(__pyx_t_2, 171, __pyx_float_0_001240);
    __Pyx_INCREF(__pyx_float_0_001127);
    __Pyx_GIVEREF(__pyx_float_0_001127);
    PyList_SET_ITEM(__pyx_t_2, 172, __pyx_float_0_001127);
    __Pyx_INCREF(__pyx_float_0_001033);
    __Pyx_GIVEREF(__pyx_float_0_001033);
    PyList_SET_ITEM(__pyx_t_2, 173, __pyx_float_0_001033);
    __Pyx_INCREF(__pyx_float_0_000954);
    __Pyx_GIVEREF(__pyx_float_0_000954);
    PyList_SET_ITEM(__pyx_t_2, 174, __pyx_float_0_000954);
    __Pyx_INCREF(__pyx_float_0_000886);
    __Pyx_GIVEREF(__pyx_float_0_000886);
    PyList_SET_ITEM(__pyx_t_2, 175, __pyx_float_0_000886);
    __Pyx_INCREF(__pyx_float_0_000855);
    __Pyx_GIVEREF(__pyx_float_0_000855);
    PyList_SET_ITEM(__pyx_t_2, 176, __pyx_float_0_000855);
    __Pyx_INCREF(__pyx_float_0_000827);
    __Pyx_GIVEREF(__pyx_float_0_000827);
    PyList_SET_ITEM(__pyx_t_2, 177, __pyx_float_0_000827);
    __Pyx_INCREF(__pyx_float_0_000816);
    __Pyx_GIVEREF(__pyx_float_0_000816);
    PyList_SET_ITEM(__pyx_t_2, 178, __pyx_float_0_000816);
    __Pyx_INCREF(__pyx_float_0_000805);
    __Pyx_GIVEREF(__pyx_float_0_000805);
    PyList_SET_ITEM(__pyx_t_2, 179, __pyx_float_0_000805);
    __Pyx_INCREF(__pyx_float_0_000800);
    __Pyx_GIVEREF(__pyx_float_0_000800);
    PyList_SET_ITEM(__pyx_t_2, 180, __pyx_float_0_000800);
    __Pyx_INCREF(__pyx_float_0_000799);
    __Pyx_GIVEREF(__pyx_float_0_000799);
    PyList_SET_ITEM(__pyx_t_2, 181, __pyx_float_0_000799);
    __Pyx_INCREF(__pyx_float_0_000798);
    __Pyx_GIVEREF(__pyx_float_0_000798);
    PyList_SET_ITEM(__pyx_t_2, 182, __pyx_float_0_000798);
    __Pyx_INCREF(__pyx_float_0_000796);
    __Pyx_GIVEREF(__pyx_float_0_000796);
    PyList_SET_ITEM(__pyx_t_2, 183, __pyx_float_0_000796);
    __Pyx_INCREF(__pyx_float_0_000795);
    __Pyx_GIVEREF(__pyx_float_0_000795);
    PyList_SET_ITEM(__pyx_t_2, 184, __pyx_float_0_000795);
    __Pyx_INCREF(__pyx_float_0_000795);
    __Pyx_GIVEREF(__pyx_float_0_000795);
    PyList_SET_ITEM(__pyx_t_2, 185, __pyx_float_0_000795);
    __Pyx_INCREF(__pyx_float_0_000794);
    __Pyx_GIVEREF(__pyx_float_0_000794);
    PyList_SET_ITEM(__pyx_t_2, 186, __pyx_float_0_000794);
    __Pyx_INCREF(__pyx_float_0_000793);
    __Pyx_GIVEREF(__pyx_float_0_000793);
    PyList_SET_ITEM(__pyx_t_2, 187, __pyx_float_0_000793);
    __Pyx_INCREF(__pyx_float_0_000785);
    __Pyx_GIVEREF(__pyx_float_0_000785);
    PyList_SET_ITEM(__pyx_t_2, 188, __pyx_float_0_000785);
    __Pyx_INCREF(__pyx_float_0_000777);
    __Pyx_GIVEREF(__pyx_float_0_000777);
    PyList_SET_ITEM(__pyx_t_2, 189, __pyx_float_0_000777);
    __Pyx_INCREF(__pyx_float_0_000740);
    __Pyx_GIVEREF(__pyx_float_0_000740);
    PyList_SET_ITEM(__pyx_t_2, 190, __pyx_float_0_000740);
    __Pyx_INCREF(__pyx_float_0_000729);
    __Pyx_GIVEREF(__pyx_float_0_000729);
    PyList_SET_ITEM(__pyx_t_2, 191, __pyx_float_0_000729);
    __Pyx_INCREF(__pyx_float_0_000689);
    __Pyx_GIVEREF(__pyx_float_0_000689);
    PyList_SET_ITEM(__pyx_t_2, 192, __pyx_float_0_000689);
    __Pyx_INCREF(__pyx_float_0_000653);
    __Pyx_GIVEREF(__pyx_float_0_000653);
    PyList_SET_ITEM(__pyx_t_2, 193, __pyx_float_0_000653);
    __Pyx_INCREF(__pyx_float_0_000620);
    __Pyx_GIVEREF(__pyx_float_0_000620);
    PyList_SET_ITEM(__pyx_t_2, 194, __pyx_float_0_000620);
    __Pyx_INCREF(__pyx_float_0_000496);
    __Pyx_GIVEREF(__pyx_float_0_000496);
    PyList_SET_ITEM(__pyx_t_2, 195, __pyx_float_0_000496);
    __Pyx_INCREF(__pyx_float_0_000413);
    __Pyx_GIVEREF(__pyx_float_0_000413);
    PyList_SET_ITEM(__pyx_t_2, 196, __pyx_float_0_000413);
    __Pyx_INCREF(__pyx_float_0_000354);
    __Pyx_GIVEREF(__pyx_float_0_000354);
    PyList_SET_ITEM(__pyx_t_2, 197, __pyx_float_0_000354);
    __Pyx_INCREF(__pyx_float_0_000310);
    __Pyx_GIVEREF(__pyx_float_0_000310);
    PyList_SET_ITEM(__pyx_t_2, 198, __pyx_float_0_000310);
    __Pyx_INCREF(__pyx_float_0_000248);
    __Pyx_GIVEREF(__pyx_float_0_000248);
    PyList_SET_ITEM(__pyx_t_2, 199, __pyx_float_0_000248);
    __Pyx_INCREF(__pyx_float_0_000207);
    __Pyx_GIVEREF(__pyx_float_0_000207);
    PyList_SET_ITEM(__pyx_t_2, 200, __pyx_float_0_000207);
    __Pyx_INCREF(__pyx_float_0_000177);
    __Pyx_GIVEREF(__pyx_float_0_000177);
    PyList_SET_ITEM(__pyx_t_2, 201, __pyx_float_0_000177);
    __Pyx_INCREF(__pyx_float_0_000155);
    __Pyx_GIVEREF(__pyx_float_0_000155);
    PyList_SET_ITEM(__pyx_t_2, 202, __pyx_float_0_000155);
    __Pyx_INCREF(__pyx_float_0_000138);
    __Pyx_GIVEREF(__pyx_float_0_000138);
    PyList_SET_ITEM(__pyx_t_2, 203, __pyx_float_0_000138);
    __Pyx_INCREF(__pyx_float_0_000131);
    __Pyx_GIVEREF(__pyx_float_0_000131);
    PyList_SET_ITEM(__pyx_t_2, 204, __pyx_float_0_000131);
    __Pyx_INCREF(__pyx_float_0_000124);
    __Pyx_GIVEREF(__pyx_float_0_000124);
    PyList_SET_ITEM(__pyx_t_2, 205, __pyx_float_0_000124);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1386
 *           0.000740, 0.000729, 0.000689, 0.000653, 0.000620, 0.000496, \
 *           0.000413, 0.000354, 0.000310, 0.000248, 0.000207, 0.000177, \
 *           0.000155, 0.000138, 0.000131, 0.000124]) * 1.e4             # <<<<<<<<<<<<<<
 *       n=np.array([423.959991, 397.929993, 364.040009, 339.619995, \
 *           318.809998, 274.380005, 233.559998, 202.630005, 177.929993, \
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_e4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1386, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_lam = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1387
 *           0.000413, 0.000354, 0.000310, 0.000248, 0.000207, 0.000177, \
 *           0.000155, 0.000138, 0.000131, 0.000124]) * 1.e4
 *       n=np.array([423.959991, 397.929993, 364.040009, 339.619995, \             # <<<<<<<<<<<<<<
 *           318.809998, 274.380005, 233.559998, 202.630005, 177.929993, \
 *           157.300003, 140.050003, 125.139999, 102.099998, 91.955002, \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(206); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_float_423_959991);
    __Pyx_GIVEREF(__pyx_float_423_959991);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_float_423_959991);
    __Pyx_INCREF(__pyx_float_397_929993);
    __Pyx_GIVEREF(__pyx_float_397_929993);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_float_397_929993);
    __Pyx_INCREF(__pyx_float_364_040009);
    __Pyx_GIVEREF(__pyx_float_364_040009);
    PyList_SET_ITEM(__pyx_t_5, 2, __pyx_float_364_040009);
    __Pyx_INCREF(__pyx_float_339_619995);
    __Pyx_GIVEREF(__pyx_float_339_619995);
    PyList_SET_ITEM(__pyx_t_5, 3, __pyx_float_339_619995);
    __Pyx_INCREF(__pyx_float_318_809998);
    __Pyx_GIVEREF(__pyx_float_318_809998);
    PyList_SET_ITEM(__pyx_t_5, 4, __pyx_float_318_809998);
    __Pyx_INCREF(__pyx_float_274_380005);
    __Pyx_GIVEREF(__pyx_float_274_380005);
    PyList_SET_ITEM(__pyx_t_5, 5, __pyx_float_274_380005);
    __Pyx_INCREF(__pyx_float_233_559998);
    __Pyx_GIVEREF(__pyx_float_233_559998);
    PyList_SET_ITEM(__pyx_t_5, 6, __pyx_float_233_559998);
    __Pyx_INCREF(__pyx_float_202_630005);
    __Pyx_GIVEREF(__pyx_float_202_630005);
    PyList_SET_ITEM(__pyx_t_5, 7, __pyx_float_202_630005);
    __Pyx_INCREF(__pyx_float_177_929993);
    __Pyx_GIVEREF(__pyx_float_177_929993);
    PyList_SET_ITEM(__pyx_t_5, 8, __pyx_float_177_929993);
    __Pyx_INCREF(__pyx_float_157_300003);
    __Pyx_GIVEREF(__pyx_float_157_300003);
    PyList_SET_ITEM(__pyx_t_5, 9, __pyx_float_157_300003);
    __Pyx_INCREF(__pyx_float_140_050003);
    __Pyx_GIVEREF(__pyx_float_140_050003);
    PyList_SET_ITEM(__pyx_t_5, 10, __pyx_float_140_050003);
    __Pyx_INCREF(__pyx_float_125_139999);
    __Pyx_GIVEREF(__pyx_float_125_139999);
    PyList_SET_ITEM(__pyx_t_5, 11, __pyx_float_125_139999);
    __Pyx_INCREF(__pyx_float_102_099998);
    __Pyx_GIVEREF(__pyx_float_102_099998);
    PyList_SET_ITEM(__pyx_t_5, 12, __pyx_float_102_099998);
    __Pyx_INCREF(__pyx_float_91_955002);
    __Pyx_GIVEREF(__pyx_float_91_955002);
    PyList_SET_ITEM(__pyx_t_5, 13, __pyx_float_91_955002);
    __Pyx_INCREF(__pyx_float_75_748001);
    __Pyx_GIVEREF(__pyx_float_75_748001);
    PyList_SET_ITEM(__pyx_t_5, 14, __pyx_float_75_748001);
    __Pyx_INCREF(__pyx_float_68_535004);
    __Pyx_GIVEREF(__pyx_float_68_535004);
    PyList_SET_ITEM(__pyx_t_5, 15, __pyx_float_68_535004);
    __Pyx_INCREF(__pyx_float_63_554001);
    __Pyx_GIVEREF(__pyx_float_63_554001);
    PyList_SET_ITEM(__pyx_t_5, 16, __pyx_float_63_554001);
    __Pyx_INCREF(__pyx_float_58_580002);
    __Pyx_GIVEREF(__pyx_float_58_580002);
    PyList_SET_ITEM(__pyx_t_5, 17, __pyx_float_58_580002);
    __Pyx_INCREF(__pyx_float_54_412998);
    __Pyx_GIVEREF(__pyx_float_54_412998);
    PyList_SET_ITEM(__pyx_t_5, 18, __pyx_float_54_412998);
    __Pyx_INCREF(__pyx_float_50_951000);
    __Pyx_GIVEREF(__pyx_float_50_951000);
    PyList_SET_ITEM(__pyx_t_5, 19, __pyx_float_50_951000);
    __Pyx_INCREF(__pyx_float_43_775002);
    __Pyx_GIVEREF(__pyx_float_43_775002);
    PyList_SET_ITEM(__pyx_t_5, 20, __pyx_float_43_775002);
    __Pyx_INCREF(__pyx_float_38_460999);
    __Pyx_GIVEREF(__pyx_float_38_460999);
    PyList_SET_ITEM(__pyx_t_5, 21, __pyx_float_38_460999);
    __Pyx_INCREF(__pyx_float_33_519001);
    __Pyx_GIVEREF(__pyx_float_33_519001);
    PyList_SET_ITEM(__pyx_t_5, 22, __pyx_float_33_519001);
    __Pyx_INCREF(__pyx_float_26_216000);
    __Pyx_GIVEREF(__pyx_float_26_216000);
    PyList_SET_ITEM(__pyx_t_5, 23, __pyx_float_26_216000);
    __Pyx_INCREF(__pyx_float_20_837000);
    __Pyx_GIVEREF(__pyx_float_20_837000);
    PyList_SET_ITEM(__pyx_t_5, 24, __pyx_float_20_837000);
    __Pyx_INCREF(__pyx_float_16_754999);
    __Pyx_GIVEREF(__pyx_float_16_754999);
    PyList_SET_ITEM(__pyx_t_5, 25, __pyx_float_16_754999);
    __Pyx_INCREF(__pyx_float_14_088000);
    __Pyx_GIVEREF(__pyx_float_14_088000);
    PyList_SET_ITEM(__pyx_t_5, 26, __pyx_float_14_088000);
    __Pyx_INCREF(__pyx_float_12_195000);
    __Pyx_GIVEREF(__pyx_float_12_195000);
    PyList_SET_ITEM(__pyx_t_5, 27, __pyx_float_12_195000);
    __Pyx_INCREF(__pyx_float_10_742000);
    __Pyx_GIVEREF(__pyx_float_10_742000);
    PyList_SET_ITEM(__pyx_t_5, 28, __pyx_float_10_742000);
    __Pyx_INCREF(__pyx_float_9_558000);
    __Pyx_GIVEREF(__pyx_float_9_558000);
    PyList_SET_ITEM(__pyx_t_5, 29, __pyx_float_9_558000);
    __Pyx_INCREF(__pyx_float_8_588100);
    __Pyx_GIVEREF(__pyx_float_8_588100);
    PyList_SET_ITEM(__pyx_t_5, 30, __pyx_float_8_588100);
    __Pyx_INCREF(__pyx_float_7_775700);
    __Pyx_GIVEREF(__pyx_float_7_775700);
    PyList_SET_ITEM(__pyx_t_5, 31, __pyx_float_7_775700);
    __Pyx_INCREF(__pyx_float_7_079600);
    __Pyx_GIVEREF(__pyx_float_7_079600);
    PyList_SET_ITEM(__pyx_t_5, 32, __pyx_float_7_079600);
    __Pyx_INCREF(__pyx_float_6_480800);
    __Pyx_GIVEREF(__pyx_float_6_480800);
    PyList_SET_ITEM(__pyx_t_5, 33, __pyx_float_6_480800);
    __Pyx_INCREF(__pyx_float_5_956400);
    __Pyx_GIVEREF(__pyx_float_5_956400);
    PyList_SET_ITEM(__pyx_t_5, 34, __pyx_float_5_956400);
    __Pyx_INCREF(__pyx_float_5_490300);
    __Pyx_GIVEREF(__pyx_float_5_490300);
    PyList_SET_ITEM(__pyx_t_5, 35, __pyx_float_5_490300);
    __Pyx_INCREF(__pyx_float_5_073500);
    __Pyx_GIVEREF(__pyx_float_5_073500);
    PyList_SET_ITEM(__pyx_t_5, 36, __pyx_float_5_073500);
    __Pyx_INCREF(__pyx_float_4_709700);
    __Pyx_GIVEREF(__pyx_float_4_709700);
    PyList_SET_ITEM(__pyx_t_5, 37, __pyx_float_4_709700);
    __Pyx_INCREF(__pyx_float_3_938000);
    __Pyx_GIVEREF(__pyx_float_3_938000);
    PyList_SET_ITEM(__pyx_t_5, 38, __pyx_float_3_938000);
    __Pyx_INCREF(__pyx_float_3_337200);
    __Pyx_GIVEREF(__pyx_float_3_337200);
    PyList_SET_ITEM(__pyx_t_5, 39, __pyx_float_3_337200);
    __Pyx_INCREF(__pyx_float_2_473800);
    __Pyx_GIVEREF(__pyx_float_2_473800);
    PyList_SET_ITEM(__pyx_t_5, 40, __pyx_float_2_473800);
    __Pyx_INCREF(__pyx_float_1_920500);
    __Pyx_GIVEREF(__pyx_float_1_920500);
    PyList_SET_ITEM(__pyx_t_5, 41, __pyx_float_1_920500);
    __Pyx_INCREF(__pyx_float_1_578200);
    __Pyx_GIVEREF(__pyx_float_1_578200);
    PyList_SET_ITEM(__pyx_t_5, 42, __pyx_float_1_578200);
    __Pyx_INCREF(__pyx_float_1_389900);
    __Pyx_GIVEREF(__pyx_float_1_389900);
    PyList_SET_ITEM(__pyx_t_5, 43, __pyx_float_1_389900);
    __Pyx_INCREF(__pyx_float_1_315700);
    __Pyx_GIVEREF(__pyx_float_1_315700);
    PyList_SET_ITEM(__pyx_t_5, 44, __pyx_float_1_315700);
    __Pyx_INCREF(__pyx_float_1_328100);
    __Pyx_GIVEREF(__pyx_float_1_328100);
    PyList_SET_ITEM(__pyx_t_5, 45, __pyx_float_1_328100);
    __Pyx_INCREF(__pyx_float_1_399800);
    __Pyx_GIVEREF(__pyx_float_1_399800);
    PyList_SET_ITEM(__pyx_t_5, 46, __pyx_float_1_399800);
    __Pyx_INCREF(__pyx_float_1_435900);
    __Pyx_GIVEREF(__pyx_float_1_435900);
    PyList_SET_ITEM(__pyx_t_5, 47, __pyx_float_1_435900);
    __Pyx_INCREF(__pyx_float_1_486700);
    __Pyx_GIVEREF(__pyx_float_1_486700);
    PyList_SET_ITEM(__pyx_t_5, 48, __pyx_float_1_486700);
    __Pyx_INCREF(__pyx_float_1_678400);
    __Pyx_GIVEREF(__pyx_float_1_678400);
    PyList_SET_ITEM(__pyx_t_5, 49, __pyx_float_1_678400);
    __Pyx_INCREF(__pyx_float_1_973900);
    __Pyx_GIVEREF(__pyx_float_1_973900);
    PyList_SET_ITEM(__pyx_t_5, 50, __pyx_float_1_973900);
    __Pyx_INCREF(__pyx_float_2_280200);
    __Pyx_GIVEREF(__pyx_float_2_280200);
    PyList_SET_ITEM(__pyx_t_5, 51, __pyx_float_2_280200);
    __Pyx_INCREF(__pyx_float_2_694500);
    __Pyx_GIVEREF(__pyx_float_2_694500);
    PyList_SET_ITEM(__pyx_t_5, 52, __pyx_float_2_694500);
    __Pyx_INCREF(__pyx_float_2_766800);
    __Pyx_GIVEREF(__pyx_float_2_766800);
    PyList_SET_ITEM(__pyx_t_5, 53, __pyx_float_2_766800);
    __Pyx_INCREF(__pyx_float_2_767500);
    __Pyx_GIVEREF(__pyx_float_2_767500);
    PyList_SET_ITEM(__pyx_t_5, 54, __pyx_float_2_767500);
    __Pyx_INCREF(__pyx_float_2_615400);
    __Pyx_GIVEREF(__pyx_float_2_615400);
    PyList_SET_ITEM(__pyx_t_5, 55, __pyx_float_2_615400);
    __Pyx_INCREF(__pyx_float_2_160600);
    __Pyx_GIVEREF(__pyx_float_2_160600);
    PyList_SET_ITEM(__pyx_t_5, 56, __pyx_float_2_160600);
    __Pyx_INCREF(__pyx_float_1_830100);
    __Pyx_GIVEREF(__pyx_float_1_830100);
    PyList_SET_ITEM(__pyx_t_5, 57, __pyx_float_1_830100);
    __Pyx_INCREF(__pyx_float_1_572400);
    __Pyx_GIVEREF(__pyx_float_1_572400);
    PyList_SET_ITEM(__pyx_t_5, 58, __pyx_float_1_572400);
    __Pyx_INCREF(__pyx_float_1_366000);
    __Pyx_GIVEREF(__pyx_float_1_366000);
    PyList_SET_ITEM(__pyx_t_5, 59, __pyx_float_1_366000);
    __Pyx_INCREF(__pyx_float_1_072800);
    __Pyx_GIVEREF(__pyx_float_1_072800);
    PyList_SET_ITEM(__pyx_t_5, 60, __pyx_float_1_072800);
    __Pyx_INCREF(__pyx_float_0_873400);
    __Pyx_GIVEREF(__pyx_float_0_873400);
    PyList_SET_ITEM(__pyx_t_5, 61, __pyx_float_0_873400);
    __Pyx_INCREF(__pyx_float_0_727800);
    __Pyx_GIVEREF(__pyx_float_0_727800);
    PyList_SET_ITEM(__pyx_t_5, 62, __pyx_float_0_727800);
    __Pyx_INCREF(__pyx_float_0_607900);
    __Pyx_GIVEREF(__pyx_float_0_607900);
    PyList_SET_ITEM(__pyx_t_5, 63, __pyx_float_0_607900);
    __Pyx_INCREF(__pyx_float_0_521350);
    __Pyx_GIVEREF(__pyx_float_0_521350);
    PyList_SET_ITEM(__pyx_t_5, 64, __pyx_float_0_521350);
    __Pyx_INCREF(__pyx_float_0_398770);
    __Pyx_GIVEREF(__pyx_float_0_398770);
    PyList_SET_ITEM(__pyx_t_5, 65, __pyx_float_0_398770);
    __Pyx_INCREF(__pyx_float_0_314740);
    __Pyx_GIVEREF(__pyx_float_0_314740);
    PyList_SET_ITEM(__pyx_t_5, 66, __pyx_float_0_314740);
    __Pyx_INCREF(__pyx_float_0_280030);
    __Pyx_GIVEREF(__pyx_float_0_280030);
    PyList_SET_ITEM(__pyx_t_5, 67, __pyx_float_0_280030);
    __Pyx_INCREF(__pyx_float_0_181370);
    __Pyx_GIVEREF(__pyx_float_0_181370);
    PyList_SET_ITEM(__pyx_t_5, 68, __pyx_float_0_181370);
    __Pyx_INCREF(__pyx_float_0_126770);
    __Pyx_GIVEREF(__pyx_float_0_126770);
    PyList_SET_ITEM(__pyx_t_5, 69, __pyx_float_0_126770);
    __Pyx_INCREF(__pyx_float_0_094236);
    __Pyx_GIVEREF(__pyx_float_0_094236);
    PyList_SET_ITEM(__pyx_t_5, 70, __pyx_float_0_094236);
    __Pyx_INCREF(__pyx_float_0_072505);
    __Pyx_GIVEREF(__pyx_float_0_072505);
    PyList_SET_ITEM(__pyx_t_5, 71, __pyx_float_0_072505);
    __Pyx_INCREF(__pyx_float_0_057167);
    __Pyx_GIVEREF(__pyx_float_0_057167);
    PyList_SET_ITEM(__pyx_t_5, 72, __pyx_float_0_057167);
    __Pyx_INCREF(__pyx_float_0_046304);
    __Pyx_GIVEREF(__pyx_float_0_046304);
    PyList_SET_ITEM(__pyx_t_5, 73, __pyx_float_0_046304);
    __Pyx_INCREF(__pyx_float_0_038468);
    __Pyx_GIVEREF(__pyx_float_0_038468);
    PyList_SET_ITEM(__pyx_t_5, 74, __pyx_float_0_038468);
    __Pyx_INCREF(__pyx_float_0_035753);
    __Pyx_GIVEREF(__pyx_float_0_035753);
    PyList_SET_ITEM(__pyx_t_5, 75, __pyx_float_0_035753);
    __Pyx_INCREF(__pyx_float_0_036437);
    __Pyx_GIVEREF(__pyx_float_0_036437);
    PyList_SET_ITEM(__pyx_t_5, 76, __pyx_float_0_036437);
    __Pyx_INCREF(__pyx_float_0_044168);
    __Pyx_GIVEREF(__pyx_float_0_044168);
    PyList_SET_ITEM(__pyx_t_5, 77, __pyx_float_0_044168);
    __Pyx_INCREF(__pyx_float_0_054863);
    __Pyx_GIVEREF(__pyx_float_0_054863);
    PyList_SET_ITEM(__pyx_t_5, 78, __pyx_float_0_054863);
    __Pyx_INCREF(__pyx_float_0_067041);
    __Pyx_GIVEREF(__pyx_float_0_067041);
    PyList_SET_ITEM(__pyx_t_5, 79, __pyx_float_0_067041);
    __Pyx_INCREF(__pyx_float_0_094517);
    __Pyx_GIVEREF(__pyx_float_0_094517);
    PyList_SET_ITEM(__pyx_t_5, 80, __pyx_float_0_094517);
    __Pyx_INCREF(__pyx_float_0_150650);
    __Pyx_GIVEREF(__pyx_float_0_150650);
    PyList_SET_ITEM(__pyx_t_5, 81, __pyx_float_0_150650);
    __Pyx_INCREF(__pyx_float_0_179430);
    __Pyx_GIVEREF(__pyx_float_0_179430);
    PyList_SET_ITEM(__pyx_t_5, 82, __pyx_float_0_179430);
    __Pyx_INCREF(__pyx_float_0_205690);
    __Pyx_GIVEREF(__pyx_float_0_205690);
    PyList_SET_ITEM(__pyx_t_5, 83, __pyx_float_0_205690);
    __Pyx_INCREF(__pyx_float_0_233440);
    __Pyx_GIVEREF(__pyx_float_0_233440);
    PyList_SET_ITEM(__pyx_t_5, 84, __pyx_float_0_233440);
    __Pyx_INCREF(__pyx_float_0_259360);
    __Pyx_GIVEREF(__pyx_float_0_259360);
    PyList_SET_ITEM(__pyx_t_5, 85, __pyx_float_0_259360);
    __Pyx_INCREF(__pyx_float_0_282710);
    __Pyx_GIVEREF(__pyx_float_0_282710);
    PyList_SET_ITEM(__pyx_t_5, 86, __pyx_float_0_282710);
    __Pyx_INCREF(__pyx_float_0_303730);
    __Pyx_GIVEREF(__pyx_float_0_303730);
    PyList_SET_ITEM(__pyx_t_5, 87, __pyx_float_0_303730);
    __Pyx_INCREF(__pyx_float_0_340310);
    __Pyx_GIVEREF(__pyx_float_0_340310);
    PyList_SET_ITEM(__pyx_t_5, 88, __pyx_float_0_340310);
    __Pyx_INCREF(__pyx_float_0_371970);
    __Pyx_GIVEREF(__pyx_float_0_371970);
    PyList_SET_ITEM(__pyx_t_5, 89, __pyx_float_0_371970);
    __Pyx_INCREF(__pyx_float_0_491310);
    __Pyx_GIVEREF(__pyx_float_0_491310);
    PyList_SET_ITEM(__pyx_t_5, 90, __pyx_float_0_491310);
    __Pyx_INCREF(__pyx_float_0_572510);
    __Pyx_GIVEREF(__pyx_float_0_572510);
    PyList_SET_ITEM(__pyx_t_5, 91, __pyx_float_0_572510);
    __Pyx_INCREF(__pyx_float_0_632420);
    __Pyx_GIVEREF(__pyx_float_0_632420);
    PyList_SET_ITEM(__pyx_t_5, 92, __pyx_float_0_632420);
    __Pyx_INCREF(__pyx_float_0_679120);
    __Pyx_GIVEREF(__pyx_float_0_679120);
    PyList_SET_ITEM(__pyx_t_5, 93, __pyx_float_0_679120);
    __Pyx_INCREF(__pyx_float_0_815120);
    __Pyx_GIVEREF(__pyx_float_0_815120);
    PyList_SET_ITEM(__pyx_t_5, 94, __pyx_float_0_815120);
    __Pyx_INCREF(__pyx_float_0_880130);
    __Pyx_GIVEREF(__pyx_float_0_880130);
    PyList_SET_ITEM(__pyx_t_5, 95, __pyx_float_0_880130);
    __Pyx_INCREF(__pyx_float_0_918020);
    __Pyx_GIVEREF(__pyx_float_0_918020);
    PyList_SET_ITEM(__pyx_t_5, 96, __pyx_float_0_918020);
    __Pyx_INCREF(__pyx_float_0_941890);
    __Pyx_GIVEREF(__pyx_float_0_941890);
    PyList_SET_ITEM(__pyx_t_5, 97, __pyx_float_0_941890);
    __Pyx_INCREF(__pyx_float_0_958340);
    __Pyx_GIVEREF(__pyx_float_0_958340);
    PyList_SET_ITEM(__pyx_t_5, 98, __pyx_float_0_958340);
    __Pyx_INCREF(__pyx_float_0_970480);
    __Pyx_GIVEREF(__pyx_float_0_970480);
    PyList_SET_ITEM(__pyx_t_5, 99, __pyx_float_0_970480);
    __Pyx_INCREF(__pyx_float_0_979980);
    __Pyx_GIVEREF(__pyx_float_0_979980);
    PyList_SET_ITEM(__pyx_t_5, 100, __pyx_float_0_979980);
    __Pyx_INCREF(__pyx_float_0_988270);
    __Pyx_GIVEREF(__pyx_float_0_988270);
    PyList_SET_ITEM(__pyx_t_5, 101, __pyx_float_0_988270);
    __Pyx_INCREF(__pyx_float_0_991430);
    __Pyx_GIVEREF(__pyx_float_0_991430);
    PyList_SET_ITEM(__pyx_t_5, 102, __pyx_float_0_991430);
    __Pyx_INCREF(__pyx_float_0_994570);
    __Pyx_GIVEREF(__pyx_float_0_994570);
    PyList_SET_ITEM(__pyx_t_5, 103, __pyx_float_0_994570);
    __Pyx_INCREF(__pyx_float_0_997910);
    __Pyx_GIVEREF(__pyx_float_0_997910);
    PyList_SET_ITEM(__pyx_t_5, 104, __pyx_float_0_997910);
    __Pyx_INCREF(__pyx_float_1_001900);
    __Pyx_GIVEREF(__pyx_float_1_001900);
    PyList_SET_ITEM(__pyx_t_5, 105, __pyx_float_1_001900);
    __Pyx_INCREF(__pyx_float_1_007000);
    __Pyx_GIVEREF(__pyx_float_1_007000);
    PyList_SET_ITEM(__pyx_t_5, 106, __pyx_float_1_007000);
    __Pyx_INCREF(__pyx_float_1_010800);
    __Pyx_GIVEREF(__pyx_float_1_010800);
    PyList_SET_ITEM(__pyx_t_5, 107, __pyx_float_1_010800);
    __Pyx_INCREF(__pyx_float_1_016900);
    __Pyx_GIVEREF(__pyx_float_1_016900);
    PyList_SET_ITEM(__pyx_t_5, 108, __pyx_float_1_016900);
    __Pyx_INCREF(__pyx_float_1_017400);
    __Pyx_GIVEREF(__pyx_float_1_017400);
    PyList_SET_ITEM(__pyx_t_5, 109, __pyx_float_1_017400);
    __Pyx_INCREF(__pyx_float_1_017900);
    __Pyx_GIVEREF(__pyx_float_1_017900);
    PyList_SET_ITEM(__pyx_t_5, 110, __pyx_float_1_017900);
    __Pyx_INCREF(__pyx_float_1_019200);
    __Pyx_GIVEREF(__pyx_float_1_019200);
    PyList_SET_ITEM(__pyx_t_5, 111, __pyx_float_1_019200);
    __Pyx_INCREF(__pyx_float_1_020600);
    __Pyx_GIVEREF(__pyx_float_1_020600);
    PyList_SET_ITEM(__pyx_t_5, 112, __pyx_float_1_020600);
    __Pyx_INCREF(__pyx_float_1_022600);
    __Pyx_GIVEREF(__pyx_float_1_022600);
    PyList_SET_ITEM(__pyx_t_5, 113, __pyx_float_1_022600);
    __Pyx_INCREF(__pyx_float_1_024900);
    __Pyx_GIVEREF(__pyx_float_1_024900);
    PyList_SET_ITEM(__pyx_t_5, 114, __pyx_float_1_024900);
    __Pyx_INCREF(__pyx_float_1_030500);
    __Pyx_GIVEREF(__pyx_float_1_030500);
    PyList_SET_ITEM(__pyx_t_5, 115, __pyx_float_1_030500);
    __Pyx_INCREF(__pyx_float_1_034900);
    __Pyx_GIVEREF(__pyx_float_1_034900);
    PyList_SET_ITEM(__pyx_t_5, 116, __pyx_float_1_034900);
    __Pyx_INCREF(__pyx_float_1_030500);
    __Pyx_GIVEREF(__pyx_float_1_030500);
    PyList_SET_ITEM(__pyx_t_5, 117, __pyx_float_1_030500);
    __Pyx_INCREF(__pyx_float_1_025500);
    __Pyx_GIVEREF(__pyx_float_1_025500);
    PyList_SET_ITEM(__pyx_t_5, 118, __pyx_float_1_025500);
    __Pyx_INCREF(__pyx_float_1_024600);
    __Pyx_GIVEREF(__pyx_float_1_024600);
    PyList_SET_ITEM(__pyx_t_5, 119, __pyx_float_1_024600);
    __Pyx_INCREF(__pyx_float_1_026200);
    __Pyx_GIVEREF(__pyx_float_1_026200);
    PyList_SET_ITEM(__pyx_t_5, 120, __pyx_float_1_026200);
    __Pyx_INCREF(__pyx_float_1_025900);
    __Pyx_GIVEREF(__pyx_float_1_025900);
    PyList_SET_ITEM(__pyx_t_5, 121, __pyx_float_1_025900);
    __Pyx_INCREF(__pyx_float_1_021900);
    __Pyx_GIVEREF(__pyx_float_1_021900);
    PyList_SET_ITEM(__pyx_t_5, 122, __pyx_float_1_021900);
    __Pyx_INCREF(__pyx_float_1_019400);
    __Pyx_GIVEREF(__pyx_float_1_019400);
    PyList_SET_ITEM(__pyx_t_5, 123, __pyx_float_1_019400);
    __Pyx_INCREF(__pyx_float_1_018100);
    __Pyx_GIVEREF(__pyx_float_1_018100);
    PyList_SET_ITEM(__pyx_t_5, 124, __pyx_float_1_018100);
    __Pyx_INCREF(__pyx_float_1_017300);
    __Pyx_GIVEREF(__pyx_float_1_017300);
    PyList_SET_ITEM(__pyx_t_5, 125, __pyx_float_1_017300);
    __Pyx_INCREF(__pyx_float_1_016700);
    __Pyx_GIVEREF(__pyx_float_1_016700);
    PyList_SET_ITEM(__pyx_t_5, 126, __pyx_float_1_016700);
    __Pyx_INCREF(__pyx_float_1_016100);
    __Pyx_GIVEREF(__pyx_float_1_016100);
    PyList_SET_ITEM(__pyx_t_5, 127, __pyx_float_1_016100);
    __Pyx_INCREF(__pyx_float_1_015600);
    __Pyx_GIVEREF(__pyx_float_1_015600);
    PyList_SET_ITEM(__pyx_t_5, 128, __pyx_float_1_015600);
    __Pyx_INCREF(__pyx_float_1_015100);
    __Pyx_GIVEREF(__pyx_float_1_015100);
    PyList_SET_ITEM(__pyx_t_5, 129, __pyx_float_1_015100);
    __Pyx_INCREF(__pyx_float_1_013200);
    __Pyx_GIVEREF(__pyx_float_1_013200);
    PyList_SET_ITEM(__pyx_t_5, 130, __pyx_float_1_013200);
    __Pyx_INCREF(__pyx_float_1_011800);
    __Pyx_GIVEREF(__pyx_float_1_011800);
    PyList_SET_ITEM(__pyx_t_5, 131, __pyx_float_1_011800);
    __Pyx_INCREF(__pyx_float_1_011000);
    __Pyx_GIVEREF(__pyx_float_1_011000);
    PyList_SET_ITEM(__pyx_t_5, 132, __pyx_float_1_011000);
    __Pyx_INCREF(__pyx_float_1_010600);
    __Pyx_GIVEREF(__pyx_float_1_010600);
    PyList_SET_ITEM(__pyx_t_5, 133, __pyx_float_1_010600);
    __Pyx_INCREF(__pyx_float_1_009500);
    __Pyx_GIVEREF(__pyx_float_1_009500);
    PyList_SET_ITEM(__pyx_t_5, 134, __pyx_float_1_009500);
    __Pyx_INCREF(__pyx_float_1_007800);
    __Pyx_GIVEREF(__pyx_float_1_007800);
    PyList_SET_ITEM(__pyx_t_5, 135, __pyx_float_1_007800);
    __Pyx_INCREF(__pyx_float_1_007500);
    __Pyx_GIVEREF(__pyx_float_1_007500);
    PyList_SET_ITEM(__pyx_t_5, 136, __pyx_float_1_007500);
    __Pyx_INCREF(__pyx_float_1_007500);
    __Pyx_GIVEREF(__pyx_float_1_007500);
    PyList_SET_ITEM(__pyx_t_5, 137, __pyx_float_1_007500);
    __Pyx_INCREF(__pyx_float_1_007700);
    __Pyx_GIVEREF(__pyx_float_1_007700);
    PyList_SET_ITEM(__pyx_t_5, 138, __pyx_float_1_007700);
    __Pyx_INCREF(__pyx_float_1_007400);
    __Pyx_GIVEREF(__pyx_float_1_007400);
    PyList_SET_ITEM(__pyx_t_5, 139, __pyx_float_1_007400);
    __Pyx_INCREF(__pyx_float_1_006500);
    __Pyx_GIVEREF(__pyx_float_1_006500);
    PyList_SET_ITEM(__pyx_t_5, 140, __pyx_float_1_006500);
    __Pyx_INCREF(__pyx_float_1_006000);
    __Pyx_GIVEREF(__pyx_float_1_006000);
    PyList_SET_ITEM(__pyx_t_5, 141, __pyx_float_1_006000);
    __Pyx_INCREF(__pyx_float_1_005800);
    __Pyx_GIVEREF(__pyx_float_1_005800);
    PyList_SET_ITEM(__pyx_t_5, 142, __pyx_float_1_005800);
    __Pyx_INCREF(__pyx_float_1_004100);
    __Pyx_GIVEREF(__pyx_float_1_004100);
    PyList_SET_ITEM(__pyx_t_5, 143, __pyx_float_1_004100);
    __Pyx_INCREF(__pyx_float_1_001200);
    __Pyx_GIVEREF(__pyx_float_1_001200);
    PyList_SET_ITEM(__pyx_t_5, 144, __pyx_float_1_001200);
    __Pyx_INCREF(__pyx_float_0_996520);
    __Pyx_GIVEREF(__pyx_float_0_996520);
    PyList_SET_ITEM(__pyx_t_5, 145, __pyx_float_0_996520);
    __Pyx_INCREF(__pyx_float_0_992650);
    __Pyx_GIVEREF(__pyx_float_0_992650);
    PyList_SET_ITEM(__pyx_t_5, 146, __pyx_float_0_992650);
    __Pyx_INCREF(__pyx_float_0_991230);
    __Pyx_GIVEREF(__pyx_float_0_991230);
    PyList_SET_ITEM(__pyx_t_5, 147, __pyx_float_0_991230);
    __Pyx_INCREF(__pyx_float_0_992850);
    __Pyx_GIVEREF(__pyx_float_0_992850);
    PyList_SET_ITEM(__pyx_t_5, 148, __pyx_float_0_992850);
    __Pyx_INCREF(__pyx_float_0_994150);
    __Pyx_GIVEREF(__pyx_float_0_994150);
    PyList_SET_ITEM(__pyx_t_5, 149, __pyx_float_0_994150);
    __Pyx_INCREF(__pyx_float_0_992330);
    __Pyx_GIVEREF(__pyx_float_0_992330);
    PyList_SET_ITEM(__pyx_t_5, 150, __pyx_float_0_992330);
    __Pyx_INCREF(__pyx_float_0_991390);
    __Pyx_GIVEREF(__pyx_float_0_991390);
    PyList_SET_ITEM(__pyx_t_5, 151, __pyx_float_0_991390);
    __Pyx_INCREF(__pyx_float_0_989410);
    __Pyx_GIVEREF(__pyx_float_0_989410);
    PyList_SET_ITEM(__pyx_t_5, 152, __pyx_float_0_989410);
    __Pyx_INCREF(__pyx_float_0_987610);
    __Pyx_GIVEREF(__pyx_float_0_987610);
    PyList_SET_ITEM(__pyx_t_5, 153, __pyx_float_0_987610);
    __Pyx_INCREF(__pyx_float_0_987930);
    __Pyx_GIVEREF(__pyx_float_0_987930);
    PyList_SET_ITEM(__pyx_t_5, 154, __pyx_float_0_987930);
    __Pyx_INCREF(__pyx_float_0_988830);
    __Pyx_GIVEREF(__pyx_float_0_988830);
    PyList_SET_ITEM(__pyx_t_5, 155, __pyx_float_0_988830);
    __Pyx_INCREF(__pyx_float_0_989340);
    __Pyx_GIVEREF(__pyx_float_0_989340);
    PyList_SET_ITEM(__pyx_t_5, 156, __pyx_float_0_989340);
    __Pyx_INCREF(__pyx_float_0_989660);
    __Pyx_GIVEREF(__pyx_float_0_989660);
    PyList_SET_ITEM(__pyx_t_5, 157, __pyx_float_0_989660);
    __Pyx_INCREF(__pyx_float_0_989120);
    __Pyx_GIVEREF(__pyx_float_0_989120);
    PyList_SET_ITEM(__pyx_t_5, 158, __pyx_float_0_989120);
    __Pyx_INCREF(__pyx_float_0_989090);
    __Pyx_GIVEREF(__pyx_float_0_989090);
    PyList_SET_ITEM(__pyx_t_5, 159, __pyx_float_0_989090);
    __Pyx_INCREF(__pyx_float_0_990070);
    __Pyx_GIVEREF(__pyx_float_0_990070);
    PyList_SET_ITEM(__pyx_t_5, 160, __pyx_float_0_990070);
    __Pyx_INCREF(__pyx_float_0_990540);
    __Pyx_GIVEREF(__pyx_float_0_990540);
    PyList_SET_ITEM(__pyx_t_5, 161, __pyx_float_0_990540);
    __Pyx_INCREF(__pyx_float_0_991110);
    __Pyx_GIVEREF(__pyx_float_0_991110);
    PyList_SET_ITEM(__pyx_t_5, 162, __pyx_float_0_991110);
    __Pyx_INCREF(__pyx_float_0_993130);
    __Pyx_GIVEREF(__pyx_float_0_993130);
    PyList_SET_ITEM(__pyx_t_5, 163, __pyx_float_0_993130);
    __Pyx_INCREF(__pyx_float_0_994800);
    __Pyx_GIVEREF(__pyx_float_0_994800);
    PyList_SET_ITEM(__pyx_t_5, 164, __pyx_float_0_994800);
    __Pyx_INCREF(__pyx_float_0_996940);
    __Pyx_GIVEREF(__pyx_float_0_996940);
    PyList_SET_ITEM(__pyx_t_5, 165, __pyx_float_0_996940);
    __Pyx_INCREF(__pyx_float_0_997970);
    __Pyx_GIVEREF(__pyx_float_0_997970);
    PyList_SET_ITEM(__pyx_t_5, 166, __pyx_float_0_997970);
    __Pyx_INCREF(__pyx_float_0_998600);
    __Pyx_GIVEREF(__pyx_float_0_998600);
    PyList_SET_ITEM(__pyx_t_5, 167, __pyx_float_0_998600);
    __Pyx_INCREF(__pyx_float_0_998980);
    __Pyx_GIVEREF(__pyx_float_0_998980);
    PyList_SET_ITEM(__pyx_t_5, 168, __pyx_float_0_998980);
    __Pyx_INCREF(__pyx_float_0_999240);
    __Pyx_GIVEREF(__pyx_float_0_999240);
    PyList_SET_ITEM(__pyx_t_5, 169, __pyx_float_0_999240);
    __Pyx_INCREF(__pyx_float_0_999400);
    __Pyx_GIVEREF(__pyx_float_0_999400);
    PyList_SET_ITEM(__pyx_t_5, 170, __pyx_float_0_999400);
    __Pyx_INCREF(__pyx_float_0_999530);
    __Pyx_GIVEREF(__pyx_float_0_999530);
    PyList_SET_ITEM(__pyx_t_5, 171, __pyx_float_0_999530);
    __Pyx_INCREF(__pyx_float_0_999610);
    __Pyx_GIVEREF(__pyx_float_0_999610);
    PyList_SET_ITEM(__pyx_t_5, 172, __pyx_float_0_999610);
    __Pyx_INCREF(__pyx_float_0_999680);
    __Pyx_GIVEREF(__pyx_float_0_999680);
    PyList_SET_ITEM(__pyx_t_5, 173, __pyx_float_0_999680);
    __Pyx_INCREF(__pyx_float_0_999740);
    __Pyx_GIVEREF(__pyx_float_0_999740);
    PyList_SET_ITEM(__pyx_t_5, 174, __pyx_float_0_999740);
    __Pyx_INCREF(__pyx_float_0_999790);
    __Pyx_GIVEREF(__pyx_float_0_999790);
    PyList_SET_ITEM(__pyx_t_5, 175, __pyx_float_0_999790);
    __Pyx_INCREF(__pyx_float_0_999810);
    __Pyx_GIVEREF(__pyx_float_0_999810);
    PyList_SET_ITEM(__pyx_t_5, 176, __pyx_float_0_999810);
    __Pyx_INCREF(__pyx_float_0_999830);
    __Pyx_GIVEREF(__pyx_float_0_999830);
    PyList_SET_ITEM(__pyx_t_5, 177, __pyx_float_0_999830);
    __Pyx_INCREF(__pyx_float_0_999850);
    __Pyx_GIVEREF(__pyx_float_0_999850);
    PyList_SET_ITEM(__pyx_t_5, 178, __pyx_float_0_999850);
    __Pyx_INCREF(__pyx_float_0_999870);
    __Pyx_GIVEREF(__pyx_float_0_999870);
    PyList_SET_ITEM(__pyx_t_5, 179, __pyx_float_0_999870);
    __Pyx_INCREF(__pyx_float_0_999890);
    __Pyx_GIVEREF(__pyx_float_0_999890);
    PyList_SET_ITEM(__pyx_t_5, 180, __pyx_float_0_999890);
    __Pyx_INCREF(__pyx_float_0_999910);
    __Pyx_GIVEREF(__pyx_float_0_999910);
    PyList_SET_ITEM(__pyx_t_5, 181, __pyx_float_0_999910);
    __Pyx_INCREF(__pyx_float_0_999910);
    __Pyx_GIVEREF(__pyx_float_0_999910);
    PyList_SET_ITEM(__pyx_t_5, 182, __pyx_float_0_999910);
    __Pyx_INCREF(__pyx_float_0_999920);
    __Pyx_GIVEREF(__pyx_float_0_999920);
    PyList_SET_ITEM(__pyx_t_5, 183, __pyx_float_0_999920);
    __Pyx_INCREF(__pyx_float_0_999920);
    __Pyx_GIVEREF(__pyx_float_0_999920);
    PyList_SET_ITEM(__pyx_t_5, 184, __pyx_float_0_999920);
    __Pyx_INCREF(__pyx_float_0_999930);
    __Pyx_GIVEREF(__pyx_float_0_999930);
    PyList_SET_ITEM(__pyx_t_5, 185, __pyx_float_0_999930);
    __Pyx_INCREF(__pyx_float_0_999920);
    __Pyx_GIVEREF(__pyx_float_0_999920);
    PyList_SET_ITEM(__pyx_t_5, 186, __pyx_float_0_999920);
    __Pyx_INCREF(__pyx_float_0_999900);
    __Pyx_GIVEREF(__pyx_float_0_999900);
    PyList_SET_ITEM(__pyx_t_5, 187, __pyx_float_0_999900);
    __Pyx_INCREF(__pyx_float_0_999870);
    __Pyx_GIVEREF(__pyx_float_0_999870);
    PyList_SET_ITEM(__pyx_t_5, 188, __pyx_float_0_999870);
    __Pyx_INCREF(__pyx_float_0_999860);
    __Pyx_GIVEREF(__pyx_float_0_999860);
    PyList_SET_ITEM(__pyx_t_5, 189, __pyx_float_0_999860);
    __Pyx_INCREF(__pyx_float_0_999840);
    __Pyx_GIVEREF(__pyx_float_0_999840);
    PyList_SET_ITEM(__pyx_t_5, 190, __pyx_float_0_999840);
    __Pyx_INCREF(__pyx_float_0_999840);
    __Pyx_GIVEREF(__pyx_float_0_999840);
    PyList_SET_ITEM(__pyx_t_5, 191, __pyx_float_0_999840);
    __Pyx_INCREF(__pyx_float_0_999850);
    __Pyx_GIVEREF(__pyx_float_0_999850);
    PyList_SET_ITEM(__pyx_t_5, 192, __pyx_float_0_999850);
    __Pyx_INCREF(__pyx_float_0_999860);
    __Pyx_GIVEREF(__pyx_float_0_999860);
    PyList_SET_ITEM(__pyx_t_5, 193, __pyx_float_0_999860);
    __Pyx_INCREF(__pyx_float_0_999870);
    __Pyx_GIVEREF(__pyx_float_0_999870);
    PyList_SET_ITEM(__pyx_t_5, 194, __pyx_float_0_999870);
    __Pyx_INCREF(__pyx_float_0_999910);
    __Pyx_GIVEREF(__pyx_float_0_999910);
    PyList_SET_ITEM(__pyx_t_5, 195, __pyx_float_0_999910);
    __Pyx_INCREF(__pyx_float_0_999940);
    __Pyx_GIVEREF(__pyx_float_0_999940);
    PyList_SET_ITEM(__pyx_t_5, 196, __pyx_float_0_999940);
    __Pyx_INCREF(__pyx_float_0_999950);
    __Pyx_GIVEREF(__pyx_float_0_999950);
    PyList_SET_ITEM(__pyx_t_5, 197, __pyx_float_0_999950);
    __Pyx_INCREF(__pyx_float_0_999970);
    __Pyx_GIVEREF(__pyx_float_0_999970);
    PyList_SET_ITEM(__pyx_t_5, 198, __pyx_float_0_999970);
    __Pyx_INCREF(__pyx_float_0_999980);
    __Pyx_GIVEREF(__pyx_float_0_999980);
    PyList_SET_ITEM(__pyx_t_5, 199, __pyx_float_0_999980);
    __Pyx_INCREF(__pyx_float_0_999984);
    __Pyx_GIVEREF(__pyx_float_0_999984);
    PyList_SET_ITEM(__pyx_t_5, 200, __pyx_float_0_999984);
    __Pyx_INCREF(__pyx_float_0_999989);
    __Pyx_GIVEREF(__pyx_float_0_999989);
    PyList_SET_ITEM(__pyx_t_5, 201, __pyx_float_0_999989);
    __Pyx_INCREF(__pyx_float_0_999991);
    __Pyx_GIVEREF(__pyx_float_0_999991);
    PyList_SET_ITEM(__pyx_t_5, 202, __pyx_float_0_999991);
    __Pyx_INCREF(__pyx_float_0_999993);
    __Pyx_GIVEREF(__pyx_float_0_999993);
    PyList_SET_ITEM(__pyx_t_5, 203, __pyx_float_0_999993);
    __Pyx_INCREF(__pyx_float_0_999994);
    __Pyx_GIVEREF(__pyx_float_0_999994);
    PyList_SET_ITEM(__pyx_t_5, 204, __pyx_float_0_999994);
    __Pyx_INCREF(__pyx_float_0_999995);
    __Pyx_GIVEREF(__pyx_float_0_999995);
    PyList_SET_ITEM(__pyx_t_5, 205, __pyx_float_0_999995);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_n = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1423
 *           0.999984, 0.999989, 0.999991, 0.999993, 0.999994, 0.999995])#*2.#*0.
 *       #n=1.38888498e-4*lam-1.62620406e-1
 *       k = np.array([4.837000e+02 ,4.585000e+02 ,4.296200e+02 ,4.089200e+02 ,\             # <<<<<<<<<<<<<<
 *           3.917100e+02 ,3.543500e+02 ,3.210800e+02 ,2.954200e+02 ,\
 *           2.753400e+02 ,2.582600e+02 ,2.434300e+02 ,2.301900e+02 ,\
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyList_New(206); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_float_4_837000e_02);
    __Pyx_GIVEREF(__pyx_float_4_837000e_02);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_float_4_837000e_02);
    __Pyx_INCREF(__pyx_float_4_585000e_02);
    __Pyx_GIVEREF(__pyx_float_4_585000e_02);
    PyList_SET_ITEM(__pyx_t_2, 1, __pyx_float_4_585000e_02);
    __Pyx_INCREF(__pyx_float_4_296200e_02);
    __Pyx_GIVEREF(__pyx_float_4_296200e_02);
    PyList_SET_ITEM(__pyx_t_2, 2, __pyx_float_4_296200e_02);
    __Pyx_INCREF(__pyx_float_4_089200e_02);
    __Pyx_GIVEREF(__pyx_float_4_089200e_02);
    PyList_SET_ITEM(__pyx_t_2, 3, __pyx_float_4_089200e_02);
    __Pyx_INCREF(__pyx_float_3_917100e_02);
    __Pyx_GIVEREF(__pyx_float_3_917100e_02);
    PyList_SET_ITEM(__pyx_t_2, 4, __pyx_float_3_917100e_02);
    __Pyx_INCREF(__pyx_float_3_543500e_02);
    __Pyx_GIVEREF(__pyx_float_3_543500e_02);
    PyList_SET_ITEM(__pyx_t_2, 5, __pyx_float_3_543500e_02);
    __Pyx_INCREF(__pyx_float_3_210800e_02);
    __Pyx_GIVEREF(__pyx_float_3_210800e_02);
    PyList_SET_ITEM(__pyx_t_2, 6, __pyx_float_3_210800e_02);
    __Pyx_INCREF(__pyx_float_2_954200e_02);
    __Pyx_GIVEREF(__pyx_float_2_954200e_02);
    PyList_SET_ITEM(__pyx_t_2, 7, __pyx_float_2_954200e_02);
    __Pyx_INCREF(__pyx_float_2_753400e_02);
    __Pyx_GIVEREF(__pyx_float_2_753400e_02);
    PyList_SET_ITEM(__pyx_t_2, 8, __pyx_float_2_753400e_02);
    __Pyx_INCREF(__pyx_float_2_582600e_02);
    __Pyx_GIVEREF(__pyx_float_2_582600e_02);
    PyList_SET_ITEM(__pyx_t_2, 9, __pyx_float_2_582600e_02);
    __Pyx_INCREF(__pyx_float_2_434300e_02);
    __Pyx_GIVEREF(__pyx_float_2_434300e_02);
    PyList_SET_ITEM(__pyx_t_2, 10, __pyx_float_2_434300e_02);
    __Pyx_INCREF(__pyx_float_2_301900e_02);
    __Pyx_GIVEREF(__pyx_float_2_301900e_02);
    PyList_SET_ITEM(__pyx_t_2, 11, __pyx_float_2_301900e_02);
    __Pyx_INCREF(__pyx_float_2_081000e_02);
    __Pyx_GIVEREF(__pyx_float_2_081000e_02);
    PyList_SET_ITEM(__pyx_t_2, 12, __pyx_float_2_081000e_02);
    __Pyx_INCREF(__pyx_float_1_999900e_02);
    __Pyx_GIVEREF(__pyx_float_1_999900e_02);
    PyList_SET_ITEM(__pyx_t_2, 13, __pyx_float_1_999900e_02);
    __Pyx_INCREF(__pyx_float_1_817800e_02);
    __Pyx_GIVEREF(__pyx_float_1_817800e_02);
    PyList_SET_ITEM(__pyx_t_2, 14, __pyx_float_1_817800e_02);
    __Pyx_INCREF(__pyx_float_1_648100e_02);
    __Pyx_GIVEREF(__pyx_float_1_648100e_02);
    PyList_SET_ITEM(__pyx_t_2, 15, __pyx_float_1_648100e_02);
    __Pyx_INCREF(__pyx_float_1_534500e_02);
    __Pyx_GIVEREF(__pyx_float_1_534500e_02);
    PyList_SET_ITEM(__pyx_t_2, 16, __pyx_float_1_534500e_02);
    __Pyx_INCREF(__pyx_float_1_442300e_02);
    __Pyx_GIVEREF(__pyx_float_1_442300e_02);
    PyList_SET_ITEM(__pyx_t_2, 17, __pyx_float_1_442300e_02);
    __Pyx_INCREF(__pyx_float_1_360900e_02);
    __Pyx_GIVEREF(__pyx_float_1_360900e_02);
    PyList_SET_ITEM(__pyx_t_2, 18, __pyx_float_1_360900e_02);
    __Pyx_INCREF(__pyx_float_1_294900e_02);
    __Pyx_GIVEREF(__pyx_float_1_294900e_02);
    PyList_SET_ITEM(__pyx_t_2, 19, __pyx_float_1_294900e_02);
    __Pyx_INCREF(__pyx_float_1_183900e_02);
    __Pyx_GIVEREF(__pyx_float_1_183900e_02);
    PyList_SET_ITEM(__pyx_t_2, 20, __pyx_float_1_183900e_02);
    __Pyx_INCREF(__pyx_float_1_089600e_02);
    __Pyx_GIVEREF(__pyx_float_1_089600e_02);
    PyList_SET_ITEM(__pyx_t_2, 21, __pyx_float_1_089600e_02);
    __Pyx_INCREF(__pyx_float_1_012800e_02);
    __Pyx_GIVEREF(__pyx_float_1_012800e_02);
    PyList_SET_ITEM(__pyx_t_2, 22, __pyx_float_1_012800e_02);
    __Pyx_INCREF(__pyx_float_8_819700e_01);
    __Pyx_GIVEREF(__pyx_float_8_819700e_01);
    PyList_SET_ITEM(__pyx_t_2, 23, __pyx_float_8_819700e_01);
    __Pyx_INCREF(__pyx_float_7_827400e_01);
    __Pyx_GIVEREF(__pyx_float_7_827400e_01);
    PyList_SET_ITEM(__pyx_t_2, 24, __pyx_float_7_827400e_01);
    __Pyx_INCREF(__pyx_float_6_985700e_01);
    __Pyx_GIVEREF(__pyx_float_6_985700e_01);
    PyList_SET_ITEM(__pyx_t_2, 25, __pyx_float_6_985700e_01);
    __Pyx_INCREF(__pyx_float_6_284100e_01);
    __Pyx_GIVEREF(__pyx_float_6_284100e_01);
    PyList_SET_ITEM(__pyx_t_2, 26, __pyx_float_6_284100e_01);
    __Pyx_INCREF(__pyx_float_5_715600e_01);
    __Pyx_GIVEREF(__pyx_float_5_715600e_01);
    PyList_SET_ITEM(__pyx_t_2, 27, __pyx_float_5_715600e_01);
    __Pyx_INCREF(__pyx_float_5_251800e_01);
    __Pyx_GIVEREF(__pyx_float_5_251800e_01);
    PyList_SET_ITEM(__pyx_t_2, 28, __pyx_float_5_251800e_01);
    __Pyx_INCREF(__pyx_float_4_859300e_01);
    __Pyx_GIVEREF(__pyx_float_4_859300e_01);
    PyList_SET_ITEM(__pyx_t_2, 29, __pyx_float_4_859300e_01);
    __Pyx_INCREF(__pyx_float_4_525700e_01);
    __Pyx_GIVEREF(__pyx_float_4_525700e_01);
    PyList_SET_ITEM(__pyx_t_2, 30, __pyx_float_4_525700e_01);
    __Pyx_INCREF(__pyx_float_4_236700e_01);
    __Pyx_GIVEREF(__pyx_float_4_236700e_01);
    PyList_SET_ITEM(__pyx_t_2, 31, __pyx_float_4_236700e_01);
    __Pyx_INCREF(__pyx_float_3_982600e_01);
    __Pyx_GIVEREF(__pyx_float_3_982600e_01);
    PyList_SET_ITEM(__pyx_t_2, 32, __pyx_float_3_982600e_01);
    __Pyx_INCREF(__pyx_float_3_759500e_01);
    __Pyx_GIVEREF(__pyx_float_3_759500e_01);
    PyList_SET_ITEM(__pyx_t_2, 33, __pyx_float_3_759500e_01);
    __Pyx_INCREF(__pyx_float_3_560800e_01);
    __Pyx_GIVEREF(__pyx_float_3_560800e_01);
    PyList_SET_ITEM(__pyx_t_2, 34, __pyx_float_3_560800e_01);
    __Pyx_INCREF(__pyx_float_3_381400e_01);
    __Pyx_GIVEREF(__pyx_float_3_381400e_01);
    PyList_SET_ITEM(__pyx_t_2, 35, __pyx_float_3_381400e_01);
    __Pyx_INCREF(__pyx_float_3_218300e_01);
    __Pyx_GIVEREF(__pyx_float_3_218300e_01);
    PyList_SET_ITEM(__pyx_t_2, 36, __pyx_float_3_218300e_01);
    __Pyx_INCREF(__pyx_float_3_073700e_01);
    __Pyx_GIVEREF(__pyx_float_3_073700e_01);
    PyList_SET_ITEM(__pyx_t_2, 37, __pyx_float_3_073700e_01);
    __Pyx_INCREF(__pyx_float_2_758000e_01);
    __Pyx_GIVEREF(__pyx_float_2_758000e_01);
    PyList_SET_ITEM(__pyx_t_2, 38, __pyx_float_2_758000e_01);
    __Pyx_INCREF(__pyx_float_2_500400e_01);
    __Pyx_GIVEREF(__pyx_float_2_500400e_01);
    PyList_SET_ITEM(__pyx_t_2, 39, __pyx_float_2_500400e_01);
    __Pyx_INCREF(__pyx_float_2_098200e_01);
    __Pyx_GIVEREF(__pyx_float_2_098200e_01);
    PyList_SET_ITEM(__pyx_t_2, 40, __pyx_float_2_098200e_01);
    __Pyx_INCREF(__pyx_float_1_799100e_01);
    __Pyx_GIVEREF(__pyx_float_1_799100e_01);
    PyList_SET_ITEM(__pyx_t_2, 41, __pyx_float_1_799100e_01);
    __Pyx_INCREF(__pyx_float_1_565600e_01);
    __Pyx_GIVEREF(__pyx_float_1_565600e_01);
    PyList_SET_ITEM(__pyx_t_2, 42, __pyx_float_1_565600e_01);
    __Pyx_INCREF(__pyx_float_1_378400e_01);
    __Pyx_GIVEREF(__pyx_float_1_378400e_01);
    PyList_SET_ITEM(__pyx_t_2, 43, __pyx_float_1_378400e_01);
    __Pyx_INCREF(__pyx_float_1_224500e_01);
    __Pyx_GIVEREF(__pyx_float_1_224500e_01);
    PyList_SET_ITEM(__pyx_t_2, 44, __pyx_float_1_224500e_01);
    __Pyx_INCREF(__pyx_float_1_096900e_01);
    __Pyx_GIVEREF(__pyx_float_1_096900e_01);
    PyList_SET_ITEM(__pyx_t_2, 45, __pyx_float_1_096900e_01);
    __Pyx_INCREF(__pyx_float_9_891400e_00);
    __Pyx_GIVEREF(__pyx_float_9_891400e_00);
    PyList_SET_ITEM(__pyx_t_2, 46, __pyx_float_9_891400e_00);
    __Pyx_INCREF(__pyx_float_9_493900e_00);
    __Pyx_GIVEREF(__pyx_float_9_493900e_00);
    PyList_SET_ITEM(__pyx_t_2, 47, __pyx_float_9_493900e_00);
    __Pyx_INCREF(__pyx_float_9_065500e_00);
    __Pyx_GIVEREF(__pyx_float_9_065500e_00);
    PyList_SET_ITEM(__pyx_t_2, 48, __pyx_float_9_065500e_00);
    __Pyx_INCREF(__pyx_float_8_597000e_00);
    __Pyx_GIVEREF(__pyx_float_8_597000e_00);
    PyList_SET_ITEM(__pyx_t_2, 49, __pyx_float_8_597000e_00);
    __Pyx_INCREF(__pyx_float_8_305800e_00);
    __Pyx_GIVEREF(__pyx_float_8_305800e_00);
    PyList_SET_ITEM(__pyx_t_2, 50, __pyx_float_8_305800e_00);
    __Pyx_INCREF(__pyx_float_8_113400e_00);
    __Pyx_GIVEREF(__pyx_float_8_113400e_00);
    PyList_SET_ITEM(__pyx_t_2, 51, __pyx_float_8_113400e_00);
    __Pyx_INCREF(__pyx_float_8_187800e_00);
    __Pyx_GIVEREF(__pyx_float_8_187800e_00);
    PyList_SET_ITEM(__pyx_t_2, 52, __pyx_float_8_187800e_00);
    __Pyx_INCREF(__pyx_float_8_257300e_00);
    __Pyx_GIVEREF(__pyx_float_8_257300e_00);
    PyList_SET_ITEM(__pyx_t_2, 53, __pyx_float_8_257300e_00);
    __Pyx_INCREF(__pyx_float_8_386600e_00);
    __Pyx_GIVEREF(__pyx_float_8_386600e_00);
    PyList_SET_ITEM(__pyx_t_2, 54, __pyx_float_8_386600e_00);
    __Pyx_INCREF(__pyx_float_8_491400e_00);
    __Pyx_GIVEREF(__pyx_float_8_491400e_00);
    PyList_SET_ITEM(__pyx_t_2, 55, __pyx_float_8_491400e_00);
    __Pyx_INCREF(__pyx_float_8_356500e_00);
    __Pyx_GIVEREF(__pyx_float_8_356500e_00);
    PyList_SET_ITEM(__pyx_t_2, 56, __pyx_float_8_356500e_00);
    __Pyx_INCREF(__pyx_float_8_060100e_00);
    __Pyx_GIVEREF(__pyx_float_8_060100e_00);
    PyList_SET_ITEM(__pyx_t_2, 57, __pyx_float_8_060100e_00);
    __Pyx_INCREF(__pyx_float_7_735400e_00);
    __Pyx_GIVEREF(__pyx_float_7_735400e_00);
    PyList_SET_ITEM(__pyx_t_2, 58, __pyx_float_7_735400e_00);
    __Pyx_INCREF(__pyx_float_7_405200e_00);
    __Pyx_GIVEREF(__pyx_float_7_405200e_00);
    PyList_SET_ITEM(__pyx_t_2, 59, __pyx_float_7_405200e_00);
    __Pyx_INCREF(__pyx_float_6_783900e_00);
    __Pyx_GIVEREF(__pyx_float_6_783900e_00);
    PyList_SET_ITEM(__pyx_t_2, 60, __pyx_float_6_783900e_00);
    __Pyx_INCREF(__pyx_float_6_241800e_00);
    __Pyx_GIVEREF(__pyx_float_6_241800e_00);
    PyList_SET_ITEM(__pyx_t_2, 61, __pyx_float_6_241800e_00);
    __Pyx_INCREF(__pyx_float_5_778100e_00);
    __Pyx_GIVEREF(__pyx_float_5_778100e_00);
    PyList_SET_ITEM(__pyx_t_2, 62, __pyx_float_5_778100e_00);
    __Pyx_INCREF(__pyx_float_5_367600e_00);
    __Pyx_GIVEREF(__pyx_float_5_367600e_00);
    PyList_SET_ITEM(__pyx_t_2, 63, __pyx_float_5_367600e_00);
    __Pyx_INCREF(__pyx_float_5_000800e_00);
    __Pyx_GIVEREF(__pyx_float_5_000800e_00);
    PyList_SET_ITEM(__pyx_t_2, 64, __pyx_float_5_000800e_00);
    __Pyx_INCREF(__pyx_float_4_395700e_00);
    __Pyx_GIVEREF(__pyx_float_4_395700e_00);
    PyList_SET_ITEM(__pyx_t_2, 65, __pyx_float_4_395700e_00);
    __Pyx_INCREF(__pyx_float_3_916500e_00);
    __Pyx_GIVEREF(__pyx_float_3_916500e_00);
    PyList_SET_ITEM(__pyx_t_2, 66, __pyx_float_3_916500e_00);
    __Pyx_INCREF(__pyx_float_3_708100e_00);
    __Pyx_GIVEREF(__pyx_float_3_708100e_00);
    PyList_SET_ITEM(__pyx_t_2, 67, __pyx_float_3_708100e_00);
    __Pyx_INCREF(__pyx_float_2_902900e_00);
    __Pyx_GIVEREF(__pyx_float_2_902900e_00);
    PyList_SET_ITEM(__pyx_t_2, 68, __pyx_float_2_902900e_00);
    __Pyx_INCREF(__pyx_float_2_356300e_00);
    __Pyx_GIVEREF(__pyx_float_2_356300e_00);
    PyList_SET_ITEM(__pyx_t_2, 69, __pyx_float_2_356300e_00);
    __Pyx_INCREF(__pyx_float_1_951900e_00);
    __Pyx_GIVEREF(__pyx_float_1_951900e_00);
    PyList_SET_ITEM(__pyx_t_2, 70, __pyx_float_1_951900e_00);
    __Pyx_INCREF(__pyx_float_1_636600e_00);
    __Pyx_GIVEREF(__pyx_float_1_636600e_00);
    PyList_SET_ITEM(__pyx_t_2, 71, __pyx_float_1_636600e_00);
    __Pyx_INCREF(__pyx_float_1_377500e_00);
    __Pyx_GIVEREF(__pyx_float_1_377500e_00);
    PyList_SET_ITEM(__pyx_t_2, 72, __pyx_float_1_377500e_00);
    __Pyx_INCREF(__pyx_float_1_155500e_00);
    __Pyx_GIVEREF(__pyx_float_1_155500e_00);
    PyList_SET_ITEM(__pyx_t_2, 73, __pyx_float_1_155500e_00);
    __Pyx_INCREF(__pyx_float_9_567700eneg_01);
    __Pyx_GIVEREF(__pyx_float_9_567700eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 74, __pyx_float_9_567700eneg_01);
    __Pyx_INCREF(__pyx_float_7_716300eneg_01);
    __Pyx_GIVEREF(__pyx_float_7_716300eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 75, __pyx_float_7_716300eneg_01);
    __Pyx_INCREF(__pyx_float_5_908600eneg_01);
    __Pyx_GIVEREF(__pyx_float_5_908600eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 76, __pyx_float_5_908600eneg_01);
    __Pyx_INCREF(__pyx_float_3_911500eneg_01);
    __Pyx_GIVEREF(__pyx_float_3_911500eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 77, __pyx_float_3_911500eneg_01);
    __Pyx_INCREF(__pyx_float_2_929300eneg_01);
    __Pyx_GIVEREF(__pyx_float_2_929300eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 78, __pyx_float_2_929300eneg_01);
    __Pyx_INCREF(__pyx_float_2_342000eneg_01);
    __Pyx_GIVEREF(__pyx_float_2_342000eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 79, __pyx_float_2_342000eneg_01);
    __Pyx_INCREF(__pyx_float_1_658900eneg_01);
    __Pyx_GIVEREF(__pyx_float_1_658900eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 80, __pyx_float_1_658900eneg_01);
    __Pyx_INCREF(__pyx_float_1_104100eneg_01);
    __Pyx_GIVEREF(__pyx_float_1_104100eneg_01);
    PyList_SET_ITEM(__pyx_t_2, 81, __pyx_float_1_104100eneg_01);
    __Pyx_INCREF(__pyx_float_9_422300eneg_02);
    __Pyx_GIVEREF(__pyx_float_9_422300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 82, __pyx_float_9_422300eneg_02);
    __Pyx_INCREF(__pyx_float_7_995900eneg_02);
    __Pyx_GIVEREF(__pyx_float_7_995900eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 83, __pyx_float_7_995900eneg_02);
    __Pyx_INCREF(__pyx_float_6_834800eneg_02);
    __Pyx_GIVEREF(__pyx_float_6_834800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 84, __pyx_float_6_834800eneg_02);
    __Pyx_INCREF(__pyx_float_6_140700eneg_02);
    __Pyx_GIVEREF(__pyx_float_6_140700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 85, __pyx_float_6_140700eneg_02);
    __Pyx_INCREF(__pyx_float_5_669700eneg_02);
    __Pyx_GIVEREF(__pyx_float_5_669700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 86, __pyx_float_5_669700eneg_02);
    __Pyx_INCREF(__pyx_float_5_334900eneg_02);
    __Pyx_GIVEREF(__pyx_float_5_334900eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 87, __pyx_float_5_334900eneg_02);
    __Pyx_INCREF(__pyx_float_4_832000eneg_02);
    __Pyx_GIVEREF(__pyx_float_4_832000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 88, __pyx_float_4_832000eneg_02);
    __Pyx_INCREF(__pyx_float_4_420200eneg_02);
    __Pyx_GIVEREF(__pyx_float_4_420200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 89, __pyx_float_4_420200eneg_02);
    __Pyx_INCREF(__pyx_float_3_240900eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_240900eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 90, __pyx_float_3_240900eneg_02);
    __Pyx_INCREF(__pyx_float_2_768100eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_768100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 91, __pyx_float_2_768100eneg_02);
    __Pyx_INCREF(__pyx_float_2_477000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_477000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 92, __pyx_float_2_477000eneg_02);
    __Pyx_INCREF(__pyx_float_2_234000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_234000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 93, __pyx_float_2_234000eneg_02);
    __Pyx_INCREF(__pyx_float_1_589400eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_589400eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 94, __pyx_float_1_589400eneg_02);
    __Pyx_INCREF(__pyx_float_1_165100eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_165100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 95, __pyx_float_1_165100eneg_02);
    __Pyx_INCREF(__pyx_float_9_312100eneg_03);
    __Pyx_GIVEREF(__pyx_float_9_312100eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 96, __pyx_float_9_312100eneg_03);
    __Pyx_INCREF(__pyx_float_7_846600eneg_03);
    __Pyx_GIVEREF(__pyx_float_7_846600eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 97, __pyx_float_7_846600eneg_03);
    __Pyx_INCREF(__pyx_float_6_619100eneg_03);
    __Pyx_GIVEREF(__pyx_float_6_619100eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 98, __pyx_float_6_619100eneg_03);
    __Pyx_INCREF(__pyx_float_5_746900eneg_03);
    __Pyx_GIVEREF(__pyx_float_5_746900eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 99, __pyx_float_5_746900eneg_03);
    __Pyx_INCREF(__pyx_float_5_000400eneg_03);
    __Pyx_GIVEREF(__pyx_float_5_000400eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 100, __pyx_float_5_000400eneg_03);
    __Pyx_INCREF(__pyx_float_4_369600eneg_03);
    __Pyx_GIVEREF(__pyx_float_4_369600eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 101, __pyx_float_4_369600eneg_03);
    __Pyx_INCREF(__pyx_float_4_239700eneg_03);
    __Pyx_GIVEREF(__pyx_float_4_239700eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 102, __pyx_float_4_239700eneg_03);
    __Pyx_INCREF(__pyx_float_4_109200eneg_03);
    __Pyx_GIVEREF(__pyx_float_4_109200eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 103, __pyx_float_4_109200eneg_03);
    __Pyx_INCREF(__pyx_float_3_892600eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_892600eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 104, __pyx_float_3_892600eneg_03);
    __Pyx_INCREF(__pyx_float_3_673000eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_673000eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 105, __pyx_float_3_673000eneg_03);
    __Pyx_INCREF(__pyx_float_3_542500eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_542500eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 106, __pyx_float_3_542500eneg_03);
    __Pyx_INCREF(__pyx_float_3_495700eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_495700eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 107, __pyx_float_3_495700eneg_03);
    __Pyx_INCREF(__pyx_float_3_524900eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_524900eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 108, __pyx_float_3_524900eneg_03);
    __Pyx_INCREF(__pyx_float_3_510800eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_510800eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 109, __pyx_float_3_510800eneg_03);
    __Pyx_INCREF(__pyx_float_3_487700eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_487700eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 110, __pyx_float_3_487700eneg_03);
    __Pyx_INCREF(__pyx_float_3_476700eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_476700eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 111, __pyx_float_3_476700eneg_03);
    __Pyx_INCREF(__pyx_float_3_440000eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_440000eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 112, __pyx_float_3_440000eneg_03);
    __Pyx_INCREF(__pyx_float_3_414100eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_414100eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 113, __pyx_float_3_414100eneg_03);
    __Pyx_INCREF(__pyx_float_3_621800eneg_03);
    __Pyx_GIVEREF(__pyx_float_3_621800eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 114, __pyx_float_3_621800eneg_03);
    __Pyx_INCREF(__pyx_float_4_116400eneg_03);
    __Pyx_GIVEREF(__pyx_float_4_116400eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 115, __pyx_float_4_116400eneg_03);
    __Pyx_INCREF(__pyx_float_1_247600eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_247600eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 116, __pyx_float_1_247600eneg_02);
    __Pyx_INCREF(__pyx_float_2_007200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_007200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 117, __pyx_float_2_007200eneg_02);
    __Pyx_INCREF(__pyx_float_2_001200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_001200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 118, __pyx_float_2_001200eneg_02);
    __Pyx_INCREF(__pyx_float_1_914500eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_914500eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 119, __pyx_float_1_914500eneg_02);
    __Pyx_INCREF(__pyx_float_1_956400eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_956400eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 120, __pyx_float_1_956400eneg_02);
    __Pyx_INCREF(__pyx_float_2_422700eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_422700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 121, __pyx_float_2_422700eneg_02);
    __Pyx_INCREF(__pyx_float_2_601800eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_601800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 122, __pyx_float_2_601800eneg_02);
    __Pyx_INCREF(__pyx_float_2_543200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_543200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 123, __pyx_float_2_543200eneg_02);
    __Pyx_INCREF(__pyx_float_2_483100eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_483100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 124, __pyx_float_2_483100eneg_02);
    __Pyx_INCREF(__pyx_float_2_449900eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_449900eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 125, __pyx_float_2_449900eneg_02);
    __Pyx_INCREF(__pyx_float_2_437500eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_437500eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 126, __pyx_float_2_437500eneg_02);
    __Pyx_INCREF(__pyx_float_2_428200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_428200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 127, __pyx_float_2_428200eneg_02);
    __Pyx_INCREF(__pyx_float_2_422800eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_422800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 128, __pyx_float_2_422800eneg_02);
    __Pyx_INCREF(__pyx_float_2_418400eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_418400eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 129, __pyx_float_2_418400eneg_02);
    __Pyx_INCREF(__pyx_float_2_434300eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_434300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 130, __pyx_float_2_434300eneg_02);
    __Pyx_INCREF(__pyx_float_2_402000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_402000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 131, __pyx_float_2_402000eneg_02);
    __Pyx_INCREF(__pyx_float_2_395500eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_395500eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 132, __pyx_float_2_395500eneg_02);
    __Pyx_INCREF(__pyx_float_2_385300eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_385300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 133, __pyx_float_2_385300eneg_02);
    __Pyx_INCREF(__pyx_float_2_518000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_518000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 134, __pyx_float_2_518000eneg_02);
    __Pyx_INCREF(__pyx_float_2_475700eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_475700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 135, __pyx_float_2_475700eneg_02);
    __Pyx_INCREF(__pyx_float_2_450100eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_450100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 136, __pyx_float_2_450100eneg_02);
    __Pyx_INCREF(__pyx_float_2_447600eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_447600eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 137, __pyx_float_2_447600eneg_02);
    __Pyx_INCREF(__pyx_float_2_546000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_546000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 138, __pyx_float_2_546000eneg_02);
    __Pyx_INCREF(__pyx_float_2_682600eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_682600eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 139, __pyx_float_2_682600eneg_02);
    __Pyx_INCREF(__pyx_float_2_823200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_823200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 140, __pyx_float_2_823200eneg_02);
    __Pyx_INCREF(__pyx_float_2_895600eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_895600eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 141, __pyx_float_2_895600eneg_02);
    __Pyx_INCREF(__pyx_float_3_091800eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_091800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 142, __pyx_float_3_091800eneg_02);
    __Pyx_INCREF(__pyx_float_3_339200eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_339200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 143, __pyx_float_3_339200eneg_02);
    __Pyx_INCREF(__pyx_float_3_531100eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_531100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 144, __pyx_float_3_531100eneg_02);
    __Pyx_INCREF(__pyx_float_3_588300eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_588300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 145, __pyx_float_3_588300eneg_02);
    __Pyx_INCREF(__pyx_float_3_306100eneg_02);
    __Pyx_GIVEREF(__pyx_float_3_306100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 146, __pyx_float_3_306100eneg_02);
    __Pyx_INCREF(__pyx_float_2_992000eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_992000eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 147, __pyx_float_2_992000eneg_02);
    __Pyx_INCREF(__pyx_float_2_441500eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_441500eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 148, __pyx_float_2_441500eneg_02);
    __Pyx_INCREF(__pyx_float_2_545200eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_545200eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 149, __pyx_float_2_545200eneg_02);
    __Pyx_INCREF(__pyx_float_2_492800eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_492800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 150, __pyx_float_2_492800eneg_02);
    __Pyx_INCREF(__pyx_float_2_406300eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_406300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 151, __pyx_float_2_406300eneg_02);
    __Pyx_INCREF(__pyx_float_2_342100eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_342100eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 152, __pyx_float_2_342100eneg_02);
    __Pyx_INCREF(__pyx_float_2_060600eneg_02);
    __Pyx_GIVEREF(__pyx_float_2_060600eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 153, __pyx_float_2_060600eneg_02);
    __Pyx_INCREF(__pyx_float_1_776500eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_776500eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 154, __pyx_float_1_776500eneg_02);
    __Pyx_INCREF(__pyx_float_1_630400eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_630400eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 155, __pyx_float_1_630400eneg_02);
    __Pyx_INCREF(__pyx_float_1_543700eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_543700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 156, __pyx_float_1_543700eneg_02);
    __Pyx_INCREF(__pyx_float_1_477300eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_477300eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 157, __pyx_float_1_477300eneg_02);
    __Pyx_INCREF(__pyx_float_1_372800eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_372800eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 158, __pyx_float_1_372800eneg_02);
    __Pyx_INCREF(__pyx_float_1_098700eneg_02);
    __Pyx_GIVEREF(__pyx_float_1_098700eneg_02);
    PyList_SET_ITEM(__pyx_t_2, 159, __pyx_float_1_098700eneg_02);
    __Pyx_INCREF(__pyx_float_9_651700eneg_03);
    __Pyx_GIVEREF(__pyx_float_9_651700eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 160, __pyx_float_9_651700eneg_03);
    __Pyx_INCREF(__pyx_float_8_471600eneg_03);
    __Pyx_GIVEREF(__pyx_float_8_471600eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 161, __pyx_float_8_471600eneg_03);
    __Pyx_INCREF(__pyx_float_7_509900eneg_03);
    __Pyx_GIVEREF(__pyx_float_7_509900eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 162, __pyx_float_7_509900eneg_03);
    __Pyx_INCREF(__pyx_float_4_186300eneg_03);
    __Pyx_GIVEREF(__pyx_float_4_186300eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 163, __pyx_float_4_186300eneg_03);
    __Pyx_INCREF(__pyx_float_2_349200eneg_03);
    __Pyx_GIVEREF(__pyx_float_2_349200eneg_03);
    PyList_SET_ITEM(__pyx_t_2, 164, __pyx_float_2_349200eneg_03);
    __Pyx_INCREF(__pyx_float_9_688700eneg_04);
    __Pyx_GIVEREF(__pyx_float_9_688700eneg_04);
    PyList_SET_ITEM(__pyx_t_2, 165, __pyx_float_9_688700eneg_04);
    __Pyx_INCREF(__pyx_float_4_350300eneg_04);
    __Pyx_GIVEREF(__pyx_float_4_350300eneg_04);
    PyList_SET_ITEM(__pyx_t_2, 166, __pyx_float_4_350300eneg_04);
    __Pyx_INCREF(__pyx_float_2_200100eneg_04);
    __Pyx_GIVEREF(__pyx_float_2_200100eneg_04);
    PyList_SET_ITEM(__pyx_t_2, 167, __pyx_float_2_200100eneg_04);
    __Pyx_INCREF(__pyx_float_1_181100eneg_04);
    __Pyx_GIVEREF(__pyx_float_1_181100eneg_04);
    PyList_SET_ITEM(__pyx_t_2, 168, __pyx_float_1_181100eneg_04);
    __Pyx_INCREF(__pyx_float_7_299200eneg_05);
    __Pyx_GIVEREF(__pyx_float_7_299200eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 169, __pyx_float_7_299200eneg_05);
    __Pyx_INCREF(__pyx_float_4_677100eneg_05);
    __Pyx_GIVEREF(__pyx_float_4_677100eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 170, __pyx_float_4_677100eneg_05);
    __Pyx_INCREF(__pyx_float_3_111500eneg_05);
    __Pyx_GIVEREF(__pyx_float_3_111500eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 171, __pyx_float_3_111500eneg_05);
    __Pyx_INCREF(__pyx_float_2_158600eneg_05);
    __Pyx_GIVEREF(__pyx_float_2_158600eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 172, __pyx_float_2_158600eneg_05);
    __Pyx_INCREF(__pyx_float_1_562800eneg_05);
    __Pyx_GIVEREF(__pyx_float_1_562800eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 173, __pyx_float_1_562800eneg_05);
    __Pyx_INCREF(__pyx_float_1_163600eneg_05);
    __Pyx_GIVEREF(__pyx_float_1_163600eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 174, __pyx_float_1_163600eneg_05);
    __Pyx_INCREF(__pyx_float_8_940000eneg_06);
    __Pyx_GIVEREF(__pyx_float_8_940000eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 175, __pyx_float_8_940000eneg_06);
    __Pyx_INCREF(__pyx_float_7_842200eneg_06);
    __Pyx_GIVEREF(__pyx_float_7_842200eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 176, __pyx_float_7_842200eneg_06);
    __Pyx_INCREF(__pyx_float_6_804900eneg_06);
    __Pyx_GIVEREF(__pyx_float_6_804900eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 177, __pyx_float_6_804900eneg_06);
    __Pyx_INCREF(__pyx_float_6_481800eneg_06);
    __Pyx_GIVEREF(__pyx_float_6_481800eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 178, __pyx_float_6_481800eneg_06);
    __Pyx_INCREF(__pyx_float_6_190100eneg_06);
    __Pyx_GIVEREF(__pyx_float_6_190100eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 179, __pyx_float_6_190100eneg_06);
    __Pyx_INCREF(__pyx_float_6_048400eneg_06);
    __Pyx_GIVEREF(__pyx_float_6_048400eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 180, __pyx_float_6_048400eneg_06);
    __Pyx_INCREF(__pyx_float_1_102600eneg_05);
    __Pyx_GIVEREF(__pyx_float_1_102600eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 181, __pyx_float_1_102600eneg_05);
    __Pyx_INCREF(__pyx_float_2_368700eneg_05);
    __Pyx_GIVEREF(__pyx_float_2_368700eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 182, __pyx_float_2_368700eneg_05);
    __Pyx_INCREF(__pyx_float_3_291100eneg_05);
    __Pyx_GIVEREF(__pyx_float_3_291100eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 183, __pyx_float_3_291100eneg_05);
    __Pyx_INCREF(__pyx_float_4_113100eneg_05);
    __Pyx_GIVEREF(__pyx_float_4_113100eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 184, __pyx_float_4_113100eneg_05);
    __Pyx_INCREF(__pyx_float_4_999800eneg_05);
    __Pyx_GIVEREF(__pyx_float_4_999800eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 185, __pyx_float_4_999800eneg_05);
    __Pyx_INCREF(__pyx_float_7_184700eneg_05);
    __Pyx_GIVEREF(__pyx_float_7_184700eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 186, __pyx_float_7_184700eneg_05);
    __Pyx_INCREF(__pyx_float_8_541800eneg_05);
    __Pyx_GIVEREF(__pyx_float_8_541800eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 187, __pyx_float_8_541800eneg_05);
    __Pyx_INCREF(__pyx_float_7_848000eneg_05);
    __Pyx_GIVEREF(__pyx_float_7_848000eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 188, __pyx_float_7_848000eneg_05);
    __Pyx_INCREF(__pyx_float_7_486200eneg_05);
    __Pyx_GIVEREF(__pyx_float_7_486200eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 189, __pyx_float_7_486200eneg_05);
    __Pyx_INCREF(__pyx_float_6_163300eneg_05);
    __Pyx_GIVEREF(__pyx_float_6_163300eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 190, __pyx_float_6_163300eneg_05);
    __Pyx_INCREF(__pyx_float_5_797400eneg_05);
    __Pyx_GIVEREF(__pyx_float_5_797400eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 191, __pyx_float_5_797400eneg_05);
    __Pyx_INCREF(__pyx_float_4_713800eneg_05);
    __Pyx_GIVEREF(__pyx_float_4_713800eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 192, __pyx_float_4_713800eneg_05);
    __Pyx_INCREF(__pyx_float_3_849700eneg_05);
    __Pyx_GIVEREF(__pyx_float_3_849700eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 193, __pyx_float_3_849700eneg_05);
    __Pyx_INCREF(__pyx_float_3_207900eneg_05);
    __Pyx_GIVEREF(__pyx_float_3_207900eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 194, __pyx_float_3_207900eneg_05);
    __Pyx_INCREF(__pyx_float_1_364200eneg_05);
    __Pyx_GIVEREF(__pyx_float_1_364200eneg_05);
    PyList_SET_ITEM(__pyx_t_2, 195, __pyx_float_1_364200eneg_05);
    __Pyx_INCREF(__pyx_float_7_140800eneg_06);
    __Pyx_GIVEREF(__pyx_float_7_140800eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 196, __pyx_float_7_140800eneg_06);
    __Pyx_INCREF(__pyx_float_4_048400eneg_06);
    __Pyx_GIVEREF(__pyx_float_4_048400eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 197, __pyx_float_4_048400eneg_06);
    __Pyx_INCREF(__pyx_float_2_484300eneg_06);
    __Pyx_GIVEREF(__pyx_float_2_484300eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 198, __pyx_float_2_484300eneg_06);
    __Pyx_INCREF(__pyx_float_1_072600eneg_06);
    __Pyx_GIVEREF(__pyx_float_1_072600eneg_06);
    PyList_SET_ITEM(__pyx_t_2, 199, __pyx_float_1_072600eneg_06);
    __Pyx_INCREF(__pyx_float_5_510200eneg_07);
    __Pyx_GIVEREF(__pyx_float_5_510200eneg_07);
    PyList_SET_ITEM(__pyx_t_2, 200, __pyx_float_5_510200eneg_07);
    __Pyx_INCREF(__pyx_float_3_146300eneg_07);
    __Pyx_GIVEREF(__pyx_float_3_146300eneg_07);
    PyList_SET_ITEM(__pyx_t_2, 201, __pyx_float_3_146300eneg_07);
    __Pyx_INCREF(__pyx_float_1_917300eneg_07);
    __Pyx_GIVEREF(__pyx_float_1_917300eneg_07);
    PyList_SET_ITEM(__pyx_t_2, 202, __pyx_float_1_917300eneg_07);
    __Pyx_INCREF(__pyx_float_1_248800eneg_07);
    __Pyx_GIVEREF(__pyx_float_1_248800eneg_07);
    PyList_SET_ITEM(__pyx_t_2, 203, __pyx_float_1_248800eneg_07);
    __Pyx_INCREF(__pyx_float_1_272000eneg_07);
    __Pyx_GIVEREF(__pyx_float_1_272000eneg_07);
    PyList_SET_ITEM(__pyx_t_2, 204, __pyx_float_1_272000eneg_07);
    __Pyx_INCREF(__pyx_float_8_241000eneg_08);
    __Pyx_GIVEREF(__pyx_float_8_241000eneg_08);
    PyList_SET_ITEM(__pyx_t_2, 205, __pyx_float_8_241000eneg_08);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_k = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1476
 *           1.272000e-07 ,8.241000e-08])#*2.#*0.
 *       #k=0.00099066*lam+0.4526242
 *       from scipy.interpolate import interp1d as interpol             # <<<<<<<<<<<<<<
 *       sort = np.argsort(lam)
 *       lam = lam[sort]
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_interp1d);
    __Pyx_GIVEREF(__pyx_n_s_interp1d);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_interp1d);
    __pyx_t_5 = __Pyx_Import(__pyx_n_s_scipy_interpolate, __pyx_t_3, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_5, __pyx_n_s_interp1d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_interpol = __pyx_t_3;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1477
 *       #k=0.00099066*lam+0.4526242
 *       from scipy.interpolate import interp1d as interpol
 *       sort = np.argsort(lam)             # <<<<<<<<<<<<<<
 *       lam = lam[sort]
 *       n = n[sort]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_argsort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_lam) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_lam);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_sort = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1478
 *       from scipy.interpolate import interp1d as interpol
 *       sort = np.argsort(lam)
 *       lam = lam[sort]             # <<<<<<<<<<<<<<
 *       n = n[sort]
 *       k = k[sort]
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_lam, __pyx_v_sort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_lam, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1479
 *       sort = np.argsort(lam)
 *       lam = lam[sort]
 *       n = n[sort]             # <<<<<<<<<<<<<<
 *       k = k[sort]
 *       f = interpol(lam, n)
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_n, __pyx_v_sort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_n, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1480
 *       lam = lam[sort]
 *       n = n[sort]
 *       k = k[sort]             # <<<<<<<<<<<<<<
 *       f = interpol(lam, n)
 *       n_out = f(lam_in)
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_k, __pyx_v_sort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1481
 *       n = n[sort]
 *       k = k[sort]
 *       f = interpol(lam, n)             # <<<<<<<<<<<<<<
 *       n_out = f(lam_in)
 *       f = interpol(lam, k)
 */
    __Pyx_INCREF(__pyx_v_interpol);
    __pyx_t_2 = __pyx_v_interpol; __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_lam, __pyx_v_n};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_lam, __pyx_v_n};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    {
      __pyx_t_1 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_v_lam);
      __Pyx_GIVEREF(__pyx_v_lam);
      PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_6, __pyx_v_lam);
      __Pyx_INCREF(__pyx_v_n);
      __Pyx_GIVEREF(__pyx_v_n);
      PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_6, __pyx_v_n);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_f = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1482
 *       k = k[sort]
 *       f = interpol(lam, n)
 *       n_out = f(lam_in)             # <<<<<<<<<<<<<<
 *       f = interpol(lam, k)
 *       k_out = f(lam_in)
 */
    __Pyx_INCREF(__pyx_v_f);
    __pyx_t_2 = __pyx_v_f; __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_lam_in) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_lam_in);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1482, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_n_out = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1483
 *       f = interpol(lam, n)
 *       n_out = f(lam_in)
 *       f = interpol(lam, k)             # <<<<<<<<<<<<<<
 *       k_out = f(lam_in)
 * 
 */
    __Pyx_INCREF(__pyx_v_interpol);
    __pyx_t_2 = __pyx_v_interpol; __pyx_t_1 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_lam, __pyx_v_k};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1483, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_lam, __pyx_v_k};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1483, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_v_lam);
      __Pyx_GIVEREF(__pyx_v_lam);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_6, __pyx_v_lam);
      __Pyx_INCREF(__pyx_v_k);
      __Pyx_GIVEREF(__pyx_v_k);
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_6, __pyx_v_k);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_f, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1484
 *       n_out = f(lam_in)
 *       f = interpol(lam, k)
 *       k_out = f(lam_in)             # <<<<<<<<<<<<<<
 * 
 *       return n_out,k_out
 */
    __Pyx_INCREF(__pyx_v_f);
    __pyx_t_2 = __pyx_v_f; __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_lam_in) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_lam_in);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1484, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_k_out = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1486
 *       k_out = f(lam_in)
 * 
 *       return n_out,k_out             # <<<<<<<<<<<<<<
 * #
 *   def thick(th_max, tau, t):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_n_out);
    __Pyx_GIVEREF(__pyx_v_n_out);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_n_out);
    __Pyx_INCREF(__pyx_v_k_out);
    __Pyx_GIVEREF(__pyx_v_k_out);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_k_out);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1351
 *       return n_out, k_out
 * 
 *     elif (elem.upper() == 'AL'):             # <<<<<<<<<<<<<<
 *       lam = np.array([200.000000, 177.119995, 153.850006, 137.759995, \
 *           125.000000, 99.996002, 80.000999, 66.666000, 57.144001, 50.000000, \
 */
  }

  /* "mirror_lib_v04.pyx":1311
 *     return n
 * #
 *   def indexes(elem, lam_in):             # <<<<<<<<<<<<<<
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.dirt_timing.indexes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lam);
  __Pyx_XDECREF(__pyx_v_n2);
  __Pyx_XDECREF(__pyx_v_n_out);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_interpol);
  __Pyx_XDECREF(__pyx_v_sort);
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XDECREF(__pyx_v_k_out);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1488
 *       return n_out,k_out
 * #
 *   def thick(th_max, tau, t):             # <<<<<<<<<<<<<<
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_5thick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing_5thick = {"thick", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing_5thick, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_5thick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_th_max = 0;
  PyObject *__pyx_v_tau = 0;
  PyObject *__pyx_v_t = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("thick (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_th_max,&__pyx_n_s_tau,&__pyx_n_s_t,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_th_max)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("thick", 1, 3, 3, 1); __PYX_ERR(0, 1488, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_t)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("thick", 1, 3, 3, 2); __PYX_ERR(0, 1488, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "thick") < 0)) __PYX_ERR(0, 1488, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_th_max = values[0];
    __pyx_v_tau = values[1];
    __pyx_v_t = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("thick", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1488, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing.thick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_11dirt_timing_4thick(__pyx_self, __pyx_v_th_max, __pyx_v_tau, __pyx_v_t);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_11dirt_timing_4thick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_th_max, PyObject *__pyx_v_tau, PyObject *__pyx_v_t) {
  PyObject *__pyx_v_th = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("thick", 0);

  /* "mirror_lib_v04.pyx":1490
 *   def thick(th_max, tau, t):
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))             # <<<<<<<<<<<<<<
 *     return th
 * #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_exp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Negative(__pyx_v_t); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_v_tau); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_e0, __pyx_t_1, 1.e0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_th_max, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_th = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1491
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))
 *     return th             # <<<<<<<<<<<<<<
 * #
 *   def Dthick(alpha, t):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_th);
  __pyx_r = __pyx_v_th;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1488
 *       return n_out,k_out
 * #
 *   def thick(th_max, tau, t):             # <<<<<<<<<<<<<<
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pymirrors.dirt_timing.thick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_th);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1493
 *     return th
 * #
 *   def Dthick(alpha, t):             # <<<<<<<<<<<<<<
 * #
 *     th = alpha * t
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_7Dthick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing_7Dthick = {"Dthick", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing_7Dthick, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_7Dthick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_alpha = 0;
  PyObject *__pyx_v_t = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Dthick (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_t,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_t)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Dthick", 1, 2, 2, 1); __PYX_ERR(0, 1493, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Dthick") < 0)) __PYX_ERR(0, 1493, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_alpha = values[0];
    __pyx_v_t = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Dthick", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1493, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing.Dthick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_11dirt_timing_6Dthick(__pyx_self, __pyx_v_alpha, __pyx_v_t);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_11dirt_timing_6Dthick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_t) {
  PyObject *__pyx_v_th = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("Dthick", 0);

  /* "mirror_lib_v04.pyx":1495
 *   def Dthick(alpha, t):
 * #
 *     th = alpha * t             # <<<<<<<<<<<<<<
 * 
 *     return th
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_alpha, __pyx_v_t); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_th = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1497
 *     th = alpha * t
 * 
 *     return th             # <<<<<<<<<<<<<<
 * #
 *   class materials(object):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_th);
  __pyx_r = __pyx_v_th;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1493
 *     return th
 * #
 *   def Dthick(alpha, t):             # <<<<<<<<<<<<<<
 * #
 *     th = alpha * t
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pymirrors.dirt_timing.Dthick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_th);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1501
 *   class materials(object):
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):             # <<<<<<<<<<<<<<
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_9materials_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_11dirt_timing_9materials_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_11dirt_timing_9materials_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_11dirt_timing_9materials_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_n_s = 0;
  PyObject *__pyx_v_n_in = 0;
  PyObject *__pyx_v_n_d = 0;
  PyObject *__pyx_v_n_c = 0;
  PyObject *__pyx_v_n_ox = 0;
  PyObject *__pyx_v_d_ox = 0;
  PyObject *__pyx_v_d_c = 0;
  PyObject *__pyx_v_d_s = 0;
  PyObject *__pyx_v_d_d = 0;
  PyObject *__pyx_v_lamb = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_n_s,&__pyx_n_s_n_in,&__pyx_n_s_n_d,&__pyx_n_s_n_c,&__pyx_n_s_n_ox,&__pyx_n_s_d_ox,&__pyx_n_s_d_c,&__pyx_n_s_d_s,&__pyx_n_s_d_d,&__pyx_n_s_lamb,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 1); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 2); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_d)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 3); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_c)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 4); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_ox)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 5); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_ox)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 6); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_c)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 7); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 8); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_d)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 9); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lamb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, 10); __PYX_ERR(0, 1501, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1501, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_self = values[0];
    __pyx_v_n_s = values[1];
    __pyx_v_n_in = values[2];
    __pyx_v_n_d = values[3];
    __pyx_v_n_c = values[4];
    __pyx_v_n_ox = values[5];
    __pyx_v_d_ox = values[6];
    __pyx_v_d_c = values[7];
    __pyx_v_d_s = values[8];
    __pyx_v_d_d = values[9];
    __pyx_v_lamb = values[10];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1501, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.dirt_timing.materials.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_11dirt_timing_9materials___init__(__pyx_self, __pyx_v_self, __pyx_v_n_s, __pyx_v_n_in, __pyx_v_n_d, __pyx_v_n_c, __pyx_v_n_ox, __pyx_v_d_ox, __pyx_v_d_c, __pyx_v_d_s, __pyx_v_d_d, __pyx_v_lamb);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_11dirt_timing_9materials___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_n_s, PyObject *__pyx_v_n_in, PyObject *__pyx_v_n_d, PyObject *__pyx_v_n_c, PyObject *__pyx_v_n_ox, PyObject *__pyx_v_d_ox, PyObject *__pyx_v_d_c, PyObject *__pyx_v_d_s, PyObject *__pyx_v_d_d, PyObject *__pyx_v_lamb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "mirror_lib_v04.pyx":1502
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):
 *       self.n_s = n_s + 0j             # <<<<<<<<<<<<<<
 *       self.n_in = n_in + 0j
 *       self.n_d = n_d + 0j
 */
  __pyx_t_1 = PyComplex_FromDoubles(0.0, 0.0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Add(__pyx_v_n_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_s, __pyx_t_2) < 0) __PYX_ERR(0, 1502, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1503
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j             # <<<<<<<<<<<<<<
 *       self.n_d = n_d + 0j
 *       self.n_c = n_c * 1.
 */
  __pyx_t_2 = PyComplex_FromDoubles(0.0, 0.0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Add(__pyx_v_n_in, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_in, __pyx_t_1) < 0) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1504
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j
 *       self.n_d = n_d + 0j             # <<<<<<<<<<<<<<
 *       self.n_c = n_c * 1.
 *       self.n_ox = n_ox + 0j
 */
  __pyx_t_1 = PyComplex_FromDoubles(0.0, 0.0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Add(__pyx_v_n_d, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_d, __pyx_t_2) < 0) __PYX_ERR(0, 1504, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1505
 *       self.n_in = n_in + 0j
 *       self.n_d = n_d + 0j
 *       self.n_c = n_c * 1.             # <<<<<<<<<<<<<<
 *       self.n_ox = n_ox + 0j
 * 
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_n_c, __pyx_float_1_); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_c, __pyx_t_2) < 0) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1506
 *       self.n_d = n_d + 0j
 *       self.n_c = n_c * 1.
 *       self.n_ox = n_ox + 0j             # <<<<<<<<<<<<<<
 * 
 *       self.d_ox = d_ox * 1.
 */
  __pyx_t_2 = PyComplex_FromDoubles(0.0, 0.0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1506, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Add(__pyx_v_n_ox, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1506, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_n_ox, __pyx_t_1) < 0) __PYX_ERR(0, 1506, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1508
 *       self.n_ox = n_ox + 0j
 * 
 *       self.d_ox = d_ox * 1.             # <<<<<<<<<<<<<<
 *       self.d_c = d_c * 1.
 *       self.d_s = d_s * 1.
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_d_ox, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d_ox, __pyx_t_1) < 0) __PYX_ERR(0, 1508, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1509
 * 
 *       self.d_ox = d_ox * 1.
 *       self.d_c = d_c * 1.             # <<<<<<<<<<<<<<
 *       self.d_s = d_s * 1.
 *       self.d_d = d_d * 1.
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_d_c, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d_c, __pyx_t_1) < 0) __PYX_ERR(0, 1509, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1510
 *       self.d_ox = d_ox * 1.
 *       self.d_c = d_c * 1.
 *       self.d_s = d_s * 1.             # <<<<<<<<<<<<<<
 *       self.d_d = d_d * 1.
 * 
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_d_s, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1510, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d_s, __pyx_t_1) < 0) __PYX_ERR(0, 1510, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1511
 *       self.d_c = d_c * 1.
 *       self.d_s = d_s * 1.
 *       self.d_d = d_d * 1.             # <<<<<<<<<<<<<<
 * 
 *       self.lamb = lamb * 1.
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_d_d, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_d_d, __pyx_t_1) < 0) __PYX_ERR(0, 1511, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1513
 *       self.d_d = d_d * 1.
 * 
 *       self.lamb = lamb * 1.             # <<<<<<<<<<<<<<
 * 
 *       return
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_lamb, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lamb, __pyx_t_1) < 0) __PYX_ERR(0, 1513, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1515
 *       self.lamb = lamb * 1.
 * 
 *       return             # <<<<<<<<<<<<<<
 * #
 *   #FIRST APPROACH: ONE DUST PARTICLE THICK PER DAY
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1501
 *   class materials(object):
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):             # <<<<<<<<<<<<<<
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pymirrors.dirt_timing.materials.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1295
 * 
 * #
 * def dirt_timing(lamb, time):             # <<<<<<<<<<<<<<
 * #
 *   def zerodux(lamb, angstrom=True):
 */

static PyObject *__pyx_pf_9pymirrors_10dirt_timing(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lamb, PyObject *__pyx_v_time) {
  PyObject *__pyx_v_zerodux = 0;
  PyObject *__pyx_v_indexes = 0;
  PyObject *__pyx_v_thick = 0;
  PyObject *__pyx_v_Dthick = 0;
  PyObject *__pyx_v_materials = NULL;
  double __pyx_v_alpha;
  PyObject *__pyx_v_n_s = NULL;
  double __pyx_v_n_in;
  double __pyx_v_n_d;
  PyObject *__pyx_v_elem_esp = NULL;
  PyObject *__pyx_v_n_g = NULL;
  PyObject *__pyx_v_k_g = NULL;
  PyObject *__pyx_v_n_c = NULL;
  PyObject *__pyx_v_elem_ox = NULL;
  PyObject *__pyx_v_n_ox = NULL;
  PyObject *__pyx_v_k_ox = NULL;
  double __pyx_v_tau_o;
  CYTHON_UNUSED double __pyx_v_tau_d;
  double __pyx_v_th_m_o;
  CYTHON_UNUSED double __pyx_v_th_m_d;
  double __pyx_v_d_mir;
  PyObject *__pyx_v_d_ox = NULL;
  PyObject *__pyx_v_d_c = NULL;
  PyObject *__pyx_v_d_d = NULL;
  PyObject *__pyx_v_d_s = NULL;
  PyObject *__pyx_v_material = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  __Pyx_RefNannySetupContext("dirt_timing", 0);

  /* "mirror_lib_v04.pyx":1297
 * def dirt_timing(lamb, time):
 * #
 *   def zerodux(lamb, angstrom=True):             # <<<<<<<<<<<<<<
 *   #
 *     if (angstrom == True):
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing_1zerodux, 0, __pyx_n_s_dirt_timing_locals_zerodux, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_1, __pyx_tuple__58);
  __pyx_v_zerodux = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1311
 *     return n
 * #
 *   def indexes(elem, lam_in):             # <<<<<<<<<<<<<<
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing_3indexes, 0, __pyx_n_s_dirt_timing_locals_indexes, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__60)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_indexes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1488
 *       return n_out,k_out
 * #
 *   def thick(th_max, tau, t):             # <<<<<<<<<<<<<<
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing_5thick, 0, __pyx_n_s_dirt_timing_locals_thick, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__62)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_thick = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1493
 *     return th
 * #
 *   def Dthick(alpha, t):             # <<<<<<<<<<<<<<
 * #
 *     th = alpha * t
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing_7Dthick, 0, __pyx_n_s_dirt_timing_locals_Dthick, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_Dthick = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1499
 *     return th
 * #
 *   class materials(object):             # <<<<<<<<<<<<<<
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__65); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__65, __pyx_n_s_materials, __pyx_n_s_dirt_timing_locals_materials, (PyObject *) NULL, __pyx_n_s_pymirrors, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mirror_lib_v04.pyx":1501
 *   class materials(object):
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):             # <<<<<<<<<<<<<<
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing_9materials_1__init__, 0, __pyx_n_s_dirt_timing_locals_materials___i, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1499
 *     return th
 * #
 *   class materials(object):             # <<<<<<<<<<<<<<
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_materials, __pyx_tuple__65, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_materials = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1524
 *   #alpha = 0.008
 *   #alpha = 0.0006
 *   alpha = 0.003#25             # <<<<<<<<<<<<<<
 * 
 *   n_s = zerodux(lamb * 1.e-4)
 */
  __pyx_v_alpha = 0.003;

  /* "mirror_lib_v04.pyx":1526
 *   alpha = 0.003#25
 * 
 *   n_s = zerodux(lamb * 1.e-4)             # <<<<<<<<<<<<<<
 *   n_in = 1.e0
 *   n_d = 1.52e0
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_lamb, __pyx_float_1_eneg_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_v_zerodux, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_s = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1527
 * 
 *   n_s = zerodux(lamb * 1.e-4)
 *   n_in = 1.e0             # <<<<<<<<<<<<<<
 *   n_d = 1.52e0
 *   elem_esp = 'al'
 */
  __pyx_v_n_in = 1.e0;

  /* "mirror_lib_v04.pyx":1528
 *   n_s = zerodux(lamb * 1.e-4)
 *   n_in = 1.e0
 *   n_d = 1.52e0             # <<<<<<<<<<<<<<
 *   elem_esp = 'al'
 *   n_g, k_g = indexes(elem_esp,lamb)
 */
  __pyx_v_n_d = 1.52e0;

  /* "mirror_lib_v04.pyx":1529
 *   n_in = 1.e0
 *   n_d = 1.52e0
 *   elem_esp = 'al'             # <<<<<<<<<<<<<<
 *   n_g, k_g = indexes(elem_esp,lamb)
 *   n_c = n_g + k_g * 1j
 */
  __Pyx_INCREF(__pyx_n_u_al);
  __pyx_v_elem_esp = __pyx_n_u_al;

  /* "mirror_lib_v04.pyx":1530
 *   n_d = 1.52e0
 *   elem_esp = 'al'
 *   n_g, k_g = indexes(elem_esp,lamb)             # <<<<<<<<<<<<<<
 *   n_c = n_g + k_g * 1j
 *   elem_ox = 'ox'
 */
  __pyx_t_2 = __pyx_pf_9pymirrors_11dirt_timing_2indexes(__pyx_v_indexes, __pyx_v_elem_esp, __pyx_v_lamb); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1530, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1530, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1530, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1530, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 2) < 0) __PYX_ERR(0, 1530, __pyx_L1_error)
    __pyx_t_5 = NULL;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1530, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_n_g = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_k_g = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1531
 *   elem_esp = 'al'
 *   n_g, k_g = indexes(elem_esp,lamb)
 *   n_c = n_g + k_g * 1j             # <<<<<<<<<<<<<<
 *   elem_ox = 'ox'
 *   n_ox, k_ox = indexes(elem_ox,lamb)
 */
  __pyx_t_2 = PyComplex_FromDoubles(0.0, 1.0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_k_g, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_v_n_g, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_n_c = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1532
 *   n_g, k_g = indexes(elem_esp,lamb)
 *   n_c = n_g + k_g * 1j
 *   elem_ox = 'ox'             # <<<<<<<<<<<<<<
 *   n_ox, k_ox = indexes(elem_ox,lamb)
 *   n_ox = n_ox + k_ox * 1j
 */
  __Pyx_INCREF(__pyx_n_u_ox);
  __pyx_v_elem_ox = __pyx_n_u_ox;

  /* "mirror_lib_v04.pyx":1533
 *   n_c = n_g + k_g * 1j
 *   elem_ox = 'ox'
 *   n_ox, k_ox = indexes(elem_ox,lamb)             # <<<<<<<<<<<<<<
 *   n_ox = n_ox + k_ox * 1j
 * 
 */
  __pyx_t_2 = __pyx_pf_9pymirrors_11dirt_timing_2indexes(__pyx_v_indexes, __pyx_v_elem_ox, __pyx_v_lamb); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1533, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_1 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_1);
    #else
    __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
    index = 0; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    index = 1; __pyx_t_1 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L5_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 2) < 0) __PYX_ERR(0, 1533, __pyx_L1_error)
    __pyx_t_5 = NULL;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L6_unpacking_done;
    __pyx_L5_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1533, __pyx_L1_error)
    __pyx_L6_unpacking_done:;
  }
  __pyx_v_n_ox = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_k_ox = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1534
 *   elem_ox = 'ox'
 *   n_ox, k_ox = indexes(elem_ox,lamb)
 *   n_ox = n_ox + k_ox * 1j             # <<<<<<<<<<<<<<
 * 
 *   tau_o = 1392.1484e0
 */
  __pyx_t_2 = PyComplex_FromDoubles(0.0, 1.0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_k_ox, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_v_n_ox, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF_SET(__pyx_v_n_ox, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1536
 *   n_ox = n_ox + k_ox * 1j
 * 
 *   tau_o = 1392.1484e0             # <<<<<<<<<<<<<<
 *   tau_d = 1.8e2
 *   th_m_o = 1.2e3
 */
  __pyx_v_tau_o = 1392.1484e0;

  /* "mirror_lib_v04.pyx":1537
 * 
 *   tau_o = 1392.1484e0
 *   tau_d = 1.8e2             # <<<<<<<<<<<<<<
 *   th_m_o = 1.2e3
 *   th_m_d = 1.2e4
 */
  __pyx_v_tau_d = 1.8e2;

  /* "mirror_lib_v04.pyx":1538
 *   tau_o = 1392.1484e0
 *   tau_d = 1.8e2
 *   th_m_o = 1.2e3             # <<<<<<<<<<<<<<
 *   th_m_d = 1.2e4
 *   d_mir = 1.2e3   #angstroms
 */
  __pyx_v_th_m_o = 1.2e3;

  /* "mirror_lib_v04.pyx":1539
 *   tau_d = 1.8e2
 *   th_m_o = 1.2e3
 *   th_m_d = 1.2e4             # <<<<<<<<<<<<<<
 *   d_mir = 1.2e3   #angstroms
 * 
 */
  __pyx_v_th_m_d = 1.2e4;

  /* "mirror_lib_v04.pyx":1540
 *   th_m_o = 1.2e3
 *   th_m_d = 1.2e4
 *   d_mir = 1.2e3   #angstroms             # <<<<<<<<<<<<<<
 * 
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )
 */
  __pyx_v_d_mir = 1.2e3;

  /* "mirror_lib_v04.pyx":1542
 *   d_mir = 1.2e3   #angstroms
 * 
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )             # <<<<<<<<<<<<<<
 *   d_c = (d_mir - d_ox)  #el espesor del conductor sera el original (d_mir) menos lo que se ha oxidado.
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_th_m_o); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_tau_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_time, __pyx_tuple__68); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_pf_9pymirrors_11dirt_timing_4thick(__pyx_v_thick, __pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_1_, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_d_ox = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1543
 * 
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )
 *   d_c = (d_mir - d_ox)  #el espesor del conductor sera el original (d_mir) menos lo que se ha oxidado.             # <<<<<<<<<<<<<<
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_d_mir); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_3, __pyx_v_d_ox); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_d_c = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "mirror_lib_v04.pyx":1544
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )
 *   d_c = (d_mir - d_ox)  #el espesor del conductor sera el original (d_mir) menos lo que se ha oxidado.
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )             # <<<<<<<<<<<<<<
 * 
 *   d_s = d_d.real * 0. + 1.e4
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_alpha); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_time, __pyx_tuple__69); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __pyx_pf_9pymirrors_11dirt_timing_6Dthick(__pyx_v_Dthick, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_1_, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_d_d = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1546
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )
 * 
 *   d_s = d_d.real * 0. + 1.e4             # <<<<<<<<<<<<<<
 * 
 *   material = materials(n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_d_d, __pyx_n_s_real); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_float_0_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyFloat_AddObjC(__pyx_t_1, __pyx_float_1_e4, 1.e4, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_d_s = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1548
 *   d_s = d_d.real * 0. + 1.e4
 * 
 *   material = materials(n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb)             # <<<<<<<<<<<<<<
 * 
 *   return material
 */
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_n_in); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_n_d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(10); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_n_s);
  __Pyx_GIVEREF(__pyx_v_n_s);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_n_s);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_n_c);
  __Pyx_GIVEREF(__pyx_v_n_c);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_v_n_c);
  __Pyx_INCREF(__pyx_v_n_ox);
  __Pyx_GIVEREF(__pyx_v_n_ox);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_v_n_ox);
  __Pyx_INCREF(__pyx_v_d_ox);
  __Pyx_GIVEREF(__pyx_v_d_ox);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_v_d_ox);
  __Pyx_INCREF(__pyx_v_d_c);
  __Pyx_GIVEREF(__pyx_v_d_c);
  PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_v_d_c);
  __Pyx_INCREF(__pyx_v_d_s);
  __Pyx_GIVEREF(__pyx_v_d_s);
  PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_v_d_s);
  __Pyx_INCREF(__pyx_v_d_d);
  __Pyx_GIVEREF(__pyx_v_d_d);
  PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_v_d_d);
  __Pyx_INCREF(__pyx_v_lamb);
  __Pyx_GIVEREF(__pyx_v_lamb);
  PyTuple_SET_ITEM(__pyx_t_4, 9, __pyx_v_lamb);
  __pyx_t_3 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_v_materials, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_material = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1550
 *   material = materials(n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb)
 * 
 *   return material             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_material);
  __pyx_r = __pyx_v_material;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1295
 * 
 * #
 * def dirt_timing(lamb, time):             # <<<<<<<<<<<<<<
 * #
 *   def zerodux(lamb, angstrom=True):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pymirrors.dirt_timing", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_zerodux);
  __Pyx_XDECREF(__pyx_v_indexes);
  __Pyx_XDECREF(__pyx_v_thick);
  __Pyx_XDECREF(__pyx_v_Dthick);
  __Pyx_XDECREF(__pyx_v_materials);
  __Pyx_XDECREF(__pyx_v_n_s);
  __Pyx_XDECREF(__pyx_v_elem_esp);
  __Pyx_XDECREF(__pyx_v_n_g);
  __Pyx_XDECREF(__pyx_v_k_g);
  __Pyx_XDECREF(__pyx_v_n_c);
  __Pyx_XDECREF(__pyx_v_elem_ox);
  __Pyx_XDECREF(__pyx_v_n_ox);
  __Pyx_XDECREF(__pyx_v_k_ox);
  __Pyx_XDECREF(__pyx_v_d_ox);
  __Pyx_XDECREF(__pyx_v_d_c);
  __Pyx_XDECREF(__pyx_v_d_d);
  __Pyx_XDECREF(__pyx_v_d_s);
  __Pyx_XDECREF(__pyx_v_material);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1556
 * # ---------------------------------------------------------------------
 * #
 * def get_intersection_focus(dir_cos, x, z, f):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_13get_intersection_focus(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_13get_intersection_focus = {"get_intersection_focus", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_13get_intersection_focus, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_13get_intersection_focus(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dir_cos = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_f = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_intersection_focus (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dir_cos,&__pyx_n_s_x,&__pyx_n_s_z,&__pyx_n_s_f,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dir_cos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection_focus", 1, 4, 4, 1); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection_focus", 1, 4, 4, 2); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection_focus", 1, 4, 4, 3); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_intersection_focus") < 0)) __PYX_ERR(0, 1556, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_dir_cos = values[0];
    __pyx_v_x = values[1];
    __pyx_v_z = values[2];
    __pyx_v_f = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_intersection_focus", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1556, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_intersection_focus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_12get_intersection_focus(__pyx_self, __pyx_v_dir_cos, __pyx_v_x, __pyx_v_z, __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_12get_intersection_focus(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dir_cos, PyObject *__pyx_v_x, PyObject *__pyx_v_z, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_xf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_intersection_focus", 0);

  /* "mirror_lib_v04.pyx":1558
 * def get_intersection_focus(dir_cos, x, z, f):
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]             # <<<<<<<<<<<<<<
 * 
 *   b = z - a * x
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_dir_cos, __pyx_tuple__70); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_dir_cos, __pyx_tuple__71); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1560
 *   a = dir_cos[2,:]/dir_cos[0,:]
 * 
 *   b = z - a * x             # <<<<<<<<<<<<<<
 * 
 *   xf = (f - b) / a
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_a, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_z, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_b = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1562
 *   b = z - a * x
 * 
 *   xf = (f - b) / a             # <<<<<<<<<<<<<<
 * 
 *   return xf
 */
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_f, __pyx_v_b); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_v_a); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_xf = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1564
 *   xf = (f - b) / a
 * 
 *   return xf             # <<<<<<<<<<<<<<
 * 
 * def get_intersection(dir_cos, x, z, r, k, offset):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_xf);
  __pyx_r = __pyx_v_xf;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1556
 * # ---------------------------------------------------------------------
 * #
 * def get_intersection_focus(dir_cos, x, z, f):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.get_intersection_focus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_xf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1566
 *   return xf
 * 
 * def get_intersection(dir_cos, x, z, r, k, offset):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_15get_intersection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_15get_intersection = {"get_intersection", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_15get_intersection, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_15get_intersection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dir_cos = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_r = 0;
  PyObject *__pyx_v_k = 0;
  PyObject *__pyx_v_offset = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_intersection (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dir_cos,&__pyx_n_s_x,&__pyx_n_s_z,&__pyx_n_s_r,&__pyx_n_s_k,&__pyx_n_s_offset,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dir_cos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, 1); __PYX_ERR(0, 1566, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, 2); __PYX_ERR(0, 1566, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, 3); __PYX_ERR(0, 1566, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, 4); __PYX_ERR(0, 1566, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_offset)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, 5); __PYX_ERR(0, 1566, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_intersection") < 0)) __PYX_ERR(0, 1566, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_dir_cos = values[0];
    __pyx_v_x = values[1];
    __pyx_v_z = values[2];
    __pyx_v_r = values[3];
    __pyx_v_k = values[4];
    __pyx_v_offset = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_intersection", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1566, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_intersection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_14get_intersection(__pyx_self, __pyx_v_dir_cos, __pyx_v_x, __pyx_v_z, __pyx_v_r, __pyx_v_k, __pyx_v_offset);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_14get_intersection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dir_cos, PyObject *__pyx_v_x, PyObject *__pyx_v_z, PyObject *__pyx_v_r, PyObject *__pyx_v_k, PyObject *__pyx_v_offset) {
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_cte1 = NULL;
  PyObject *__pyx_v_cte2 = NULL;
  PyObject *__pyx_v_ctea = NULL;
  PyObject *__pyx_v_cteb = NULL;
  PyObject *__pyx_v_cteq = NULL;
  PyObject *__pyx_v_ctel = NULL;
  PyObject *__pyx_v_ctei = NULL;
  PyObject *__pyx_v_xs2 = NULL;
  PyObject *__pyx_v_xs1 = NULL;
  PyObject *__pyx_v_dir_cos_n1 = NULL;
  PyObject *__pyx_v_zs1 = NULL;
  PyObject *__pyx_v_dir_cos_n2 = NULL;
  PyObject *__pyx_v_zs2 = NULL;
  PyObject *__pyx_v_adiff1 = NULL;
  PyObject *__pyx_v_adiff2 = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  __Pyx_RefNannySetupContext("get_intersection", 0);
  __Pyx_INCREF(__pyx_v_dir_cos);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_z);

  /* "mirror_lib_v04.pyx":1568
 * def get_intersection(dir_cos, x, z, r, k, offset):
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]             # <<<<<<<<<<<<<<
 * 
 *   b = z - a * x
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_dir_cos, __pyx_tuple__70); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_dir_cos, __pyx_tuple__71); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1570
 *   a = dir_cos[2,:]/dir_cos[0,:]
 * 
 *   b = z - a * x             # <<<<<<<<<<<<<<
 * 
 *   cte1 = -2. * r
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_a, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_z, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_b = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1572
 *   b = z - a * x
 * 
 *   cte1 = -2. * r             # <<<<<<<<<<<<<<
 *   cte2 = 1. + k
 * 
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_neg_2_, __pyx_v_r); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_cte1 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1573
 * 
 *   cte1 = -2. * r
 *   cte2 = 1. + k             # <<<<<<<<<<<<<<
 * 
 *   ctea = -cte1 * offset + cte2 * offset**2
 */
  __pyx_t_2 = __Pyx_PyFloat_AddCObj(__pyx_float_1_, __pyx_v_k, 1., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_cte2 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1575
 *   cte2 = 1. + k
 * 
 *   ctea = -cte1 * offset + cte2 * offset**2             # <<<<<<<<<<<<<<
 *   cteb = cte1 - 2. * cte2 * offset
 * 
 */
  __pyx_t_2 = PyNumber_Negative(__pyx_v_cte1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_v_offset); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Power(__pyx_v_offset, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_cte2, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ctea = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1576
 * 
 *   ctea = -cte1 * offset + cte2 * offset**2
 *   cteb = cte1 - 2. * cte2 * offset             # <<<<<<<<<<<<<<
 * 
 *   cteq = 1. + cte2 * a**2
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_cte2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_v_offset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_cte1, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cteb = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1578
 *   cteb = cte1 - 2. * cte2 * offset
 * 
 *   cteq = 1. + cte2 * a**2             # <<<<<<<<<<<<<<
 *   ctel = 2. * cte2 * a * b + cteb * a
 *   ctei = cte2 * b**2 + cteb * b + ctea
 */
  __pyx_t_2 = PyNumber_Power(__pyx_v_a, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_cte2, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyFloat_AddCObj(__pyx_float_1_, __pyx_t_1, 1., 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cteq = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1579
 * 
 *   cteq = 1. + cte2 * a**2
 *   ctel = 2. * cte2 * a * b + cteb * a             # <<<<<<<<<<<<<<
 *   ctei = cte2 * b**2 + cteb * b + ctea
 * 
 */
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_cte2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_v_a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_b); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_cteb, __pyx_v_a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ctel = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1580
 *   cteq = 1. + cte2 * a**2
 *   ctel = 2. * cte2 * a * b + cteb * a
 *   ctei = cte2 * b**2 + cteb * b + ctea             # <<<<<<<<<<<<<<
 * 
 *   xs2 = np.sqrt(ctel**2-4.*cteq*ctei)
 */
  __pyx_t_3 = PyNumber_Power(__pyx_v_b, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_cte2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_cteb, __pyx_v_b); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_ctea); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_ctei = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1582
 *   ctei = cte2 * b**2 + cteb * b + ctea
 * 
 *   xs2 = np.sqrt(ctel**2-4.*cteq*ctei)             # <<<<<<<<<<<<<<
 *   xs1 = (-ctel + xs2) / (2. * cteq)
 *   xs2 = (-ctel - xs2) / (2. * cteq)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Power(__pyx_v_ctel, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyNumber_Multiply(__pyx_float_4_, __pyx_v_cteq); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_4, __pyx_v_ctei); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_xs2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1583
 * 
 *   xs2 = np.sqrt(ctel**2-4.*cteq*ctei)
 *   xs1 = (-ctel + xs2) / (2. * cteq)             # <<<<<<<<<<<<<<
 *   xs2 = (-ctel - xs2) / (2. * cteq)
 * 
 */
  __pyx_t_3 = PyNumber_Negative(__pyx_v_ctel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_v_xs2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_cteq); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_xs1 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "mirror_lib_v04.pyx":1584
 *   xs2 = np.sqrt(ctel**2-4.*cteq*ctei)
 *   xs1 = (-ctel + xs2) / (2. * cteq)
 *   xs2 = (-ctel - xs2) / (2. * cteq)             # <<<<<<<<<<<<<<
 * 
 *   dir_cos_n1, zs1 = new2_get_gcurv(xs1,k=k,r=r, ind=offset,norm=True)
 */
  __pyx_t_4 = PyNumber_Negative(__pyx_v_ctel); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_v_xs2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_cteq); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF_SET(__pyx_v_xs2, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1586
 *   xs2 = (-ctel - xs2) / (2. * cteq)
 * 
 *   dir_cos_n1, zs1 = new2_get_gcurv(xs1,k=k,r=r, ind=offset,norm=True)             # <<<<<<<<<<<<<<
 *   dir_cos_n2, zs2 = new2_get_gcurv(xs2,k=k,r=r, ind=offset, norm=True)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_new2_get_gcurv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_xs1);
  __Pyx_GIVEREF(__pyx_v_xs1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_xs1);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_k, __pyx_v_k) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_r, __pyx_v_r) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_ind, __pyx_v_offset) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_norm, Py_True) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
    PyObject* sequence = __pyx_t_5;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1586, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    #else
    __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_1 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = Py_TYPE(__pyx_t_1)->tp_iternext;
    index = 0; __pyx_t_3 = __pyx_t_6(__pyx_t_1); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    index = 1; __pyx_t_4 = __pyx_t_6(__pyx_t_1); if (unlikely(!__pyx_t_4)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_1), 2) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1586, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dir_cos_n1 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_zs1 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "mirror_lib_v04.pyx":1587
 * 
 *   dir_cos_n1, zs1 = new2_get_gcurv(xs1,k=k,r=r, ind=offset,norm=True)
 *   dir_cos_n2, zs2 = new2_get_gcurv(xs2,k=k,r=r, ind=offset, norm=True)             # <<<<<<<<<<<<<<
 * 
 *   x = xs1 * 1.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_new2_get_gcurv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_xs2);
  __Pyx_GIVEREF(__pyx_v_xs2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_xs2);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_k, __pyx_v_k) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_r, __pyx_v_r) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_ind, __pyx_v_offset) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_norm, Py_True) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1587, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    #else
    __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
    index = 0; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    index = 1; __pyx_t_4 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L6_unpacking_done;
    __pyx_L5_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1587, __pyx_L1_error)
    __pyx_L6_unpacking_done:;
  }
  __pyx_v_dir_cos_n2 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_zs2 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "mirror_lib_v04.pyx":1589
 *   dir_cos_n2, zs2 = new2_get_gcurv(xs2,k=k,r=r, ind=offset, norm=True)
 * 
 *   x = xs1 * 1.             # <<<<<<<<<<<<<<
 *   z = zs1 * 1.
 *   dir_cos = dir_cos_n1 * 1.
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_xs1, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1590
 * 
 *   x = xs1 * 1.
 *   z = zs1 * 1.             # <<<<<<<<<<<<<<
 *   dir_cos = dir_cos_n1 * 1.
 * 
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_zs1, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_z, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1591
 *   x = xs1 * 1.
 *   z = zs1 * 1.
 *   dir_cos = dir_cos_n1 * 1.             # <<<<<<<<<<<<<<
 * 
 *   adiff1 = np.abs(zs1-offset)
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_dir_cos_n1, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_dir_cos, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1593
 *   dir_cos = dir_cos_n1 * 1.
 * 
 *   adiff1 = np.abs(zs1-offset)             # <<<<<<<<<<<<<<
 *   adiff2 = np.abs(zs2-offset)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_abs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Subtract(__pyx_v_zs1, __pyx_v_offset); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_adiff1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1594
 * 
 *   adiff1 = np.abs(zs1-offset)
 *   adiff2 = np.abs(zs2-offset)             # <<<<<<<<<<<<<<
 * 
 *   ww = np.where(adiff2<adiff1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_abs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Subtract(__pyx_v_zs2, __pyx_v_offset); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_adiff2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1596
 *   adiff2 = np.abs(zs2-offset)
 * 
 *   ww = np.where(adiff2<adiff1)             # <<<<<<<<<<<<<<
 * 
 *   x[ww] = xs2[ww] * 1.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_where); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_adiff2, __pyx_v_adiff1, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_ww = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1598
 *   ww = np.where(adiff2<adiff1)
 * 
 *   x[ww] = xs2[ww] * 1.             # <<<<<<<<<<<<<<
 *   z[ww] = zs2[ww] * 1.
 *   dir_cos[:,ww] = dir_cos_n2[:,ww] * 1.
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_xs2, __pyx_v_ww); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_x, __pyx_v_ww, __pyx_t_3) < 0)) __PYX_ERR(0, 1598, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1599
 * 
 *   x[ww] = xs2[ww] * 1.
 *   z[ww] = zs2[ww] * 1.             # <<<<<<<<<<<<<<
 *   dir_cos[:,ww] = dir_cos_n2[:,ww] * 1.
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_zs2, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_z, __pyx_v_ww, __pyx_t_1) < 0)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1600
 *   x[ww] = xs2[ww] * 1.
 *   z[ww] = zs2[ww] * 1.
 *   dir_cos[:,ww] = dir_cos_n2[:,ww] * 1.             # <<<<<<<<<<<<<<
 * 
 *   return x,z,dir_cos
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_slice__30);
  __Pyx_INCREF(__pyx_v_ww);
  __Pyx_GIVEREF(__pyx_v_ww);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_ww);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_dir_cos_n2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_slice__30);
  __Pyx_INCREF(__pyx_v_ww);
  __Pyx_GIVEREF(__pyx_v_ww);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_ww);
  if (unlikely(PyObject_SetItem(__pyx_v_dir_cos, __pyx_t_3, __pyx_t_1) < 0)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1602
 *   dir_cos[:,ww] = dir_cos_n2[:,ww] * 1.
 * 
 *   return x,z,dir_cos             # <<<<<<<<<<<<<<
 * 
 * def rotate_2d(vec, ang):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_z);
  __Pyx_GIVEREF(__pyx_v_z);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_z);
  __Pyx_INCREF(__pyx_v_dir_cos);
  __Pyx_GIVEREF(__pyx_v_dir_cos);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_dir_cos);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1566
 *   return xf
 * 
 * def get_intersection(dir_cos, x, z, r, k, offset):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_intersection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_cte1);
  __Pyx_XDECREF(__pyx_v_cte2);
  __Pyx_XDECREF(__pyx_v_ctea);
  __Pyx_XDECREF(__pyx_v_cteb);
  __Pyx_XDECREF(__pyx_v_cteq);
  __Pyx_XDECREF(__pyx_v_ctel);
  __Pyx_XDECREF(__pyx_v_ctei);
  __Pyx_XDECREF(__pyx_v_xs2);
  __Pyx_XDECREF(__pyx_v_xs1);
  __Pyx_XDECREF(__pyx_v_dir_cos_n1);
  __Pyx_XDECREF(__pyx_v_zs1);
  __Pyx_XDECREF(__pyx_v_dir_cos_n2);
  __Pyx_XDECREF(__pyx_v_zs2);
  __Pyx_XDECREF(__pyx_v_adiff1);
  __Pyx_XDECREF(__pyx_v_adiff2);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_dir_cos);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_z);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1604
 *   return x,z,dir_cos
 * 
 * def rotate_2d(vec, ang):             # <<<<<<<<<<<<<<
 * 
 *   cs = np.cos(ang)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_17rotate_2d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_17rotate_2d = {"rotate_2d", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_17rotate_2d, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_17rotate_2d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_vec = 0;
  PyObject *__pyx_v_ang = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate_2d (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vec,&__pyx_n_s_ang,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ang)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rotate_2d", 1, 2, 2, 1); __PYX_ERR(0, 1604, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rotate_2d") < 0)) __PYX_ERR(0, 1604, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_vec = values[0];
    __pyx_v_ang = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate_2d", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1604, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.rotate_2d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_16rotate_2d(__pyx_self, __pyx_v_vec, __pyx_v_ang);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_16rotate_2d(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_vec, PyObject *__pyx_v_ang) {
  PyObject *__pyx_v_cs = NULL;
  PyObject *__pyx_v_sn = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("rotate_2d", 0);

  /* "mirror_lib_v04.pyx":1606
 * def rotate_2d(vec, ang):
 * 
 *   cs = np.cos(ang)             # <<<<<<<<<<<<<<
 *   sn = np.sin(ang)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_ang) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_ang);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_cs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1607
 * 
 *   cs = np.cos(ang)
 *   sn = np.sin(ang)             # <<<<<<<<<<<<<<
 * 
 *   res = vec * 0.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_ang) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_ang);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_sn = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1609
 *   sn = np.sin(ang)
 * 
 *   res = vec * 0.             # <<<<<<<<<<<<<<
 *   res[0,:]=vec[0,:]*cs+vec[2,:]*sn
 *   res[2,:]=vec[2,:]*cs-vec[0,:]*sn
 */
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_vec, __pyx_float_0_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1610
 * 
 *   res = vec * 0.
 *   res[0,:]=vec[0,:]*cs+vec[2,:]*sn             # <<<<<<<<<<<<<<
 *   res[2,:]=vec[2,:]*cs-vec[0,:]*sn
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_vec, __pyx_tuple__71); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_cs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_vec, __pyx_tuple__70); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_v_sn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_res, __pyx_tuple__71, __pyx_t_1) < 0)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1611
 *   res = vec * 0.
 *   res[0,:]=vec[0,:]*cs+vec[2,:]*sn
 *   res[2,:]=vec[2,:]*cs-vec[0,:]*sn             # <<<<<<<<<<<<<<
 * 
 *   return res
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_vec, __pyx_tuple__70); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_v_cs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_vec, __pyx_tuple__71); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_sn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_res, __pyx_tuple__70, __pyx_t_1) < 0)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1613
 *   res[2,:]=vec[2,:]*cs-vec[0,:]*sn
 * 
 *   return res             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1604
 *   return x,z,dir_cos
 * 
 * def rotate_2d(vec, ang):             # <<<<<<<<<<<<<<
 * 
 *   cs = np.cos(ang)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.rotate_2d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cs);
  __Pyx_XDECREF(__pyx_v_sn);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1616
 * 
 * 
 * def get_direction_cosines(x,y,z):             # <<<<<<<<<<<<<<
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_19get_direction_cosines(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_19get_direction_cosines = {"get_direction_cosines", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_19get_direction_cosines, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_19get_direction_cosines(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_direction_cosines (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_direction_cosines", 1, 3, 3, 1); __PYX_ERR(0, 1616, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_direction_cosines", 1, 3, 3, 2); __PYX_ERR(0, 1616, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_direction_cosines") < 0)) __PYX_ERR(0, 1616, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_direction_cosines", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1616, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_direction_cosines", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_18get_direction_cosines(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_18get_direction_cosines(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_v_dd = NULL;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_v_m = NULL;
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("get_direction_cosines", 0);

  /* "mirror_lib_v04.pyx":1618
 * def get_direction_cosines(x,y,z):
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)             # <<<<<<<<<<<<<<
 *   l = x / dd
 *   m = y / dd
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Power(__pyx_v_x, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyNumber_Power(__pyx_v_y, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyNumber_Add(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Power(__pyx_v_z, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_dd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1619
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 *   l = x / dd             # <<<<<<<<<<<<<<
 *   m = y / dd
 *   n = z / dd
 */
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_v_x, __pyx_v_dd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1620
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 *   l = x / dd
 *   m = y / dd             # <<<<<<<<<<<<<<
 *   n = z / dd
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_v_y, __pyx_v_dd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_m = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1621
 *   l = x / dd
 *   m = y / dd
 *   n = z / dd             # <<<<<<<<<<<<<<
 * 
 *   return np.array([l,m,n])
 */
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_v_z, __pyx_v_dd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_n = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1623
 *   n = z / dd
 * 
 *   return np.array([l,m,n])             # <<<<<<<<<<<<<<
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_l);
  __Pyx_GIVEREF(__pyx_v_l);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_l);
  __Pyx_INCREF(__pyx_v_m);
  __Pyx_GIVEREF(__pyx_v_m);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_v_m);
  __Pyx_INCREF(__pyx_v_n);
  __Pyx_GIVEREF(__pyx_v_n);
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_n);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1616
 * 
 * 
 * def get_direction_cosines(x,y,z):             # <<<<<<<<<<<<<<
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_direction_cosines", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dd);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_m);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1625
 *   return np.array([l,m,n])
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):             # <<<<<<<<<<<<<<
 *   #
 *   # Following: https://en.wikipedia.org/wiki/Conic_constant
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_21new2_get_gcurv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_21new2_get_gcurv = {"new2_get_gcurv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_21new2_get_gcurv, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_21new2_get_gcurv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_k = 0;
  PyObject *__pyx_v_r = 0;
  PyObject *__pyx_v_f = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_norm = 0;
  PyObject *__pyx_v_ind = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("new2_get_gcurv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_k,&__pyx_n_s_r,&__pyx_n_s_f,&__pyx_n_s_e,&__pyx_n_s_norm,&__pyx_n_s_ind,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    values[1] = ((PyObject *)__pyx_float_0_);
    values[2] = ((PyObject *)__pyx_float_0_);
    values[3] = ((PyObject *)__pyx_float_0_);
    values[4] = ((PyObject *)__pyx_float_0_);
    values[5] = ((PyObject *)Py_False);
    values[6] = ((PyObject *)__pyx_float_0_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_e);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_norm);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ind);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "new2_get_gcurv") < 0)) __PYX_ERR(0, 1625, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_k = values[1];
    __pyx_v_r = values[2];
    __pyx_v_f = values[3];
    __pyx_v_e = values[4];
    __pyx_v_norm = values[5];
    __pyx_v_ind = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("new2_get_gcurv", 0, 1, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1625, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.new2_get_gcurv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_20new2_get_gcurv(__pyx_self, __pyx_v_x, __pyx_v_k, __pyx_v_r, __pyx_v_f, __pyx_v_e, __pyx_v_norm, __pyx_v_ind);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1631
 *   # ... each variable.
 * 
 *   def get_conic_sols(ia,ib,ic):             # <<<<<<<<<<<<<<
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_14new2_get_gcurv_1get_conic_sols(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_14new2_get_gcurv_1get_conic_sols = {"get_conic_sols", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_14new2_get_gcurv_1get_conic_sols, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_14new2_get_gcurv_1get_conic_sols(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ia = 0;
  PyObject *__pyx_v_ib = 0;
  PyObject *__pyx_v_ic = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_conic_sols (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ia,&__pyx_n_s_ib,&__pyx_n_s_ic,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ia)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ib)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_conic_sols", 1, 3, 3, 1); __PYX_ERR(0, 1631, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_conic_sols", 1, 3, 3, 2); __PYX_ERR(0, 1631, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_conic_sols") < 0)) __PYX_ERR(0, 1631, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_ia = values[0];
    __pyx_v_ib = values[1];
    __pyx_v_ic = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_conic_sols", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1631, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.new2_get_gcurv.get_conic_sols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_14new2_get_gcurv_get_conic_sols(__pyx_self, __pyx_v_ia, __pyx_v_ib, __pyx_v_ic);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_14new2_get_gcurv_get_conic_sols(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ia, PyObject *__pyx_v_ib, PyObject *__pyx_v_ic) {
  PyObject *__pyx_v_isol1 = NULL;
  PyObject *__pyx_v_isol2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("get_conic_sols", 0);

  /* "mirror_lib_v04.pyx":1632
 * 
 *   def get_conic_sols(ia,ib,ic):
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)             # <<<<<<<<<<<<<<
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     return isol1, isol2
 */
  __pyx_t_1 = PyNumber_Negative(__pyx_v_ib); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Power(__pyx_v_ib, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Multiply(__pyx_float_4_, __pyx_v_ia); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_v_ic); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_ia); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_isol1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1633
 *   def get_conic_sols(ia,ib,ic):
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)             # <<<<<<<<<<<<<<
 *     return isol1, isol2
 * 
 */
  __pyx_t_1 = PyNumber_Negative(__pyx_v_ib); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Power(__pyx_v_ib, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyNumber_Multiply(__pyx_float_4_, __pyx_v_ia); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_6, __pyx_v_ic); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Subtract(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_ia); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_isol2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1634
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     return isol1, isol2             # <<<<<<<<<<<<<<
 * 
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_isol1);
  __Pyx_GIVEREF(__pyx_v_isol1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_isol1);
  __Pyx_INCREF(__pyx_v_isol2);
  __Pyx_GIVEREF(__pyx_v_isol2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_isol2);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1631
 *   # ... each variable.
 * 
 *   def get_conic_sols(ia,ib,ic):             # <<<<<<<<<<<<<<
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pymirrors.new2_get_gcurv.get_conic_sols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_isol1);
  __Pyx_XDECREF(__pyx_v_isol2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1625
 *   return np.array([l,m,n])
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):             # <<<<<<<<<<<<<<
 *   #
 *   # Following: https://en.wikipedia.org/wiki/Conic_constant
 */

static PyObject *__pyx_pf_9pymirrors_20new2_get_gcurv(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_k, PyObject *__pyx_v_r, PyObject *__pyx_v_f, PyObject *__pyx_v_e, PyObject *__pyx_v_norm, PyObject *__pyx_v_ind) {
  PyObject *__pyx_v_get_conic_sols = 0;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_n_x = NULL;
  PyObject *__pyx_v_n_y = NULL;
  PyObject *__pyx_v_sol = NULL;
  PyObject *__pyx_v_sol1 = NULL;
  PyObject *__pyx_v_sol2 = NULL;
  PyObject *__pyx_v_t1 = NULL;
  PyObject *__pyx_v_t2 = NULL;
  PyObject *__pyx_v_nsol = NULL;
  PyObject *__pyx_v_dir_cos = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("new2_get_gcurv", 0);
  __Pyx_INCREF(__pyx_v_k);
  __Pyx_INCREF(__pyx_v_r);

  /* "mirror_lib_v04.pyx":1631
 *   # ... each variable.
 * 
 *   def get_conic_sols(ia,ib,ic):             # <<<<<<<<<<<<<<
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_14new2_get_gcurv_1get_conic_sols, 0, __pyx_n_s_new2_get_gcurv_locals_get_conic, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__73)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_get_conic_sols = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1636
 *     return isol1, isol2
 * 
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):             # <<<<<<<<<<<<<<
 *     print('new2_get_gcurv requires either k/e and r/f')
 *     sys.exit()
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_k, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_e, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_And(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_r, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_f, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_And(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Or(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":1637
 * 
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):
 *     print('new2_get_gcurv requires either k/e and r/f')             # <<<<<<<<<<<<<<
 *     sys.exit()
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1638
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):
 *     print('new2_get_gcurv requires either k/e and r/f')
 *     sys.exit()             # <<<<<<<<<<<<<<
 * 
 *   if (k==0):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_exit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1636
 *     return isol1, isol2
 * 
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):             # <<<<<<<<<<<<<<
 *     print('new2_get_gcurv requires either k/e and r/f')
 *     sys.exit()
 */
  }

  /* "mirror_lib_v04.pyx":1640
 *     sys.exit()
 * 
 *   if (k==0):             # <<<<<<<<<<<<<<
 *     k = -e**2
 *   if (r==0):
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_k, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1640, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":1641
 * 
 *   if (k==0):
 *     k = -e**2             # <<<<<<<<<<<<<<
 *   if (r==0):
 *     r = 2. * f
 */
    __pyx_t_1 = PyNumber_Power(__pyx_v_e, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1640
 *     sys.exit()
 * 
 *   if (k==0):             # <<<<<<<<<<<<<<
 *     k = -e**2
 *   if (r==0):
 */
  }

  /* "mirror_lib_v04.pyx":1642
 *   if (k==0):
 *     k = -e**2
 *   if (r==0):             # <<<<<<<<<<<<<<
 *     r = 2. * f
 * 
 */
  __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_v_r, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1642, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":1643
 *     k = -e**2
 *   if (r==0):
 *     r = 2. * f             # <<<<<<<<<<<<<<
 * 
 *   b=-2.*r
 */
    __pyx_t_3 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1643, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_r, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1642
 *   if (k==0):
 *     k = -e**2
 *   if (r==0):             # <<<<<<<<<<<<<<
 *     r = 2. * f
 * 
 */
  }

  /* "mirror_lib_v04.pyx":1645
 *     r = 2. * f
 * 
 *   b=-2.*r             # <<<<<<<<<<<<<<
 *   a=k+1.
 * 
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_neg_2_, __pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_b = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1646
 * 
 *   b=-2.*r
 *   a=k+1.             # <<<<<<<<<<<<<<
 * 
 *   #
 */
  __pyx_t_3 = __Pyx_PyFloat_AddObjC(__pyx_v_k, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_a = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1652
 *   #cte = b * ind + a * ind**2
 * 
 *   c=x**2#+y**2             # <<<<<<<<<<<<<<
 * 
 *   n_x = 2.e0 * x
 */
  __pyx_t_3 = PyNumber_Power(__pyx_v_x, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_c = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1654
 *   c=x**2#+y**2
 * 
 *   n_x = 2.e0 * x             # <<<<<<<<<<<<<<
 *   n_y = 0.e0 * x # We rotate the system so that only x and z are relevant
 * 
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_2_e0, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_n_x = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1655
 * 
 *   n_x = 2.e0 * x
 *   n_y = 0.e0 * x # We rotate the system so that only x and z are relevant             # <<<<<<<<<<<<<<
 * 
 *   if (k==-1):
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_0_e0, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_n_y = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":1657
 *   n_y = 0.e0 * x # We rotate the system so that only x and z are relevant
 * 
 *   if (k==-1):             # <<<<<<<<<<<<<<
 * 
 *     sol = -c/b
 */
  __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_v_k, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":1659
 *   if (k==-1):
 * 
 *     sol = -c/b             # <<<<<<<<<<<<<<
 * 
 *   else:
 */
    __pyx_t_3 = PyNumber_Negative(__pyx_v_c); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_v_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sol = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1657
 *   n_y = 0.e0 * x # We rotate the system so that only x and z are relevant
 * 
 *   if (k==-1):             # <<<<<<<<<<<<<<
 * 
 *     sol = -c/b
 */
    goto __pyx_L6;
  }

  /* "mirror_lib_v04.pyx":1663
 *   else:
 * 
 *     sol1, sol2 = get_conic_sols(a,b,c)             # <<<<<<<<<<<<<<
 * 
 *     t1, t2 = get_conic_sols(a,b,0)#-cte)
 */
  /*else*/ {
    __pyx_t_1 = __pyx_pf_9pymirrors_14new2_get_gcurv_get_conic_sols(__pyx_v_get_conic_sols, __pyx_v_a, __pyx_v_b, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1663, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1663, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_6(__pyx_t_2); if (unlikely(!__pyx_t_3)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_4 = __pyx_t_6(__pyx_t_2); if (unlikely(!__pyx_t_4)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_2), 2) < 0) __PYX_ERR(0, 1663, __pyx_L1_error)
      __pyx_t_6 = NULL;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L8_unpacking_done;
      __pyx_L7_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1663, __pyx_L1_error)
      __pyx_L8_unpacking_done:;
    }
    __pyx_v_sol1 = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_v_sol2 = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1665
 *     sol1, sol2 = get_conic_sols(a,b,c)
 * 
 *     t1, t2 = get_conic_sols(a,b,0)#-cte)             # <<<<<<<<<<<<<<
 *     #
 *     # Assuming a mirror for a telescope is given by the solution closest to the...
 */
    __pyx_t_1 = __pyx_pf_9pymirrors_14new2_get_gcurv_get_conic_sols(__pyx_v_get_conic_sols, __pyx_v_a, __pyx_v_b, __pyx_int_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1665, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1665, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_6(__pyx_t_2); if (unlikely(!__pyx_t_4)) goto __pyx_L9_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_2); if (unlikely(!__pyx_t_3)) goto __pyx_L9_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_2), 2) < 0) __PYX_ERR(0, 1665, __pyx_L1_error)
      __pyx_t_6 = NULL;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L10_unpacking_done;
      __pyx_L9_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1665, __pyx_L1_error)
      __pyx_L10_unpacking_done:;
    }
    __pyx_v_t1 = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_t2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1669
 *     # Assuming a mirror for a telescope is given by the solution closest to the...
 *     # ... optical axis, we can easily solve the ambiguity:
 *     if (abs(t1)<abs(t2)):             # <<<<<<<<<<<<<<
 *       sol = sol1 * 1.
 *     else:
 */
    __pyx_t_1 = __Pyx_PyNumber_Absolute(__pyx_v_t1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyNumber_Absolute(__pyx_v_t2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_5) {

      /* "mirror_lib_v04.pyx":1670
 *     # ... optical axis, we can easily solve the ambiguity:
 *     if (abs(t1)<abs(t2)):
 *       sol = sol1 * 1.             # <<<<<<<<<<<<<<
 *     else:
 *       sol = sol2 * 1.
 */
      __pyx_t_4 = PyNumber_Multiply(__pyx_v_sol1, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1670, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_v_sol = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "mirror_lib_v04.pyx":1669
 *     # Assuming a mirror for a telescope is given by the solution closest to the...
 *     # ... optical axis, we can easily solve the ambiguity:
 *     if (abs(t1)<abs(t2)):             # <<<<<<<<<<<<<<
 *       sol = sol1 * 1.
 *     else:
 */
      goto __pyx_L11;
    }

    /* "mirror_lib_v04.pyx":1672
 *       sol = sol1 * 1.
 *     else:
 *       sol = sol2 * 1.             # <<<<<<<<<<<<<<
 *     nsol = b + 2 * a * sol
 *     sol = sol + ind
 */
    /*else*/ {
      __pyx_t_4 = PyNumber_Multiply(__pyx_v_sol2, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1672, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_v_sol = __pyx_t_4;
      __pyx_t_4 = 0;
    }
    __pyx_L11:;

    /* "mirror_lib_v04.pyx":1673
 *     else:
 *       sol = sol2 * 1.
 *     nsol = b + 2 * a * sol             # <<<<<<<<<<<<<<
 *     sol = sol + ind
 * 
 */
    __pyx_t_4 = PyNumber_Multiply(__pyx_int_2, __pyx_v_a); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1673, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_v_sol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1673, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_v_b, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1673, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_nsol = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1674
 *       sol = sol2 * 1.
 *     nsol = b + 2 * a * sol
 *     sol = sol + ind             # <<<<<<<<<<<<<<
 * 
 *   if (norm==True):
 */
    __pyx_t_4 = PyNumber_Add(__pyx_v_sol, __pyx_v_ind); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF_SET(__pyx_v_sol, __pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L6:;

  /* "mirror_lib_v04.pyx":1676
 *     sol = sol + ind
 * 
 *   if (norm==True):             # <<<<<<<<<<<<<<
 *     dir_cos = get_direction_cosines(n_x,n_y,nsol)
 * 
 */
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_norm, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1676, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1676, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_5) {

    /* "mirror_lib_v04.pyx":1677
 * 
 *   if (norm==True):
 *     dir_cos = get_direction_cosines(n_x,n_y,nsol)             # <<<<<<<<<<<<<<
 * 
 *     return dir_cos, sol
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_direction_cosines); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(!__pyx_v_nsol)) { __Pyx_RaiseUnboundLocalError("nsol"); __PYX_ERR(0, 1677, __pyx_L1_error) }
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_n_x, __pyx_v_n_y, __pyx_v_nsol};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1677, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_n_x, __pyx_v_n_y, __pyx_v_nsol};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1677, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1677, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_v_n_x);
      __Pyx_GIVEREF(__pyx_v_n_x);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_7, __pyx_v_n_x);
      __Pyx_INCREF(__pyx_v_n_y);
      __Pyx_GIVEREF(__pyx_v_n_y);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_7, __pyx_v_n_y);
      __Pyx_INCREF(__pyx_v_nsol);
      __Pyx_GIVEREF(__pyx_v_nsol);
      PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_7, __pyx_v_nsol);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1677, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_dir_cos = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":1679
 *     dir_cos = get_direction_cosines(n_x,n_y,nsol)
 * 
 *     return dir_cos, sol             # <<<<<<<<<<<<<<
 * 
 *   return np.array([n_x, n_y, nsol]), sol
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_dir_cos);
    __Pyx_GIVEREF(__pyx_v_dir_cos);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_dir_cos);
    __Pyx_INCREF(__pyx_v_sol);
    __Pyx_GIVEREF(__pyx_v_sol);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_sol);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "mirror_lib_v04.pyx":1676
 *     sol = sol + ind
 * 
 *   if (norm==True):             # <<<<<<<<<<<<<<
 *     dir_cos = get_direction_cosines(n_x,n_y,nsol)
 * 
 */
  }

  /* "mirror_lib_v04.pyx":1681
 *     return dir_cos, sol
 * 
 *   return np.array([n_x, n_y, nsol]), sol             # <<<<<<<<<<<<<<
 * 
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_nsol)) { __Pyx_RaiseUnboundLocalError("nsol"); __PYX_ERR(0, 1681, __pyx_L1_error) }
  __pyx_t_3 = PyList_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_n_x);
  __Pyx_GIVEREF(__pyx_v_n_x);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_n_x);
  __Pyx_INCREF(__pyx_v_n_y);
  __Pyx_GIVEREF(__pyx_v_n_y);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_v_n_y);
  __Pyx_INCREF(__pyx_v_nsol);
  __Pyx_GIVEREF(__pyx_v_nsol);
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_nsol);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_sol);
  __Pyx_GIVEREF(__pyx_v_sol);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_sol);
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1625
 *   return np.array([l,m,n])
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):             # <<<<<<<<<<<<<<
 *   #
 *   # Following: https://en.wikipedia.org/wiki/Conic_constant
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pymirrors.new2_get_gcurv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_get_conic_sols);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_n_x);
  __Pyx_XDECREF(__pyx_v_n_y);
  __Pyx_XDECREF(__pyx_v_sol);
  __Pyx_XDECREF(__pyx_v_sol1);
  __Pyx_XDECREF(__pyx_v_sol2);
  __Pyx_XDECREF(__pyx_v_t1);
  __Pyx_XDECREF(__pyx_v_t2);
  __Pyx_XDECREF(__pyx_v_nsol);
  __Pyx_XDECREF(__pyx_v_dir_cos);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1687
 * # ---------------------------------------------------------------------
 * #
 * def get_primary_rays(layout, telescope):             # <<<<<<<<<<<<<<
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_23get_primary_rays(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_23get_primary_rays = {"get_primary_rays", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_23get_primary_rays, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_23get_primary_rays(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_layout = 0;
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_primary_rays (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_layout,&__pyx_n_s_telescope,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_layout)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_primary_rays", 1, 2, 2, 1); __PYX_ERR(0, 1687, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_primary_rays") < 0)) __PYX_ERR(0, 1687, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_layout = values[0];
    __pyx_v_telescope = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_primary_rays", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1687, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_primary_rays", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_22get_primary_rays(__pyx_self, __pyx_v_layout, __pyx_v_telescope);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_22get_primary_rays(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_layout, PyObject *__pyx_v_telescope) {
  double __pyx_v_factor;
  PyObject *__pyx_v_azi_val = NULL;
  PyObject *__pyx_v_rad_to_azi_rat = NULL;
  PyObject *__pyx_v_irads = NULL;
  PyObject *__pyx_v_drads = NULL;
  double __pyx_v_val;
  PyObject *__pyx_v_iangs = NULL;
  PyObject *__pyx_v_dangs = NULL;
  PyObject *__pyx_v_ixs = NULL;
  PyObject *__pyx_v_iys = NULL;
  PyObject *__pyx_v_d1s = NULL;
  PyObject *__pyx_v_d2s = NULL;
  PyObject *__pyx_v_x1d = NULL;
  PyObject *__pyx_v_y1d = NULL;
  PyObject *__pyx_v_rad = NULL;
  PyObject *__pyx_v_area = NULL;
  PyObject *__pyx_v_ang_ref = NULL;
  PyObject *__pyx_v_angs = NULL;
  PyObject *__pyx_v_nds = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_totn = NULL;
  PyObject *__pyx_v_offset = NULL;
  PyObject *__pyx_v_itn = NULL;
  PyObject *__pyx_v_itnum = NULL;
  PyObject *__pyx_v_ix1s = NULL;
  PyObject *__pyx_v_iy1s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  __Pyx_RefNannySetupContext("get_primary_rays", 0);

  /* "mirror_lib_v04.pyx":1689
 * def get_primary_rays(layout, telescope):
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):             # <<<<<<<<<<<<<<
 *      print('')
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_layout, __pyx_n_u_polar, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_layout, __pyx_n_u_cartesian, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __pyx_t_3 = PyNumber_And(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1690
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 *      print('')             # <<<<<<<<<<<<<<
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 *      print('\t Allowed options are: "polar", "cartesian"')
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1691
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 *      print('')
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))             # <<<<<<<<<<<<<<
 *      print('\t Allowed options are: "polar", "cartesian"')
 *      print('')
 */
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = 0;
    __pyx_t_6 = 127;
    __Pyx_INCREF(__pyx_kp_u_Unknown_layout);
    __pyx_t_5 += 18;
    __Pyx_GIVEREF(__pyx_kp_u_Unknown_layout);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Unknown_layout);
    __pyx_t_2 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_v_layout), __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_kp_u_for_ray_tracing);
    __pyx_t_5 += 17;
    __Pyx_GIVEREF(__pyx_kp_u_for_ray_tracing);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_for_ray_tracing);
    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_3, 3, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1692
 *      print('')
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 *      print('\t Allowed options are: "polar", "cartesian"')             # <<<<<<<<<<<<<<
 *      print('')
 *      exit(1)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__75, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1693
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 *      print('\t Allowed options are: "polar", "cartesian"')
 *      print('')             # <<<<<<<<<<<<<<
 *      exit(1)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1694
 *      print('\t Allowed options are: "polar", "cartesian"')
 *      print('')
 *      exit(1)             # <<<<<<<<<<<<<<
 * 
 *   factor=1.001
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_exit, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1689
 * def get_primary_rays(layout, telescope):
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):             # <<<<<<<<<<<<<<
 *      print('')
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 */
  }

  /* "mirror_lib_v04.pyx":1696
 *      exit(1)
 * 
 *   factor=1.001             # <<<<<<<<<<<<<<
 *   # Polar:
 *   if (layout=='polar'):
 */
  __pyx_v_factor = 1.001;

  /* "mirror_lib_v04.pyx":1698
 *   factor=1.001
 *   # Polar:
 *   if (layout=='polar'):             # <<<<<<<<<<<<<<
 *     # set rays to be considered in a polar layout:
 *     azi_val = 24 #24
 */
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_v_layout, __pyx_n_u_polar, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1698, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1700
 *   if (layout=='polar'):
 *     # set rays to be considered in a polar layout:
 *     azi_val = 24 #24             # <<<<<<<<<<<<<<
 *     rad_to_azi_rat = 24
 *     irads = np.linspace(0., telescope.dim_x * factor, np.max([3,telescope.num//rad_to_azi_rat]), dtype=np.float64)#[1:]
 */
    __Pyx_INCREF(__pyx_int_24);
    __pyx_v_azi_val = __pyx_int_24;

    /* "mirror_lib_v04.pyx":1701
 *     # set rays to be considered in a polar layout:
 *     azi_val = 24 #24
 *     rad_to_azi_rat = 24             # <<<<<<<<<<<<<<
 *     irads = np.linspace(0., telescope.dim_x * factor, np.max([3,telescope.num//rad_to_azi_rat]), dtype=np.float64)#[1:]
 *     irads = np.linspace(0., telescope.dim_x * factor, (telescope.num//2)*2+1, dtype=np.float64)
 */
    __Pyx_INCREF(__pyx_int_24);
    __pyx_v_rad_to_azi_rat = __pyx_int_24;

    /* "mirror_lib_v04.pyx":1702
 *     azi_val = 24 #24
 *     rad_to_azi_rat = 24
 *     irads = np.linspace(0., telescope.dim_x * factor, np.max([3,telescope.num//rad_to_azi_rat]), dtype=np.float64)#[1:]             # <<<<<<<<<<<<<<
 *     irads = np.linspace(0., telescope.dim_x * factor, (telescope.num//2)*2+1, dtype=np.float64)
 *     drads = irads[1:]-irads[0:-1]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_max); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = PyNumber_FloorDivide(__pyx_t_3, __pyx_v_rad_to_azi_rat); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_t_9);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_9);
    __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_float_0_);
    __Pyx_GIVEREF(__pyx_float_0_);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_float_0_);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_1);
    __pyx_t_7 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_float64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_3) < 0) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_irads = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1703
 *     rad_to_azi_rat = 24
 *     irads = np.linspace(0., telescope.dim_x * factor, np.max([3,telescope.num//rad_to_azi_rat]), dtype=np.float64)#[1:]
 *     irads = np.linspace(0., telescope.dim_x * factor, (telescope.num//2)*2+1, dtype=np.float64)             # <<<<<<<<<<<<<<
 *     drads = irads[1:]-irads[0:-1]
 *     irads = irads[1:] - drads / 2.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyInt_FloorDivideObjC(__pyx_t_8, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_3, __pyx_int_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_float_0_);
    __Pyx_GIVEREF(__pyx_float_0_);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_float_0_);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_3);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_float64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_irads, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1704
 *     irads = np.linspace(0., telescope.dim_x * factor, np.max([3,telescope.num//rad_to_azi_rat]), dtype=np.float64)#[1:]
 *     irads = np.linspace(0., telescope.dim_x * factor, (telescope.num//2)*2+1, dtype=np.float64)
 *     drads = irads[1:]-irads[0:-1]             # <<<<<<<<<<<<<<
 *     irads = irads[1:] - drads / 2.
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetSlice(__pyx_v_irads, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_irads, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_drads = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1705
 *     irads = np.linspace(0., telescope.dim_x * factor, (telescope.num//2)*2+1, dtype=np.float64)
 *     drads = irads[1:]-irads[0:-1]
 *     irads = irads[1:] - drads / 2.             # <<<<<<<<<<<<<<
 * 
 *     val = 0.#0.#14.#.0
 */
    __pyx_t_8 = __Pyx_PyObject_GetSlice(__pyx_v_irads, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_drads, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyNumber_Subtract(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_irads, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1707
 *     irads = irads[1:] - drads / 2.
 * 
 *     val = 0.#0.#14.#.0             # <<<<<<<<<<<<<<
 * ####
 * ####    from pdb import set_trace as stop
 */
    __pyx_v_val = 0.;

    /* "mirror_lib_v04.pyx":1712
 * ####    stop()
 * 
 *     iangs = (np.linspace(0.+val, 360.+val, np.max([(rad_to_azi_rat*telescope.num)//azi_val,1])*azi_val+1, dtype=np.float64)) / 180. * np.pi#[0:-1]             # <<<<<<<<<<<<<<
 *     iangs = np.linspace(0.+val, 360.+val, (telescope.num//2)*2+1, dtype=np.float64) / 180. * np.pi
 *     dangs = iangs[1:]-iangs[0:-1]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_linspace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble((0. + __pyx_v_val)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = PyFloat_FromDouble((360. + __pyx_v_val)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_max); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = PyNumber_Multiply(__pyx_v_rad_to_azi_rat, __pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_FloorDivide(__pyx_t_10, __pyx_v_azi_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_2);
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_GIVEREF(__pyx_int_1);
    PyList_SET_ITEM(__pyx_t_10, 1, __pyx_int_1);
    __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_2, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_1, __pyx_v_azi_val); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_9, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_1);
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_float64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_7, __pyx_float_180_, 180., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_pi); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_iangs = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1713
 * 
 *     iangs = (np.linspace(0.+val, 360.+val, np.max([(rad_to_azi_rat*telescope.num)//azi_val,1])*azi_val+1, dtype=np.float64)) / 180. * np.pi#[0:-1]
 *     iangs = np.linspace(0.+val, 360.+val, (telescope.num//2)*2+1, dtype=np.float64) / 180. * np.pi             # <<<<<<<<<<<<<<
 *     dangs = iangs[1:]-iangs[0:-1]
 *     iangs = iangs[1:] - dangs / 2.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_linspace); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble((0. + __pyx_v_val)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = PyFloat_FromDouble((360. + __pyx_v_val)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyInt_FloorDivideObjC(__pyx_t_3, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_8, __pyx_int_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_8);
    __pyx_t_7 = 0;
    __pyx_t_1 = 0;
    __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_7, __pyx_float_180_, 180., 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_iangs, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1714
 *     iangs = (np.linspace(0.+val, 360.+val, np.max([(rad_to_azi_rat*telescope.num)//azi_val,1])*azi_val+1, dtype=np.float64)) / 180. * np.pi#[0:-1]
 *     iangs = np.linspace(0.+val, 360.+val, (telescope.num//2)*2+1, dtype=np.float64) / 180. * np.pi
 *     dangs = iangs[1:]-iangs[0:-1]             # <<<<<<<<<<<<<<
 *     iangs = iangs[1:] - dangs / 2.
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_dangs = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1715
 *     iangs = np.linspace(0.+val, 360.+val, (telescope.num//2)*2+1, dtype=np.float64) / 180. * np.pi
 *     dangs = iangs[1:]-iangs[0:-1]
 *     iangs = iangs[1:] - dangs / 2.             # <<<<<<<<<<<<<<
 * 
 *     print(np.min(iangs))
 */
    __pyx_t_8 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_dangs, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyNumber_Subtract(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_iangs, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1717
 *     iangs = iangs[1:] - dangs / 2.
 * 
 *     print(np.min(iangs))             # <<<<<<<<<<<<<<
 * 
 *     # Transform to x and y coordinates:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1717, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_min); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1717, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_v_iangs) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_iangs);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1717, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1717, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1723
 *     #ixs = irads[:,None] * np.sin(iangs)[None,:]
 *     #iys = irads[:,None] * np.cos(iangs)[None,:]
 *     ixs = irads[:,None] * np.cos(iangs)[None,:]             # <<<<<<<<<<<<<<
 *     iys = irads[:,None] * np.sin(iangs)[None,:]
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_irads, __pyx_tuple__43); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_3, __pyx_v_iangs) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_iangs);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_t_7, __pyx_tuple__44); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_ixs = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1724
 *     #iys = irads[:,None] * np.cos(iangs)[None,:]
 *     ixs = irads[:,None] * np.cos(iangs)[None,:]
 *     iys = irads[:,None] * np.sin(iangs)[None,:]             # <<<<<<<<<<<<<<
 * 
 *     d1s = drads.mean()
 */
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_irads, __pyx_tuple__43); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_v_iangs) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_iangs);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_9, __pyx_tuple__44); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_iys = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1726
 *     iys = irads[:,None] * np.sin(iangs)[None,:]
 * 
 *     d1s = drads.mean()             # <<<<<<<<<<<<<<
 *     d2s = dangs.mean()
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_drads, __pyx_n_s_mean); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1726, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_d1s = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1727
 * 
 *     d1s = drads.mean()
 *     d2s = dangs.mean()             # <<<<<<<<<<<<<<
 * 
 *     x1d = ixs.flatten()
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_dangs, __pyx_n_s_mean); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1727, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1727, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_d2s = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1729
 *     d2s = dangs.mean()
 * 
 *     x1d = ixs.flatten()             # <<<<<<<<<<<<<<
 *     y1d = iys.flatten()
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ixs, __pyx_n_s_flatten); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1729, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1729, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_x1d = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1730
 * 
 *     x1d = ixs.flatten()
 *     y1d = iys.flatten()             # <<<<<<<<<<<<<<
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_iys, __pyx_n_s_flatten); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_y1d = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1732
 *     y1d = iys.flatten()
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)             # <<<<<<<<<<<<<<
 *     area = rad * d1s * d2s
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Power(__pyx_v_x1d, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyNumber_Power(__pyx_v_y1d, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_9 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_rad = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1733
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)
 *     area = rad * d1s * d2s             # <<<<<<<<<<<<<<
 * 
 * #
 */
    __pyx_t_9 = PyNumber_Multiply(__pyx_v_rad, __pyx_v_d1s); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1733, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_9, __pyx_v_d2s); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1733, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_area = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1743
 * #
 * 
 *     ang_ref = (2. * np.pi) / telescope.num             # <<<<<<<<<<<<<<
 *     angs = ang_ref * (irads.min() / irads)
 *     nds = np.round((2. * np.pi) / angs)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_pi); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_float_2_, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_ang_ref = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1744
 * 
 *     ang_ref = (2. * np.pi) / telescope.num
 *     angs = ang_ref * (irads.min() / irads)             # <<<<<<<<<<<<<<
 *     nds = np.round((2. * np.pi) / angs)
 * 
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_irads, __pyx_n_s_min); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_v_irads); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_ang_ref, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_angs = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1745
 *     ang_ref = (2. * np.pi) / telescope.num
 *     angs = ang_ref * (irads.min() / irads)
 *     nds = np.round((2. * np.pi) / angs)             # <<<<<<<<<<<<<<
 * 
 *     nds = np.round((nds / nds[nds.size//3]) * telescope.num)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_round); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_pi); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_float_2_, __pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_9, __pyx_v_angs); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_nds = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1747
 *     nds = np.round((2. * np.pi) / angs)
 * 
 *     nds = np.round((nds / nds[nds.size//3]) * telescope.num)             # <<<<<<<<<<<<<<
 * 
 *     ww = np.where(nds<telescope.num)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_round); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_nds, __pyx_n_s_size); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyInt_FloorDivideObjC(__pyx_t_7, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_nds, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyNumber_Divide(__pyx_v_nds, __pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF_SET(__pyx_v_nds, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1749
 *     nds = np.round((nds / nds[nds.size//3]) * telescope.num)
 * 
 *     ww = np.where(nds<telescope.num)             # <<<<<<<<<<<<<<
 *     nds[ww] = telescope.num
 *     nds = (nds//2) * 2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_where); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = PyObject_RichCompare(__pyx_v_nds, __pyx_t_8, Py_LT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1749, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_ww = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1750
 * 
 *     ww = np.where(nds<telescope.num)
 *     nds[ww] = telescope.num             # <<<<<<<<<<<<<<
 *     nds = (nds//2) * 2
 *     nds = (nds//azi_val) * azi_val
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyObject_SetItem(__pyx_v_nds, __pyx_v_ww, __pyx_t_1) < 0)) __PYX_ERR(0, 1750, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1751
 *     ww = np.where(nds<telescope.num)
 *     nds[ww] = telescope.num
 *     nds = (nds//2) * 2             # <<<<<<<<<<<<<<
 *     nds = (nds//azi_val) * azi_val
 *     angs = (2. * np.pi) / nds
 */
    __pyx_t_1 = __Pyx_PyInt_FloorDivideObjC(__pyx_v_nds, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_int_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_nds, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1752
 *     nds[ww] = telescope.num
 *     nds = (nds//2) * 2
 *     nds = (nds//azi_val) * azi_val             # <<<<<<<<<<<<<<
 *     angs = (2. * np.pi) / nds
 * 
 */
    __pyx_t_3 = PyNumber_FloorDivide(__pyx_v_nds, __pyx_v_azi_val); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_v_azi_val); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_nds, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1753
 *     nds = (nds//2) * 2
 *     nds = (nds//azi_val) * azi_val
 *     angs = (2. * np.pi) / nds             # <<<<<<<<<<<<<<
 * 
 *     totn = np.int32(nds.sum())
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_float_2_, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_v_nds); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_angs, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1755
 *     angs = (2. * np.pi) / nds
 * 
 *     totn = np.int32(nds.sum())             # <<<<<<<<<<<<<<
 *     print(nds.min(), telescope.num**2, totn)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_int32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_nds, __pyx_n_s_sum); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_totn = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1756
 * 
 *     totn = np.int32(nds.sum())
 *     print(nds.min(), telescope.num**2, totn)             # <<<<<<<<<<<<<<
 * 
 *     x1d = np.zeros((totn,), dtype="f8")
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_nds, __pyx_n_s_min); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = PyNumber_Power(__pyx_t_7, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_totn);
    __Pyx_GIVEREF(__pyx_v_totn);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_v_totn);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1758
 *     print(nds.min(), telescope.num**2, totn)
 * 
 *     x1d = np.zeros((totn,), dtype="f8")             # <<<<<<<<<<<<<<
 *     y1d = np.zeros((totn,), dtype="f8")
 *     rad = np.zeros((totn,), dtype="f8")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_totn);
    __Pyx_GIVEREF(__pyx_v_totn);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_totn);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 1758, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_x1d, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1759
 * 
 *     x1d = np.zeros((totn,), dtype="f8")
 *     y1d = np.zeros((totn,), dtype="f8")             # <<<<<<<<<<<<<<
 *     rad = np.zeros((totn,), dtype="f8")
 *     area = np.zeros((totn,), dtype="f8")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_totn);
    __Pyx_GIVEREF(__pyx_v_totn);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_totn);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 1759, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF_SET(__pyx_v_y1d, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1760
 *     x1d = np.zeros((totn,), dtype="f8")
 *     y1d = np.zeros((totn,), dtype="f8")
 *     rad = np.zeros((totn,), dtype="f8")             # <<<<<<<<<<<<<<
 *     area = np.zeros((totn,), dtype="f8")
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_totn);
    __Pyx_GIVEREF(__pyx_v_totn);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_totn);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 1760, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_rad, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1761
 *     y1d = np.zeros((totn,), dtype="f8")
 *     rad = np.zeros((totn,), dtype="f8")
 *     area = np.zeros((totn,), dtype="f8")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_totn);
    __Pyx_GIVEREF(__pyx_v_totn);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_totn);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 1761, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_area, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1764
 * 
 * 
 *     offset = 0             # <<<<<<<<<<<<<<
 *     for itn in range(irads.size):
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_offset = __pyx_int_0;

    /* "mirror_lib_v04.pyx":1765
 * 
 *     offset = 0
 *     for itn in range(irads.size):             # <<<<<<<<<<<<<<
 * 
 *       itnum = np.int32(nds[itn])
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_irads, __pyx_n_s_size); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_8 = __pyx_t_1; __Pyx_INCREF(__pyx_t_8); __pyx_t_5 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1765, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1765, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1765, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1765, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1765, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1765, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_11(__pyx_t_8);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1765, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_itn, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":1767
 *     for itn in range(irads.size):
 * 
 *       itnum = np.int32(nds[itn])             # <<<<<<<<<<<<<<
 * 
 *       iangs = np.linspace(0.+val, 360.+val, itnum+1, dtype=np.float64) / 180. * np.pi
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_int32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_nds, __pyx_v_itn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v_itnum, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":1769
 *       itnum = np.int32(nds[itn])
 * 
 *       iangs = np.linspace(0.+val, 360.+val, itnum+1, dtype=np.float64) / 180. * np.pi             # <<<<<<<<<<<<<<
 *       dangs = iangs[1:] - iangs[0:-1]
 *       iangs = iangs[1:] - dangs / 2.
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_linspace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyFloat_FromDouble((0. + __pyx_v_val)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyFloat_FromDouble((360. + __pyx_v_val)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyInt_AddObjC(__pyx_v_itnum, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_9);
      __pyx_t_1 = 0;
      __pyx_t_3 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_float64); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_dtype, __pyx_t_1) < 0) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_180_, 180., 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF_SET(__pyx_v_iangs, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":1770
 * 
 *       iangs = np.linspace(0.+val, 360.+val, itnum+1, dtype=np.float64) / 180. * np.pi
 *       dangs = iangs[1:] - iangs[0:-1]             # <<<<<<<<<<<<<<
 *       iangs = iangs[1:] - dangs / 2.
 * 
 */
      __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1770, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1770, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_9 = PyNumber_Subtract(__pyx_t_1, __pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1770, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF_SET(__pyx_v_dangs, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1771
 *       iangs = np.linspace(0.+val, 360.+val, itnum+1, dtype=np.float64) / 180. * np.pi
 *       dangs = iangs[1:] - iangs[0:-1]
 *       iangs = iangs[1:] - dangs / 2.             # <<<<<<<<<<<<<<
 * 
 *       x1d[offset:offset+itnum] = irads[itn] * np.cos(iangs)
 */
      __pyx_t_9 = __Pyx_PyObject_GetSlice(__pyx_v_iangs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_dangs, __pyx_float_2_, 2., 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_1 = PyNumber_Subtract(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF_SET(__pyx_v_iangs, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":1773
 *       iangs = iangs[1:] - dangs / 2.
 * 
 *       x1d[offset:offset+itnum] = irads[itn] * np.cos(iangs)             # <<<<<<<<<<<<<<
 *       y1d[offset:offset+itnum] = irads[itn] * np.sin(iangs)
 * 
 */
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_irads, __pyx_v_itn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_cos); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_10 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_v_iangs) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_iangs);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Multiply(__pyx_t_1, __pyx_t_10); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_PyObject_SetSlice(__pyx_v_x1d, __pyx_t_7, 0, 0, &__pyx_v_offset, &__pyx_t_10, NULL, 0, 0, 1) < 0) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "mirror_lib_v04.pyx":1774
 * 
 *       x1d[offset:offset+itnum] = irads[itn] * np.cos(iangs)
 *       y1d[offset:offset+itnum] = irads[itn] * np.sin(iangs)             # <<<<<<<<<<<<<<
 * 
 *       rad[offset:offset+itnum] = np.sqrt(x1d[offset:offset+itnum]**2 + y1d[offset:offset+itnum]**2)
 */
      __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_irads, __pyx_v_itn); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sin); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      __pyx_t_10 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_1, __pyx_v_iangs) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_iangs);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Multiply(__pyx_t_7, __pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_PyObject_SetSlice(__pyx_v_y1d, __pyx_t_9, 0, 0, &__pyx_v_offset, &__pyx_t_10, NULL, 0, 0, 1) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1776
 *       y1d[offset:offset+itnum] = irads[itn] * np.sin(iangs)
 * 
 *       rad[offset:offset+itnum] = np.sqrt(x1d[offset:offset+itnum]**2 + y1d[offset:offset+itnum]**2)             # <<<<<<<<<<<<<<
 *       area[offset:offset+itnum] = rad[offset:offset+itnum] * drads[itn] * dangs
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_x1d, 0, 0, &__pyx_v_offset, &__pyx_t_10, NULL, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyNumber_Power(__pyx_t_1, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_y1d, 0, 0, &__pyx_v_offset, &__pyx_t_1, NULL, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Power(__pyx_t_3, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Add(__pyx_t_10, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_9 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_PyObject_SetSlice(__pyx_v_rad, __pyx_t_9, 0, 0, &__pyx_v_offset, &__pyx_t_7, NULL, 0, 0, 1) < 0) __PYX_ERR(0, 1776, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1777
 * 
 *       rad[offset:offset+itnum] = np.sqrt(x1d[offset:offset+itnum]**2 + y1d[offset:offset+itnum]**2)
 *       area[offset:offset+itnum] = rad[offset:offset+itnum] * drads[itn] * dangs             # <<<<<<<<<<<<<<
 * 
 *       print(" %i  ;  %.4f  ;  %.8e" % (itnum, rad[offset], area[offset], ), end='\r', flush=True)
 */
      __pyx_t_9 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetSlice(__pyx_v_rad, 0, 0, &__pyx_v_offset, &__pyx_t_9, NULL, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_v_drads, __pyx_v_itn); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_3 = PyNumber_Multiply(__pyx_t_7, __pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Multiply(__pyx_t_3, __pyx_v_dangs); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Add(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_PyObject_SetSlice(__pyx_v_area, __pyx_t_9, 0, 0, &__pyx_v_offset, &__pyx_t_3, NULL, 0, 0, 1) < 0) __PYX_ERR(0, 1777, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1779
 *       area[offset:offset+itnum] = rad[offset:offset+itnum] * drads[itn] * dangs
 * 
 *       print(" %i  ;  %.4f  ;  %.8e" % (itnum, rad[offset], area[offset], ), end='\r', flush=True)             # <<<<<<<<<<<<<<
 * 
 *       offset += itnum
 */
      __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_v_rad, __pyx_v_offset); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_area, __pyx_v_offset); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_itnum);
      __Pyx_GIVEREF(__pyx_v_itnum);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_itnum);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_3);
      __pyx_t_9 = 0;
      __pyx_t_3 = 0;
      __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_i_4f_8e, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_end, __pyx_kp_u__76) < 0) __PYX_ERR(0, 1779, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_flush, Py_True) < 0) __PYX_ERR(0, 1779, __pyx_L1_error)
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1781
 *       print(" %i  ;  %.4f  ;  %.8e" % (itnum, rad[offset], area[offset], ), end='\r', flush=True)
 * 
 *       offset += itnum             # <<<<<<<<<<<<<<
 * 
 *     print("")
 */
      __pyx_t_9 = PyNumber_InPlaceAdd(__pyx_v_offset, __pyx_v_itnum); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1781, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF_SET(__pyx_v_offset, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "mirror_lib_v04.pyx":1765
 * 
 *     offset = 0
 *     for itn in range(irads.size):             # <<<<<<<<<<<<<<
 * 
 *       itnum = np.int32(nds[itn])
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1783
 *       offset += itnum
 * 
 *     print("")             # <<<<<<<<<<<<<<
 * #
 * #
 */
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1698
 *   factor=1.001
 *   # Polar:
 *   if (layout=='polar'):             # <<<<<<<<<<<<<<
 *     # set rays to be considered in a polar layout:
 *     azi_val = 24 #24
 */
    goto __pyx_L4;
  }

  /* "mirror_lib_v04.pyx":1794
 * 
 *   # Cartesian:
 *   elif (layout=='cartesian'):             # <<<<<<<<<<<<<<
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 */
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_v_layout, __pyx_n_u_cartesian, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1794, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "mirror_lib_v04.pyx":1795
 *   # Cartesian:
 *   elif (layout=='cartesian'):
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]             # <<<<<<<<<<<<<<
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, telescope.num, dtype=np.float64)#[1:]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_linspace); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyInt_FloorDivideObjC(__pyx_t_3, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_8, __pyx_int_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_8);
    __pyx_t_7 = 0;
    __pyx_t_1 = 0;
    __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_ixs = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1796
 *   elif (layout=='cartesian'):
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]             # <<<<<<<<<<<<<<
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, telescope.num, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, telescope.num, dtype=np.float64)#[1:]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_linspace); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyInt_FloorDivideObjC(__pyx_t_3, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_7, __pyx_int_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_7);
    __pyx_t_9 = 0;
    __pyx_t_1 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, __pyx_t_9) < 0) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_iys = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1797
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, telescope.num, dtype=np.float64)#[1:]             # <<<<<<<<<<<<<<
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, telescope.num, dtype=np.float64)#[1:]
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_linspace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_3 = PyNumber_Negative(__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_3, __pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_x); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_9, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_3);
    __pyx_t_8 = 0;
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_8) < 0) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_9, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_ixs, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1798
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, telescope.num, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, telescope.num, dtype=np.float64)#[1:]             # <<<<<<<<<<<<<<
 * 
 *     d1s = np.mean(ixs[1:]-ixs[0:-1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_linspace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_y); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = PyNumber_Negative(__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_9, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_dim_y); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_telescope, __pyx_n_s_num); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_9);
    __pyx_t_7 = 0;
    __pyx_t_1 = 0;
    __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF_SET(__pyx_v_iys, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1800
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, telescope.num, dtype=np.float64)#[1:]
 * 
 *     d1s = np.mean(ixs[1:]-ixs[0:-1])             # <<<<<<<<<<<<<<
 *     d2s = np.mean(iys[1:]-iys[0:-1])
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_mean); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_GetSlice(__pyx_v_ixs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_ixs, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Subtract(__pyx_t_9, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_d1s = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1801
 * 
 *     d1s = np.mean(ixs[1:]-ixs[0:-1])
 *     d2s = np.mean(iys[1:]-iys[0:-1])             # <<<<<<<<<<<<<<
 * 
 *     ix1s = ixs[1:]-d1s/2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_mean); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetSlice(__pyx_v_iys, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_iys, 0, -1L, NULL, NULL, &__pyx_slice__46, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = PyNumber_Subtract(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_9);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_d2s = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1803
 *     d2s = np.mean(iys[1:]-iys[0:-1])
 * 
 *     ix1s = ixs[1:]-d1s/2             # <<<<<<<<<<<<<<
 *     iy1s = iys[1:]-d2s/2
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetSlice(__pyx_v_ixs, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_d1s, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = PyNumber_Subtract(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_ix1s = __pyx_t_9;
    __pyx_t_9 = 0;

    /* "mirror_lib_v04.pyx":1804
 * 
 *     ix1s = ixs[1:]-d1s/2
 *     iy1s = iys[1:]-d2s/2             # <<<<<<<<<<<<<<
 * 
 *     print(ixs.shape)
 */
    __pyx_t_9 = __Pyx_PyObject_GetSlice(__pyx_v_iys, 1, 0, NULL, NULL, &__pyx_slice__45, 1, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = __Pyx_PyInt_TrueDivideObjC(__pyx_v_d2s, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyNumber_Subtract(__pyx_t_9, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_iy1s = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1806
 *     iy1s = iys[1:]-d2s/2
 * 
 *     print(ixs.shape)             # <<<<<<<<<<<<<<
 * 
 *     ixs = ix1s[:,None] * np.ones(iy1s.size, dtype=np.float64)[None,:]
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ixs, __pyx_n_s_shape); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1808
 *     print(ixs.shape)
 * 
 *     ixs = ix1s[:,None] * np.ones(iy1s.size, dtype=np.float64)[None,:]             # <<<<<<<<<<<<<<
 *     iys = iy1s[None,:] * np.ones(ix1s.size, dtype=np.float64)[:,None]
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_ix1s, __pyx_tuple__43); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_ones); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_iy1s, __pyx_n_s_size); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_float64); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, __pyx_t_10) < 0) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_10, __pyx_tuple__44); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Multiply(__pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1808, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_ixs, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":1809
 * 
 *     ixs = ix1s[:,None] * np.ones(iy1s.size, dtype=np.float64)[None,:]
 *     iys = iy1s[None,:] * np.ones(ix1s.size, dtype=np.float64)[:,None]             # <<<<<<<<<<<<<<
 * 
 *     print(ixs.shape)
 */
    __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_iy1s, __pyx_tuple__44); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_ones); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ix1s, __pyx_n_s_size); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_float64); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, __pyx_t_8) < 0) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_8, __pyx_tuple__43); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_10, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_iys, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":1811
 *     iys = iy1s[None,:] * np.ones(ix1s.size, dtype=np.float64)[:,None]
 * 
 *     print(ixs.shape)             # <<<<<<<<<<<<<<
 * 
 *     x1d = ixs.flatten()
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ixs, __pyx_n_s_shape); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1813
 *     print(ixs.shape)
 * 
 *     x1d = ixs.flatten()             # <<<<<<<<<<<<<<
 *     y1d = iys.flatten()
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ixs, __pyx_n_s_flatten); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_7 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_x1d = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1814
 * 
 *     x1d = ixs.flatten()
 *     y1d = iys.flatten()             # <<<<<<<<<<<<<<
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_iys, __pyx_n_s_flatten); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_7 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_y1d = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1816
 *     y1d = iys.flatten()
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)             # <<<<<<<<<<<<<<
 *     area = x1d * 0. + d1s * d2s
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Power(__pyx_v_x1d, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyNumber_Power(__pyx_v_y1d, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Add(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_v_rad = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1817
 * 
 *     rad = np.sqrt(x1d**2 + y1d**2)
 *     area = x1d * 0. + d1s * d2s             # <<<<<<<<<<<<<<
 * 
 *   else:
 */
    __pyx_t_7 = PyNumber_Multiply(__pyx_v_x1d, __pyx_float_0_); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_10 = PyNumber_Multiply(__pyx_v_d1s, __pyx_v_d2s); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_1 = PyNumber_Add(__pyx_t_7, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1817, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_v_area = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1794
 * 
 *   # Cartesian:
 *   elif (layout=='cartesian'):             # <<<<<<<<<<<<<<
 *     ixs = np.linspace(-telescope.dim_x*factor, telescope.dim_x*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 *     iys = np.linspace(-telescope.dim_y*factor, telescope.dim_y*factor, (telescope.num//2)*2+1, dtype=np.float64)#[1:]
 */
    goto __pyx_L4;
  }

  /* "mirror_lib_v04.pyx":1820
 * 
 *   else:
 *     print('Get geometry:')             # <<<<<<<<<<<<<<
 *     print('\tUnknown layout.')
 *     print('')
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1821
 *   else:
 *     print('Get geometry:')
 *     print('\tUnknown layout.')             # <<<<<<<<<<<<<<
 *     print('')
 *     stop()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1822
 *     print('Get geometry:')
 *     print('\tUnknown layout.')
 *     print('')             # <<<<<<<<<<<<<<
 *     stop()
 * #
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":1823
 *     print('\tUnknown layout.')
 *     print('')
 *     stop()             # <<<<<<<<<<<<<<
 * #
 *   return x1d, y1d, rad, area
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_stop); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_10);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "mirror_lib_v04.pyx":1825
 *     stop()
 * #
 *   return x1d, y1d, rad, area             # <<<<<<<<<<<<<<
 * 
 * ###<OBSOLETE>::def get_primary_rays(layout, telescope):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_x1d)) { __Pyx_RaiseUnboundLocalError("x1d"); __PYX_ERR(0, 1825, __pyx_L1_error) }
  if (unlikely(!__pyx_v_y1d)) { __Pyx_RaiseUnboundLocalError("y1d"); __PYX_ERR(0, 1825, __pyx_L1_error) }
  if (unlikely(!__pyx_v_rad)) { __Pyx_RaiseUnboundLocalError("rad"); __PYX_ERR(0, 1825, __pyx_L1_error) }
  if (unlikely(!__pyx_v_area)) { __Pyx_RaiseUnboundLocalError("area"); __PYX_ERR(0, 1825, __pyx_L1_error) }
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_x1d);
  __Pyx_GIVEREF(__pyx_v_x1d);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x1d);
  __Pyx_INCREF(__pyx_v_y1d);
  __Pyx_GIVEREF(__pyx_v_y1d);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y1d);
  __Pyx_INCREF(__pyx_v_rad);
  __Pyx_GIVEREF(__pyx_v_rad);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_rad);
  __Pyx_INCREF(__pyx_v_area);
  __Pyx_GIVEREF(__pyx_v_area);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_area);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1687
 * # ---------------------------------------------------------------------
 * #
 * def get_primary_rays(layout, telescope):             # <<<<<<<<<<<<<<
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pymirrors.get_primary_rays", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_azi_val);
  __Pyx_XDECREF(__pyx_v_rad_to_azi_rat);
  __Pyx_XDECREF(__pyx_v_irads);
  __Pyx_XDECREF(__pyx_v_drads);
  __Pyx_XDECREF(__pyx_v_iangs);
  __Pyx_XDECREF(__pyx_v_dangs);
  __Pyx_XDECREF(__pyx_v_ixs);
  __Pyx_XDECREF(__pyx_v_iys);
  __Pyx_XDECREF(__pyx_v_d1s);
  __Pyx_XDECREF(__pyx_v_d2s);
  __Pyx_XDECREF(__pyx_v_x1d);
  __Pyx_XDECREF(__pyx_v_y1d);
  __Pyx_XDECREF(__pyx_v_rad);
  __Pyx_XDECREF(__pyx_v_area);
  __Pyx_XDECREF(__pyx_v_ang_ref);
  __Pyx_XDECREF(__pyx_v_angs);
  __Pyx_XDECREF(__pyx_v_nds);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_totn);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XDECREF(__pyx_v_itn);
  __Pyx_XDECREF(__pyx_v_itnum);
  __Pyx_XDECREF(__pyx_v_ix1s);
  __Pyx_XDECREF(__pyx_v_iy1s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_25get_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_25get_geometry = {"get_geometry", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_25get_geometry, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_25get_geometry(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_telescope = 0;
  PyObject *__pyx_v_beam = 0;
  PyObject *__pyx_v_secondary = 0;
  PyObject *__pyx_v_segments = 0;
  PyObject *__pyx_v_nthreads = 0;
  PyObject *__pyx_v_osecondary = 0;
  PyObject *__pyx_v_layout = 0;
  PyObject *__pyx_v_check_rays = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_geometry (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_telescope,&__pyx_n_s_beam,&__pyx_n_s_secondary,&__pyx_n_s_segments,&__pyx_n_s_nthreads,&__pyx_n_s_osecondary,&__pyx_n_s_layout,&__pyx_n_s_check_rays,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    values[4] = ((PyObject *)__pyx_int_1);

    /* "mirror_lib_v04.pyx":1947
 * 
 * def get_geometry(telescope, beam, secondary, segments \
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):             # <<<<<<<<<<<<<<
 * #
 *   from pdb import set_trace as stop
 */
    values[5] = ((PyObject *)Py_False);
    values[6] = ((PyObject *)__pyx_n_u_polar);
    values[7] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_telescope)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beam)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_geometry", 0, 4, 8, 1); __PYX_ERR(0, 1946, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_secondary)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_geometry", 0, 4, 8, 2); __PYX_ERR(0, 1946, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_segments)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_geometry", 0, 4, 8, 3); __PYX_ERR(0, 1946, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nthreads);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_osecondary);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_layout);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_check_rays);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_geometry") < 0)) __PYX_ERR(0, 1946, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_telescope = values[0];
    __pyx_v_beam = values[1];
    __pyx_v_secondary = values[2];
    __pyx_v_segments = values[3];
    __pyx_v_nthreads = values[4];
    __pyx_v_osecondary = values[5];
    __pyx_v_layout = values[6];
    __pyx_v_check_rays = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_geometry", 0, 4, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1946, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_24get_geometry(__pyx_self, __pyx_v_telescope, __pyx_v_beam, __pyx_v_secondary, __pyx_v_segments, __pyx_v_nthreads, __pyx_v_osecondary, __pyx_v_layout, __pyx_v_check_rays);

  /* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2080
 * ###<OBSOLETE>::
 * #
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):             # <<<<<<<<<<<<<<
 * #
 *     if (iteles.primary_shape == 'hexagonal'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_12get_geometry_1check_primary_id(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_12get_geometry_1check_primary_id = {"check_primary_id", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_12get_geometry_1check_primary_id, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_12get_geometry_1check_primary_id(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_iteles = 0;
  PyObject *__pyx_v_ixpos = 0;
  PyObject *__pyx_v_iypos = 0;
  PyObject *__pyx_v_igxs = 0;
  PyObject *__pyx_v_igys = 0;
  PyObject *__pyx_v_igrad = 0;
  PyObject *__pyx_v_igarea = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_primary_id (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_iteles,&__pyx_n_s_ixpos,&__pyx_n_s_iypos,&__pyx_n_s_igxs,&__pyx_n_s_igys,&__pyx_n_s_igrad,&__pyx_n_s_igarea,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_iteles)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ixpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 1); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_iypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 2); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_igxs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 3); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_igys)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 4); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_igrad)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 5); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_igarea)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, 6); __PYX_ERR(0, 2080, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "check_primary_id") < 0)) __PYX_ERR(0, 2080, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_iteles = values[0];
    __pyx_v_ixpos = values[1];
    __pyx_v_iypos = values[2];
    __pyx_v_igxs = values[3];
    __pyx_v_igys = values[4];
    __pyx_v_igrad = values[5];
    __pyx_v_igarea = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_primary_id", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2080, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_geometry.check_primary_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_12get_geometry_check_primary_id(__pyx_self, __pyx_v_iteles, __pyx_v_ixpos, __pyx_v_iypos, __pyx_v_igxs, __pyx_v_igys, __pyx_v_igrad, __pyx_v_igarea);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_12get_geometry_check_primary_id(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_iteles, PyObject *__pyx_v_ixpos, PyObject *__pyx_v_iypos, PyObject *__pyx_v_igxs, PyObject *__pyx_v_igys, PyObject *__pyx_v_igrad, PyObject *__pyx_v_igarea) {
  PyObject *__pyx_v_dumgx = NULL;
  PyObject *__pyx_v_dumgy = NULL;
  PyObject *__pyx_v_resgx = NULL;
  PyObject *__pyx_v_resgy = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_costhU = NULL;
  PyObject *__pyx_v_ww = NULL;
  PyObject *__pyx_v_resrad = NULL;
  PyObject *__pyx_v_resarea = NULL;
  PyObject *__pyx_v_a2 = NULL;
  PyObject *__pyx_v_ca = NULL;
  PyObject *__pyx_v_sa = NULL;
  PyObject *__pyx_v_rot = NULL;
  PyObject *__pyx_v_out = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_dumxg = NULL;
  PyObject *__pyx_v_dumyg = NULL;
  PyObject *__pyx_v_dumrad = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("check_primary_id", 0);

  /* "mirror_lib_v04.pyx":2082
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):
 * #
 *     if (iteles.primary_shape == 'hexagonal'):             # <<<<<<<<<<<<<<
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_iteles, __pyx_n_s_primary_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_hexagonal, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":2083
 * #
 *     if (iteles.primary_shape == 'hexagonal'):
 *       dumgx = igxs - ixpos             # <<<<<<<<<<<<<<
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos
 */
    __pyx_t_1 = PyNumber_Subtract(__pyx_v_igxs, __pyx_v_ixpos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2083, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_dumgx = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2084
 *     if (iteles.primary_shape == 'hexagonal'):
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos             # <<<<<<<<<<<<<<
 *       resgx = igxs - ixpos
 *       resgy = igys - iypos
 */
    __pyx_t_1 = PyNumber_Subtract(__pyx_v_igys, __pyx_v_iypos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_dumgy = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2085
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos             # <<<<<<<<<<<<<<
 *       resgy = igys - iypos
 * #
 */
    __pyx_t_1 = PyNumber_Subtract(__pyx_v_igxs, __pyx_v_ixpos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2085, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_resgx = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2086
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos
 *       resgy = igys - iypos             # <<<<<<<<<<<<<<
 * #
 *       a = 30.e0 / 1.8e2 * np.pi
 */
    __pyx_t_1 = PyNumber_Subtract(__pyx_v_igys, __pyx_v_iypos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2086, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_resgy = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2088
 *       resgy = igys - iypos
 * #
 *       a = 30.e0 / 1.8e2 * np.pi             # <<<<<<<<<<<<<<
 *       costhU = np.cos(a) * iteles.radius
 * # Select pixels that fulfil first criterion:
 */
    __pyx_t_1 = PyFloat_FromDouble((30.e0 / 1.8e2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_pi); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_a = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2089
 * #
 *       a = 30.e0 / 1.8e2 * np.pi
 *       costhU = np.cos(a) * iteles.radius             # <<<<<<<<<<<<<<
 * # Select pixels that fulfil first criterion:
 *       ww = np.where(np.abs(dumgy) <= costhU)[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_cos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_v_a) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_a);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_iteles, __pyx_n_s_radius); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_costhU = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2091
 *       costhU = np.cos(a) * iteles.radius
 * # Select pixels that fulfil first criterion:
 *       ww = np.where(np.abs(dumgy) <= costhU)[0]             # <<<<<<<<<<<<<<
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_where); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_abs); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_v_dumgy) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_dumgy);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_v_costhU, Py_LE); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_ww = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2092
 * # Select pixels that fulfil first criterion:
 *       ww = np.where(np.abs(dumgy) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_dumgx, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgx, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2093
 *       ww = np.where(np.abs(dumgy) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_dumgy, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgy, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2094
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgy = resgy[ww] * 1.
 *       resrad = igrad[ww] * 1.
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_resgx, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2094, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2094, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgx, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2095
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resrad = igrad[ww] * 1.
 *       resarea = igarea[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_resgy, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2095, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2095, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgy, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2096
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 *       resrad = igrad[ww] * 1.             # <<<<<<<<<<<<<<
 *       resarea = igarea[ww] * 1.
 * # Rotate system 60 deg:
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_igrad, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2096, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2096, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_resrad = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2097
 *       resgy = resgy[ww] * 1.
 *       resrad = igrad[ww] * 1.
 *       resarea = igarea[ww] * 1.             # <<<<<<<<<<<<<<
 * # Rotate system 60 deg:
 *       a2 = 60.e0 / 1.8e2 * np.pi
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_igarea, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2097, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2097, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_resarea = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2099
 *       resarea = igarea[ww] * 1.
 * # Rotate system 60 deg:
 *       a2 = 60.e0 / 1.8e2 * np.pi             # <<<<<<<<<<<<<<
 *       ca = np.cos(a2)
 *       sa = np.sin(a2)
 */
    __pyx_t_3 = PyFloat_FromDouble((60.e0 / 1.8e2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_a2 = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2100
 * # Rotate system 60 deg:
 *       a2 = 60.e0 / 1.8e2 * np.pi
 *       ca = np.cos(a2)             # <<<<<<<<<<<<<<
 *       sa = np.sin(a2)
 *       rot = np.array([ca, -sa, sa, ca]).reshape(2,2)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_v_a2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_a2);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_ca = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2101
 *       a2 = 60.e0 / 1.8e2 * np.pi
 *       ca = np.cos(a2)
 *       sa = np.sin(a2)             # <<<<<<<<<<<<<<
 *       rot = np.array([ca, -sa, sa, ca]).reshape(2,2)
 * #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_v_a2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_a2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_sa = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2102
 *       ca = np.cos(a2)
 *       sa = np.sin(a2)
 *       rot = np.array([ca, -sa, sa, ca]).reshape(2,2)             # <<<<<<<<<<<<<<
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Negative(__pyx_v_sa); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_ca);
    __Pyx_GIVEREF(__pyx_v_ca);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_ca);
    __Pyx_GIVEREF(__pyx_t_6);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_sa);
    __Pyx_GIVEREF(__pyx_v_sa);
    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_sa);
    __Pyx_INCREF(__pyx_v_ca);
    __Pyx_GIVEREF(__pyx_v_ca);
    PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_ca);
    __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_reshape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rot = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2104
 *       rot = np.array([ca, -sa, sa, ca]).reshape(2,2)
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))             # <<<<<<<<<<<<<<
 *       dumxg = out[0,:] * 1.
 *       dumyg = out[1,:] * 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_dot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_vstack); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_dumgx);
    __Pyx_GIVEREF(__pyx_v_dumgx);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_dumgx);
    __Pyx_INCREF(__pyx_v_dumgy);
    __Pyx_GIVEREF(__pyx_v_dumgy);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_v_dumgy);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_rot, __pyx_t_3};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2104, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_rot, __pyx_t_3};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2104, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2104, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_rot);
      __Pyx_GIVEREF(__pyx_v_rot);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_8, __pyx_v_rot);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_8, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2104, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_out = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2105
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 *       dumxg = out[0,:] * 1.             # <<<<<<<<<<<<<<
 *       dumyg = out[1,:] * 1.
 * # Select pixels that fulfil second criterion:
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_out, __pyx_tuple__71); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_dumxg = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2106
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 *       dumxg = out[0,:] * 1.
 *       dumyg = out[1,:] * 1.             # <<<<<<<<<<<<<<
 * # Select pixels that fulfil second criterion:
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_out, __pyx_tuple__80); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_dumyg = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2108
 *       dumyg = out[1,:] * 1.
 * # Select pixels that fulfil second criterion:
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]             # <<<<<<<<<<<<<<
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_abs); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_v_dumyg) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_dumyg);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_v_costhU, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2109
 * # Select pixels that fulfil second criterion:
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_dumgx, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgx, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2110
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_dumgy, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgy, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2111
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_resgx, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgx, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2112
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_resgy, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgy, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2113
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.             # <<<<<<<<<<<<<<
 *       resarea = resarea[ww] * 1.
 * #
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_resrad, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_resrad, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2114
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.             # <<<<<<<<<<<<<<
 * #
 *       rot = np.array([ca, sa, -sa, ca]).reshape(2,2)
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_resarea, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_resarea, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2116
 *       resarea = resarea[ww] * 1.
 * #
 *       rot = np.array([ca, sa, -sa, ca]).reshape(2,2)             # <<<<<<<<<<<<<<
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_array); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Negative(__pyx_v_sa); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_ca);
    __Pyx_GIVEREF(__pyx_v_ca);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_ca);
    __Pyx_INCREF(__pyx_v_sa);
    __Pyx_GIVEREF(__pyx_v_sa);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_sa);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_ca);
    __Pyx_GIVEREF(__pyx_v_ca);
    PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_ca);
    __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_reshape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_rot, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2118
 *       rot = np.array([ca, sa, -sa, ca]).reshape(2,2)
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))             # <<<<<<<<<<<<<<
 *       dumxg = out[0,:] * 1.
 *       dumyg = out[1,:] * 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_dot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_vstack); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_dumgx);
    __Pyx_GIVEREF(__pyx_v_dumgx);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_dumgx);
    __Pyx_INCREF(__pyx_v_dumgy);
    __Pyx_GIVEREF(__pyx_v_dumgy);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_dumgy);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_rot, __pyx_t_5};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2118, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_rot, __pyx_t_5};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2118, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_v_rot);
      __Pyx_GIVEREF(__pyx_v_rot);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_8, __pyx_v_rot);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_8, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_out, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2119
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 *       dumxg = out[0,:] * 1.             # <<<<<<<<<<<<<<
 *       dumyg = out[1,:] * 1.
 * #
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_out, __pyx_tuple__71); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumxg, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2120
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 *       dumxg = out[0,:] * 1.
 *       dumyg = out[1,:] * 1.             # <<<<<<<<<<<<<<
 * #
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_out, __pyx_tuple__80); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumyg, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2122
 *       dumyg = out[1,:] * 1.
 * #
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]             # <<<<<<<<<<<<<<
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_where); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_abs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_dumyg) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_dumyg);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_v_costhU, Py_LE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_6 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2123
 * #
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_dumgx, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgx, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2124
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_dumgy, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_dumgy, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2125
 *       dumgx = dumgx[ww] * 1.
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.             # <<<<<<<<<<<<<<
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_resgx, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgx, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2126
 *       dumgy = dumgy[ww] * 1.
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.             # <<<<<<<<<<<<<<
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_resgy, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_resgy, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2127
 *       resgx = resgx[ww] * 1.
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.             # <<<<<<<<<<<<<<
 *       resarea = resarea[ww] * 1.
 * #
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_resrad, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_resrad, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2128
 *       resgy = resgy[ww] * 1.
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.             # <<<<<<<<<<<<<<
 * #
 * # Anular:
 */
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_resarea, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_resarea, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2082
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):
 * #
 *     if (iteles.primary_shape == 'hexagonal'):             # <<<<<<<<<<<<<<
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":2131
 * #
 * # Anular:
 *     elif (iteles.primary_shape == 'anular'):             # <<<<<<<<<<<<<<
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_iteles, __pyx_n_s_primary_shape); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_4, __pyx_n_u_anular, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2131, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":2132
 * # Anular:
 *     elif (iteles.primary_shape == 'anular'):
 *       dumgx = igxs - ixpos             # <<<<<<<<<<<<<<
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_igxs, __pyx_v_ixpos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_dumgx = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2133
 *     elif (iteles.primary_shape == 'anular'):
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos             # <<<<<<<<<<<<<<
 *       resgx = igxs - ixpos
 *       resgy = igys - iypos
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_igys, __pyx_v_iypos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_dumgy = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2134
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos             # <<<<<<<<<<<<<<
 *       resgy = igys - iypos
 * 
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_igxs, __pyx_v_ixpos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_resgx = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2135
 *       dumgy = igys - iypos
 *       resgx = igxs - ixpos
 *       resgy = igys - iypos             # <<<<<<<<<<<<<<
 * 
 *       dumrad = np.sqrt(dumgx**2+dumgy**2)
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_igys, __pyx_v_iypos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_resgy = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2137
 *       resgy = igys - iypos
 * 
 *       dumrad = np.sqrt(dumgx**2+dumgy**2)             # <<<<<<<<<<<<<<
 *       ww = np.where(dumrad <= iteles.rad_max)[0]
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Power(__pyx_v_dumgx, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyNumber_Power(__pyx_v_dumgy, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_dumrad = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2138
 * 
 *       dumrad = np.sqrt(dumgx**2+dumgy**2)
 *       ww = np.where(dumrad <= iteles.rad_max)[0]             # <<<<<<<<<<<<<<
 * 
 *       dumrad = dumrad[ww]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_iteles, __pyx_n_s_rad_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_dumrad, __pyx_t_3, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_ww = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2140
 *       ww = np.where(dumrad <= iteles.rad_max)[0]
 * 
 *       dumrad = dumrad[ww]             # <<<<<<<<<<<<<<
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_dumrad, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_dumrad, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2141
 * 
 *       dumrad = dumrad[ww]
 *       resgx = resgx[ww]             # <<<<<<<<<<<<<<
 *       resgy = resgy[ww]
 *       resrad = igrad[ww] * 1.
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_resgx, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_resgx, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2142
 *       dumrad = dumrad[ww]
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]             # <<<<<<<<<<<<<<
 *       resrad = igrad[ww] * 1.
 *       resarea = igarea[ww] * 1.
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_resgy, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2142, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v_resgy, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2143
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]
 *       resrad = igrad[ww] * 1.             # <<<<<<<<<<<<<<
 *       resarea = igarea[ww] * 1.
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_igrad, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_resrad = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2144
 *       resgy = resgy[ww]
 *       resrad = igrad[ww] * 1.
 *       resarea = igarea[ww] * 1.             # <<<<<<<<<<<<<<
 * 
 *       ww = np.where(dumrad >= iteles.rad_min)[0]
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_igarea, __pyx_v_ww); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_4, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_resarea = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2146
 *       resarea = igarea[ww] * 1.
 * 
 *       ww = np.where(dumrad >= iteles.rad_min)[0]             # <<<<<<<<<<<<<<
 * 
 *       dumrad = dumrad[ww]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_where); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_iteles, __pyx_n_s_rad_min); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyObject_RichCompare(__pyx_v_dumrad, __pyx_t_4, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2148
 *       ww = np.where(dumrad >= iteles.rad_min)[0]
 * 
 *       dumrad = dumrad[ww]             # <<<<<<<<<<<<<<
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_dumrad, __pyx_v_ww); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_dumrad, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2149
 * 
 *       dumrad = dumrad[ww]
 *       resgx = resgx[ww]             # <<<<<<<<<<<<<<
 *       resgy = resgy[ww]
 *       resrad = resrad[ww] * 1.
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_resgx, __pyx_v_ww); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_resgx, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2150
 *       dumrad = dumrad[ww]
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]             # <<<<<<<<<<<<<<
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_resgy, __pyx_v_ww); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_resgy, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2151
 *       resgx = resgx[ww]
 *       resgy = resgy[ww]
 *       resrad = resrad[ww] * 1.             # <<<<<<<<<<<<<<
 *       resarea = resarea[ww] * 1.
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_resrad, __pyx_v_ww); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_1, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_resrad, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2152
 *       resgy = resgy[ww]
 *       resrad = resrad[ww] * 1.
 *       resarea = resarea[ww] * 1.             # <<<<<<<<<<<<<<
 * 
 * # Otherwise:
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_resarea, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_resarea, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2131
 * #
 * # Anular:
 *     elif (iteles.primary_shape == 'anular'):             # <<<<<<<<<<<<<<
 *       dumgx = igxs - ixpos
 *       dumgy = igys - iypos
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":2156
 * # Otherwise:
 *     else:
 *       print('Primary shape unknown!')             # <<<<<<<<<<<<<<
 *       print('')
 *       print('')
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2157
 *     else:
 *       print('Primary shape unknown!')
 *       print('')             # <<<<<<<<<<<<<<
 *       print('')
 *       exit()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2158
 *       print('Primary shape unknown!')
 *       print('')
 *       print('')             # <<<<<<<<<<<<<<
 *       exit()
 * #
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2159
 *       print('')
 *       print('')
 *       exit()             # <<<<<<<<<<<<<<
 * #
 *     return resgx + ixpos, resgy + iypos, resrad, resarea
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":2161
 *       exit()
 * #
 *     return resgx + ixpos, resgy + iypos, resrad, resarea             # <<<<<<<<<<<<<<
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_resgx)) { __Pyx_RaiseUnboundLocalError("resgx"); __PYX_ERR(0, 2161, __pyx_L1_error) }
  __pyx_t_1 = PyNumber_Add(__pyx_v_resgx, __pyx_v_ixpos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(!__pyx_v_resgy)) { __Pyx_RaiseUnboundLocalError("resgy"); __PYX_ERR(0, 2161, __pyx_L1_error) }
  __pyx_t_5 = PyNumber_Add(__pyx_v_resgy, __pyx_v_iypos); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (unlikely(!__pyx_v_resrad)) { __Pyx_RaiseUnboundLocalError("resrad"); __PYX_ERR(0, 2161, __pyx_L1_error) }
  if (unlikely(!__pyx_v_resarea)) { __Pyx_RaiseUnboundLocalError("resarea"); __PYX_ERR(0, 2161, __pyx_L1_error) }
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __Pyx_INCREF(__pyx_v_resrad);
  __Pyx_GIVEREF(__pyx_v_resrad);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_resrad);
  __Pyx_INCREF(__pyx_v_resarea);
  __Pyx_GIVEREF(__pyx_v_resarea);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_resarea);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2080
 * ###<OBSOLETE>::
 * #
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):             # <<<<<<<<<<<<<<
 * #
 *     if (iteles.primary_shape == 'hexagonal'):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pymirrors.get_geometry.check_primary_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dumgx);
  __Pyx_XDECREF(__pyx_v_dumgy);
  __Pyx_XDECREF(__pyx_v_resgx);
  __Pyx_XDECREF(__pyx_v_resgy);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_costhU);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_resrad);
  __Pyx_XDECREF(__pyx_v_resarea);
  __Pyx_XDECREF(__pyx_v_a2);
  __Pyx_XDECREF(__pyx_v_ca);
  __Pyx_XDECREF(__pyx_v_sa);
  __Pyx_XDECREF(__pyx_v_rot);
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_dumxg);
  __Pyx_XDECREF(__pyx_v_dumyg);
  __Pyx_XDECREF(__pyx_v_dumrad);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2163
 *     return resgx + ixpos, resgy + iypos, resrad, resarea
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):             # <<<<<<<<<<<<<<
 *     if (teles.primary_shape == 'hexagonal'):
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_12get_geometry_3check_primary(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_12get_geometry_3check_primary = {"check_primary", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_12get_geometry_3check_primary, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_12get_geometry_3check_primary(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_teles = 0;
  PyObject *__pyx_v_six = 0;
  PyObject *__pyx_v_siy = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_nthreads = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_primary (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_teles,&__pyx_n_s_six,&__pyx_n_s_siy,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_nthreads,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_teles)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_six)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, 1); __PYX_ERR(0, 2163, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_siy)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, 2); __PYX_ERR(0, 2163, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, 3); __PYX_ERR(0, 2163, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, 4); __PYX_ERR(0, 2163, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nthreads)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, 5); __PYX_ERR(0, 2163, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "check_primary") < 0)) __PYX_ERR(0, 2163, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_teles = values[0];
    __pyx_v_six = values[1];
    __pyx_v_siy = values[2];
    __pyx_v_x = values[3];
    __pyx_v_y = values[4];
    __pyx_v_nthreads = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_primary", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2163, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_geometry.check_primary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_12get_geometry_2check_primary(__pyx_self, __pyx_v_teles, __pyx_v_six, __pyx_v_siy, __pyx_v_x, __pyx_v_y, __pyx_v_nthreads);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_12get_geometry_2check_primary(PyObject *__pyx_self, PyObject *__pyx_v_teles, PyObject *__pyx_v_six, PyObject *__pyx_v_siy, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_nthreads) {
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *__pyx_cur_scope;
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *__pyx_outer_scope;
  PyObject *__pyx_v_hangs = NULL;
  PyObject *__pyx_v_sxprim = NULL;
  PyObject *__pyx_v_syprim = NULL;
  PyObject *__pyx_v_rx = NULL;
  PyObject *__pyx_v_ry = NULL;
  PyObject *__pyx_v_ix = NULL;
  PyObject *__pyx_v_iy = NULL;
  PyObject *__pyx_v_wpos = NULL;
  PyObject *__pyx_v_rix = NULL;
  PyObject *__pyx_v_riy = NULL;
  PyObject *__pyx_v_rex = NULL;
  PyObject *__pyx_v_rey = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("check_primary", 0);
  __pyx_outer_scope = (struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "mirror_lib_v04.pyx":2164
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):
 *     if (teles.primary_shape == 'hexagonal'):             # <<<<<<<<<<<<<<
 * 
 *       hangs = np.arange(6) * np.pi / 3. + np.pi/6.
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_primary_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_hexagonal, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":2166
 *     if (teles.primary_shape == 'hexagonal'):
 * 
 *       hangs = np.arange(6) * np.pi / 3. + np.pi/6.             # <<<<<<<<<<<<<<
 *       sxprim = telescope.radius * np.sin(hangs)
 *       syprim = telescope.radius * np.cos(hangs)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_arange); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_int_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_int_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_4, __pyx_float_3_, 3., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_6_, 6., 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_hangs = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2167
 * 
 *       hangs = np.arange(6) * np.pi / 3. + np.pi/6.
 *       sxprim = telescope.radius * np.sin(hangs)             # <<<<<<<<<<<<<<
 *       syprim = telescope.radius * np.cos(hangs)
 * 
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_telescope)) { __Pyx_RaiseClosureNameError("telescope"); __PYX_ERR(0, 2167, __pyx_L1_error) }
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_radius); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_v_hangs) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_hangs);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_sxprim = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2168
 *       hangs = np.arange(6) * np.pi / 3. + np.pi/6.
 *       sxprim = telescope.radius * np.sin(hangs)
 *       syprim = telescope.radius * np.cos(hangs)             # <<<<<<<<<<<<<<
 * 
 *       rx = np.ones((1,)) * 0.
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_telescope)) { __Pyx_RaiseClosureNameError("telescope"); __PYX_ERR(0, 2168, __pyx_L1_error) }
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_radius); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_hangs) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_hangs);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_syprim = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2170
 *       syprim = telescope.radius * np.cos(hangs)
 * 
 *       rx = np.ones((1,)) * 0.             # <<<<<<<<<<<<<<
 *       ry = np.ones((1,)) * 0.
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_ones); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_float_0_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rx = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2171
 * 
 *       rx = np.ones((1,)) * 0.
 *       ry = np.ones((1,)) * 0.             # <<<<<<<<<<<<<<
 * 
 *       ix = x - six
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ones); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_float_0_); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_ry = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2173
 *       ry = np.ones((1,)) * 0.
 * 
 *       ix = x - six             # <<<<<<<<<<<<<<
 *       iy = y - siy
 * 
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_x, __pyx_v_six); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_ix = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2174
 * 
 *       ix = x - six
 *       iy = y - siy             # <<<<<<<<<<<<<<
 * 
 *       wpos = cinside(rx, ry, sxprim, syprim, ix, iy, nthreads, vectors=0)
 */
    __pyx_t_4 = PyNumber_Subtract(__pyx_v_y, __pyx_v_siy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_iy = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2176
 *       iy = y - siy
 * 
 *       wpos = cinside(rx, ry, sxprim, syprim, ix, iy, nthreads, vectors=0)             # <<<<<<<<<<<<<<
 *     elif (teles.primary_shape == 'anular'):
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_cinside); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_rx);
    __Pyx_GIVEREF(__pyx_v_rx);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_rx);
    __Pyx_INCREF(__pyx_v_ry);
    __Pyx_GIVEREF(__pyx_v_ry);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_ry);
    __Pyx_INCREF(__pyx_v_sxprim);
    __Pyx_GIVEREF(__pyx_v_sxprim);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_sxprim);
    __Pyx_INCREF(__pyx_v_syprim);
    __Pyx_GIVEREF(__pyx_v_syprim);
    PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_v_syprim);
    __Pyx_INCREF(__pyx_v_ix);
    __Pyx_GIVEREF(__pyx_v_ix);
    PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_v_ix);
    __Pyx_INCREF(__pyx_v_iy);
    __Pyx_GIVEREF(__pyx_v_iy);
    PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_v_iy);
    __Pyx_INCREF(__pyx_v_nthreads);
    __Pyx_GIVEREF(__pyx_v_nthreads);
    PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_v_nthreads);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_vectors, __pyx_int_0) < 0) __PYX_ERR(0, 2176, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_wpos = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2164
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):
 *     if (teles.primary_shape == 'hexagonal'):             # <<<<<<<<<<<<<<
 * 
 *       hangs = np.arange(6) * np.pi / 3. + np.pi/6.
 */
    goto __pyx_L3;
  }

  /* "mirror_lib_v04.pyx":2177
 * 
 *       wpos = cinside(rx, ry, sxprim, syprim, ix, iy, nthreads, vectors=0)
 *     elif (teles.primary_shape == 'anular'):             # <<<<<<<<<<<<<<
 * 
 *       rix = np.ones((1,)) * teles.rad_min
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_primary_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_anular, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2177, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":2179
 *     elif (teles.primary_shape == 'anular'):
 * 
 *       rix = np.ones((1,)) * teles.rad_min             # <<<<<<<<<<<<<<
 *       riy = np.ones((1,)) * teles.rad_min
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ones); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_rad_min); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_rix = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2180
 * 
 *       rix = np.ones((1,)) * teles.rad_min
 *       riy = np.ones((1,)) * teles.rad_min             # <<<<<<<<<<<<<<
 * 
 *       rex = np.ones((1,)) * teles.rad_max
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ones); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_rad_min); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_riy = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2182
 *       riy = np.ones((1,)) * teles.rad_min
 * 
 *       rex = np.ones((1,)) * teles.rad_max             # <<<<<<<<<<<<<<
 *       rey = np.ones((1,)) * teles.rad_max
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_rad_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rex = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2183
 * 
 *       rex = np.ones((1,)) * teles.rad_max
 *       rey = np.ones((1,)) * teles.rad_max             # <<<<<<<<<<<<<<
 * 
 *       ix = x - six
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ones); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_tuple__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_tuple__13);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_teles, __pyx_n_s_rad_max); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_rey = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2185
 *       rey = np.ones((1,)) * teles.rad_max
 * 
 *       ix = x - six             # <<<<<<<<<<<<<<
 *       iy = y - siy
 * 
 */
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_x, __pyx_v_six); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2185, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_ix = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2186
 * 
 *       ix = x - six
 *       iy = y - siy             # <<<<<<<<<<<<<<
 * 
 *       wpos = cinside(rix, riy, rex, rey, ix, iy, nthreads, vectors=0)
 */
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_y, __pyx_v_siy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_iy = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2188
 *       iy = y - siy
 * 
 *       wpos = cinside(rix, riy, rex, rey, ix, iy, nthreads, vectors=0)             # <<<<<<<<<<<<<<
 * 
 *     return wpos
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_cinside); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_rix);
    __Pyx_GIVEREF(__pyx_v_rix);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_rix);
    __Pyx_INCREF(__pyx_v_riy);
    __Pyx_GIVEREF(__pyx_v_riy);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_riy);
    __Pyx_INCREF(__pyx_v_rex);
    __Pyx_GIVEREF(__pyx_v_rex);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_rex);
    __Pyx_INCREF(__pyx_v_rey);
    __Pyx_GIVEREF(__pyx_v_rey);
    PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_v_rey);
    __Pyx_INCREF(__pyx_v_ix);
    __Pyx_GIVEREF(__pyx_v_ix);
    PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_v_ix);
    __Pyx_INCREF(__pyx_v_iy);
    __Pyx_GIVEREF(__pyx_v_iy);
    PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_v_iy);
    __Pyx_INCREF(__pyx_v_nthreads);
    __Pyx_GIVEREF(__pyx_v_nthreads);
    PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_v_nthreads);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_vectors, __pyx_int_0) < 0) __PYX_ERR(0, 2188, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_wpos = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2177
 * 
 *       wpos = cinside(rx, ry, sxprim, syprim, ix, iy, nthreads, vectors=0)
 *     elif (teles.primary_shape == 'anular'):             # <<<<<<<<<<<<<<
 * 
 *       rix = np.ones((1,)) * teles.rad_min
 */
  }
  __pyx_L3:;

  /* "mirror_lib_v04.pyx":2190
 *       wpos = cinside(rix, riy, rex, rey, ix, iy, nthreads, vectors=0)
 * 
 *     return wpos             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_wpos)) { __Pyx_RaiseUnboundLocalError("wpos"); __PYX_ERR(0, 2190, __pyx_L1_error) }
  __Pyx_INCREF(__pyx_v_wpos);
  __pyx_r = __pyx_v_wpos;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2163
 *     return resgx + ixpos, resgy + iypos, resrad, resarea
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):             # <<<<<<<<<<<<<<
 *     if (teles.primary_shape == 'hexagonal'):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_geometry.check_primary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_hangs);
  __Pyx_XDECREF(__pyx_v_sxprim);
  __Pyx_XDECREF(__pyx_v_syprim);
  __Pyx_XDECREF(__pyx_v_rx);
  __Pyx_XDECREF(__pyx_v_ry);
  __Pyx_XDECREF(__pyx_v_ix);
  __Pyx_XDECREF(__pyx_v_iy);
  __Pyx_XDECREF(__pyx_v_wpos);
  __Pyx_XDECREF(__pyx_v_rix);
  __Pyx_XDECREF(__pyx_v_riy);
  __Pyx_XDECREF(__pyx_v_rex);
  __Pyx_XDECREF(__pyx_v_rey);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */

static PyObject *__pyx_pf_9pymirrors_24get_geometry(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_telescope, PyObject *__pyx_v_beam, PyObject *__pyx_v_secondary, PyObject *__pyx_v_segments, PyObject *__pyx_v_nthreads, PyObject *__pyx_v_osecondary, PyObject *__pyx_v_layout, PyObject *__pyx_v_check_rays) {
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *__pyx_cur_scope;
  PyObject *__pyx_v_stop = NULL;
  PyObject *__pyx_v_x1d = NULL;
  PyObject *__pyx_v_y1d = NULL;
  PyObject *__pyx_v_rad1d = NULL;
  PyObject *__pyx_v_area1d = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fg = NULL;
  PyObject *__pyx_v_ax = NULL;
  PyObject *__pyx_v_ww = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_check_primary_id = 0;
  PyObject *__pyx_v_check_primary = 0;
  PyObject *__pyx_v_ntot = NULL;
  PyObject *__pyx_v_fg1 = NULL;
  PyObject *__pyx_v_ax1 = NULL;
  PyObject *__pyx_v_fg2 = NULL;
  PyObject *__pyx_v_ax2 = NULL;
  PyObject *__pyx_v_it_sgm = NULL;
  PyObject *__pyx_v_tm1 = NULL;
  PyObject *__pyx_v_wpos = NULL;
  PyObject *__pyx_v_wwn = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_rad = NULL;
  PyObject *__pyx_v_area = NULL;
  PyObject *__pyx_v_th = NULL;
  PyObject *__pyx_v_cs = NULL;
  PyObject *__pyx_v_sn = NULL;
  PyObject *__pyx_v_x1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_y1 = NULL;
  PyObject *__pyx_v_dir_cos_i = NULL;
  PyObject *__pyx_v_dir_cos_n1 = NULL;
  PyObject *__pyx_v_z_1 = NULL;
  PyObject *__pyx_v_i_1 = NULL;
  PyObject *__pyx_v_dir_cos_o1 = NULL;
  PyObject *__pyx_v_x2 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_z_2 = NULL;
  PyObject *__pyx_v_dir_cos_n2 = NULL;
  PyObject *__pyx_v_i_2 = NULL;
  PyObject *__pyx_v_y2 = NULL;
  PyObject *__pyx_v_x_sec = NULL;
  PyObject *__pyx_v_y_sec = NULL;
  PyObject *__pyx_v_tm2 = NULL;
  PyObject *__pyx_v_isin = NULL;
  PyObject *__pyx_v_tm3 = NULL;
  PyObject *__pyx_v_tm4 = NULL;
  PyObject *__pyx_v_txt = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_uts = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  Py_ssize_t __pyx_t_14;
  PyObject *(*__pyx_t_15)(PyObject *);
  Py_ssize_t __pyx_t_16;
  Py_UCS4 __pyx_t_17;
  __Pyx_RefNannySetupContext("get_geometry", 0);
  __pyx_cur_scope = (struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)__pyx_tp_new_9pymirrors___pyx_scope_struct__get_geometry(__pyx_ptype_9pymirrors___pyx_scope_struct__get_geometry, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1946, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_telescope = __pyx_v_telescope;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_telescope);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_telescope);

  /* "mirror_lib_v04.pyx":1949
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 *   from pdb import set_trace as stop             # <<<<<<<<<<<<<<
 * ###<OBSOLETE>::#
 * ###<OBSOLETE>::  x1d, y1d, d1s, d2s = get_primary_rays(layout, telescope)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_set_trace);
  __Pyx_GIVEREF(__pyx_n_s_set_trace);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_set_trace);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pdb, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_set_trace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_stop = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":1956
 * ###<OBSOLETE>::  segments.d21d = d2s * 1.
 * ###<OBSOLETE>::#
 *   x1d, y1d, rad1d, area1d = get_primary_rays(layout, telescope)             # <<<<<<<<<<<<<<
 * #
 *   if (osecondary==True):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_get_primary_rays); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_layout, __pyx_cur_scope->__pyx_v_telescope};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1956, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_layout, __pyx_cur_scope->__pyx_v_telescope};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1956, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_layout);
    __Pyx_GIVEREF(__pyx_v_layout);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_layout);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_telescope);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_telescope);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_cur_scope->__pyx_v_telescope);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 4)) {
      if (size > 4) __Pyx_RaiseTooManyValuesError(4);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1956, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 3); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      __pyx_t_6 = PyList_GET_ITEM(sequence, 3); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_6);
    #else
    {
      Py_ssize_t i;
      PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_5,&__pyx_t_3,&__pyx_t_6};
      for (i=0; i < 4; i++) {
        PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 1956, __pyx_L1_error)
        __Pyx_GOTREF(item);
        *(temps[i]) = item;
      }
    }
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    Py_ssize_t index = -1;
    PyObject** temps[4] = {&__pyx_t_1,&__pyx_t_5,&__pyx_t_3,&__pyx_t_6};
    __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
    for (index=0; index < 4; index++) {
      PyObject* item = __pyx_t_8(__pyx_t_7); if (unlikely(!item)) goto __pyx_L3_unpacking_failed;
      __Pyx_GOTREF(item);
      *(temps[index]) = item;
    }
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 4) < 0) __PYX_ERR(0, 1956, __pyx_L1_error)
    __pyx_t_8 = NULL;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1956, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_x1d = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_y1d = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_v_rad1d = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_area1d = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":1958
 *   x1d, y1d, rad1d, area1d = get_primary_rays(layout, telescope)
 * #
 *   if (osecondary==True):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_osecondary, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":1959
 * #
 *   if (osecondary==True):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     pl.figure(1)
 *     pl.clf()
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1960
 *   if (osecondary==True):
 *     print(" !! PLOT !!")
 *     pl.figure(1)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pl); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_figure); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_int_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_int_1);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1961
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.contour(secondary.mirror.T, [0.5], extent=[np.min(secondary.x) \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_clf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":1962
 *     pl.figure(1)
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)             # <<<<<<<<<<<<<<
 *     ax.contour(secondary.mirror.T, [0.5], extent=[np.min(secondary.x) \
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pl); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_subplots); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 1962, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 1962, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_num, __pyx_int_1) < 0) __PYX_ERR(0, 1962, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
      PyObject* sequence = __pyx_t_3;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1962, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_2 = __pyx_t_8(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_5); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1962, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1962, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __pyx_v_fg = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_v_ax = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1963
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.contour(secondary.mirror.T, [0.5], extent=[np.min(secondary.x) \             # <<<<<<<<<<<<<<
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_contour); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_mirror); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_T); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_float_0_5);
    __Pyx_GIVEREF(__pyx_float_0_5);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_float_0_5);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_2 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_min); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_2 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_10, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "mirror_lib_v04.pyx":1964
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.contour(secondary.mirror.T, [0.5], extent=[np.min(secondary.x) \
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')             # <<<<<<<<<<<<<<
 * 
 *   if (check_rays):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_max); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_7 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_11, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_max); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
      }
    }
    __pyx_t_10 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_12, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_min); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
      }
    }
    __pyx_t_11 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_13, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":1963
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.contour(secondary.mirror.T, [0.5], extent=[np.min(secondary.x) \             # <<<<<<<<<<<<<<
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')
 * 
 */
    __pyx_t_12 = PyList_New(4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_12, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_7);
    PyList_SET_ITEM(__pyx_t_12, 1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_10);
    PyList_SET_ITEM(__pyx_t_12, 2, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_11);
    PyList_SET_ITEM(__pyx_t_12, 3, __pyx_t_11);
    __pyx_t_2 = 0;
    __pyx_t_7 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_extent, __pyx_t_12) < 0) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_colors, __pyx_n_u_r) < 0) __PYX_ERR(0, 1963, __pyx_L1_error)
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":1958
 *   x1d, y1d, rad1d, area1d = get_primary_rays(layout, telescope)
 * #
 *   if (osecondary==True):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 */
  }

  /* "mirror_lib_v04.pyx":1966
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 * 
 *     print(" !! PLOT !!")
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1966, __pyx_L1_error)
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":1968
 *   if (check_rays):
 * 
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     pl.figure(1)
 *     pl.clf()
 */
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":1969
 * 
 *     print(" !! PLOT !!")
 *     pl.figure(1)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pl); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_figure); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_12 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_int_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_int_1);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":1970
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pl); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_clf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_12 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":1971
 *     pl.figure(1)
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)             # <<<<<<<<<<<<<<
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_pl); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_subplots); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 1971, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 1971, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_num, __pyx_int_1) < 0) __PYX_ERR(0, 1971, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_empty_tuple, __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
      PyObject* sequence = __pyx_t_5;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1971, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_12 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_12 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_12 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
      index = 0; __pyx_t_12 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_12)) goto __pyx_L9_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_12);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_6)) goto __pyx_L9_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_3), 2) < 0) __PYX_ERR(0, 1971, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L10_unpacking_done;
      __pyx_L9_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1971, __pyx_L1_error)
      __pyx_L10_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_fg, __pyx_t_12);
    __pyx_t_12 = 0;
    __Pyx_XDECREF_SET(__pyx_v_ax, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":1972
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=1)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)             # <<<<<<<<<<<<<<
 * 
 * # First of all, we remove all the rays that come from behind the secondary:
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_scatter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_x1d);
    __Pyx_GIVEREF(__pyx_v_x1d);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_x1d);
    __Pyx_INCREF(__pyx_v_y1d);
    __Pyx_GIVEREF(__pyx_v_y1d);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_y1d);
    __pyx_t_12 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_color, __pyx_n_u_k) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_s, __pyx_float_0_1) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_edgecolor, Py_None) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, __pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1966
 *         , np.max(secondary.x), np.max(secondary.y), np.min(secondary.y)],colors='r')
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 * 
 *     print(" !! PLOT !!")
 */
  }

  /* "mirror_lib_v04.pyx":1982
 * #  pl.plot(x1d, y1d, color='magenta', marker='s')
 * ########################  x1d, y1d = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x1d, y1d, nthreads, complementary=1, verbose=1)
 *   ww = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x1d, y1d, nthreads, complementary=1, verbose=1, vectors=0)             # <<<<<<<<<<<<<<
 * 
 *   if (len(ww)>0):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_cinside); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_isx); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_isy); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_esx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_esy); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_10 = PyTuple_New(7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_11);
  __Pyx_INCREF(__pyx_v_x1d);
  __Pyx_GIVEREF(__pyx_v_x1d);
  PyTuple_SET_ITEM(__pyx_t_10, 4, __pyx_v_x1d);
  __Pyx_INCREF(__pyx_v_y1d);
  __Pyx_GIVEREF(__pyx_v_y1d);
  PyTuple_SET_ITEM(__pyx_t_10, 5, __pyx_v_y1d);
  __Pyx_INCREF(__pyx_v_nthreads);
  __Pyx_GIVEREF(__pyx_v_nthreads);
  PyTuple_SET_ITEM(__pyx_t_10, 6, __pyx_v_nthreads);
  __pyx_t_12 = 0;
  __pyx_t_6 = 0;
  __pyx_t_5 = 0;
  __pyx_t_11 = 0;
  __pyx_t_11 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (PyDict_SetItem(__pyx_t_11, __pyx_n_s_complementary, __pyx_int_1) < 0) __PYX_ERR(0, 1982, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_11, __pyx_n_s_verbose, __pyx_int_1) < 0) __PYX_ERR(0, 1982, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_11, __pyx_n_s_vectors, __pyx_int_0) < 0) __PYX_ERR(0, 1982, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_ww = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":1984
 *   ww = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x1d, y1d, nthreads, complementary=1, verbose=1, vectors=0)
 * 
 *   if (len(ww)>0):             # <<<<<<<<<<<<<<
 *     x1d = x1d[ww] * 1.
 *     y1d = y1d[ww] * 1.
 */
  __pyx_t_14 = PyObject_Length(__pyx_v_ww); if (unlikely(__pyx_t_14 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1984, __pyx_L1_error)
  __pyx_t_9 = ((__pyx_t_14 > 0) != 0);
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":1985
 * 
 *   if (len(ww)>0):
 *     x1d = x1d[ww] * 1.             # <<<<<<<<<<<<<<
 *     y1d = y1d[ww] * 1.
 *     rad1d = rad1d[ww] * 1.
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_x1d, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_x1d, __pyx_t_11);
    __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":1986
 *   if (len(ww)>0):
 *     x1d = x1d[ww] * 1.
 *     y1d = y1d[ww] * 1.             # <<<<<<<<<<<<<<
 *     rad1d = rad1d[ww] * 1.
 *     area1d = area1d[ww] * 1.
 */
    __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_y1d, __pyx_v_ww); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_11, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF_SET(__pyx_v_y1d, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1987
 *     x1d = x1d[ww] * 1.
 *     y1d = y1d[ww] * 1.
 *     rad1d = rad1d[ww] * 1.             # <<<<<<<<<<<<<<
 *     area1d = area1d[ww] * 1.
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_rad1d, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1987, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1987, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_rad1d, __pyx_t_11);
    __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":1988
 *     y1d = y1d[ww] * 1.
 *     rad1d = rad1d[ww] * 1.
 *     area1d = area1d[ww] * 1.             # <<<<<<<<<<<<<<
 * 
 * #  pl.plot(x1d, y1d, color='cyan', marker='x')
 */
    __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_area1d, __pyx_v_ww); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1988, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_11, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1988, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF_SET(__pyx_v_area1d, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1984
 *   ww = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x1d, y1d, nthreads, complementary=1, verbose=1, vectors=0)
 * 
 *   if (len(ww)>0):             # <<<<<<<<<<<<<<
 *     x1d = x1d[ww] * 1.
 *     y1d = y1d[ww] * 1.
 */
  }

  /* "mirror_lib_v04.pyx":1996
 * #
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1996, __pyx_L1_error)
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":1997
 * 
 *   if (check_rays):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)
 *     pl.figure(2)
 */
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1998
 *   if (check_rays):
 *     print(" !! PLOT !!")
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)             # <<<<<<<<<<<<<<
 *     pl.figure(2)
 *     pl.clf()
 */
    if (unlikely(!__pyx_v_ax)) { __Pyx_RaiseUnboundLocalError("ax"); __PYX_ERR(0, 1998, __pyx_L1_error) }
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_scatter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1998, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1998, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_INCREF(__pyx_v_x1d);
    __Pyx_GIVEREF(__pyx_v_x1d);
    PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_v_x1d);
    __Pyx_INCREF(__pyx_v_y1d);
    __Pyx_GIVEREF(__pyx_v_y1d);
    PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_v_y1d);
    __pyx_t_10 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1998, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_color, __pyx_n_u_r) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_s, __pyx_float_0_1) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_edgecolor, Py_None) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, __pyx_t_10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1998, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":1999
 *     print(" !! PLOT !!")
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)
 *     pl.figure(2)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=2)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_pl); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_figure); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
      }
    }
    __pyx_t_3 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_10, __pyx_int_2) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_int_2);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2000
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)
 *     pl.figure(2)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=2)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_pl); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_clf); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_3 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_10);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2001
 *     pl.figure(2)
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=2)             # <<<<<<<<<<<<<<
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     stop()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_subplots); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 2001, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 2001, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_num, __pyx_int_2) < 0) __PYX_ERR(0, 2001, __pyx_L1_error)
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_11))) || (PyList_CheckExact(__pyx_t_11))) {
      PyObject* sequence = __pyx_t_11;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2001, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_10);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2001, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2001, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      #endif
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(__pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2001, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L13_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_10 = __pyx_t_8(__pyx_t_5); if (unlikely(!__pyx_t_10)) goto __pyx_L13_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_5), 2) < 0) __PYX_ERR(0, 2001, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L14_unpacking_done;
      __pyx_L13_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2001, __pyx_L1_error)
      __pyx_L14_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_fg, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_ax, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2002
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=2)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)             # <<<<<<<<<<<<<<
 *     stop()
 * 
 */
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_scatter); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_v_x1d);
    __Pyx_GIVEREF(__pyx_v_x1d);
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_x1d);
    __Pyx_INCREF(__pyx_v_y1d);
    __Pyx_GIVEREF(__pyx_v_y1d);
    PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_y1d);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_color, __pyx_n_u_k) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_s, __pyx_float_0_1) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_edgecolor, Py_None) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_10, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2003
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=2)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     stop()             # <<<<<<<<<<<<<<
 * 
 * ###<OBSOLETE>::#
 */
    __Pyx_INCREF(__pyx_v_stop);
    __pyx_t_3 = __pyx_v_stop; __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2003, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":1996
 * #
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     ax.scatter(x1d,y1d,color='r', s=0.1, edgecolor=None)
 */
  }

  /* "mirror_lib_v04.pyx":2080
 * ###<OBSOLETE>::
 * #
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):             # <<<<<<<<<<<<<<
 * #
 *     if (iteles.primary_shape == 'hexagonal'):
 */
  __pyx_t_5 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_12get_geometry_1check_primary_id, 0, __pyx_n_s_get_geometry_locals_check_primar, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__84)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v_check_primary_id = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":2163
 *     return resgx + ixpos, resgy + iypos, resrad, resarea
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):             # <<<<<<<<<<<<<<
 *     if (teles.primary_shape == 'hexagonal'):
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_12get_geometry_3check_primary, 0, __pyx_n_s_get_geometry_locals_check_primar_2, ((PyObject*)__pyx_cur_scope), __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__86)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v_check_primary = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":2193
 * 
 * 
 *   ntot=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_ntot = __pyx_int_0;

  /* "mirror_lib_v04.pyx":2196
 * 
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2196, __pyx_L1_error)
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":2197
 * 
 *   if (check_rays):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     pl.figure(1)
 *     pl.clf()
 */
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2198
 *   if (check_rays):
 *     print(" !! PLOT !!")
 *     pl.figure(1)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     pl.figure(2)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_figure); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_int_1) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_int_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2199
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     pl.figure(2)
 *     pl.clf()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_pl); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_clf); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2200
 *     pl.figure(1)
 *     pl.clf()
 *     pl.figure(2)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     fg1, ax1 = pl.subplots(num=1,nrows=1,ncols=1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_figure); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_int_2) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_int_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2201
 *     pl.clf()
 *     pl.figure(2)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     fg1, ax1 = pl.subplots(num=1,nrows=1,ncols=1)
 *     fg2, ax2 = pl.subplots(num=2,nrows=1,ncols=1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_pl); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_clf); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2202
 *     pl.figure(2)
 *     pl.clf()
 *     fg1, ax1 = pl.subplots(num=1,nrows=1,ncols=1)             # <<<<<<<<<<<<<<
 *     fg2, ax2 = pl.subplots(num=2,nrows=1,ncols=1)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pl); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_subplots); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_num, __pyx_int_1) < 0) __PYX_ERR(0, 2202, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 2202, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 2202, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_10))) || (PyList_CheckExact(__pyx_t_10))) {
      PyObject* sequence = __pyx_t_10;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2202, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2202, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_5)) goto __pyx_L16_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_3 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_3)) goto __pyx_L16_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_11), 2) < 0) __PYX_ERR(0, 2202, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L17_unpacking_done;
      __pyx_L16_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2202, __pyx_L1_error)
      __pyx_L17_unpacking_done:;
    }
    __pyx_v_fg1 = __pyx_t_5;
    __pyx_t_5 = 0;
    __pyx_v_ax1 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2203
 *     pl.clf()
 *     fg1, ax1 = pl.subplots(num=1,nrows=1,ncols=1)
 *     fg2, ax2 = pl.subplots(num=2,nrows=1,ncols=1)             # <<<<<<<<<<<<<<
 * 
 *     pl.figure(5)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_pl); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_subplots); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_num, __pyx_int_2) < 0) __PYX_ERR(0, 2203, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 2203, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 2203, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
      PyObject* sequence = __pyx_t_5;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2203, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2203, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2203, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2203, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_10 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_10)) goto __pyx_L18_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      index = 1; __pyx_t_3 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_3)) goto __pyx_L18_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_11), 2) < 0) __PYX_ERR(0, 2203, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L19_unpacking_done;
      __pyx_L18_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2203, __pyx_L1_error)
      __pyx_L19_unpacking_done:;
    }
    __pyx_v_fg2 = __pyx_t_10;
    __pyx_t_10 = 0;
    __pyx_v_ax2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2205
 *     fg2, ax2 = pl.subplots(num=2,nrows=1,ncols=1)
 * 
 *     pl.figure(5)             # <<<<<<<<<<<<<<
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=5)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2205, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_figure); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2205, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_int_5) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_int_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2205, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2206
 * 
 *     pl.figure(5)
 *     pl.clf()             # <<<<<<<<<<<<<<
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=5)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_pl); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_clf); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2207
 *     pl.figure(5)
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=5)             # <<<<<<<<<<<<<<
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     pl.draw()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pl); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_subplots); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_ncols, __pyx_int_1) < 0) __PYX_ERR(0, 2207, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_nrows, __pyx_int_1) < 0) __PYX_ERR(0, 2207, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_num, __pyx_int_5) < 0) __PYX_ERR(0, 2207, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_10))) || (PyList_CheckExact(__pyx_t_10))) {
      PyObject* sequence = __pyx_t_10;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2207, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2207, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2207, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2207, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_5)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_3 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_3)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_11), 2) < 0) __PYX_ERR(0, 2207, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L21_unpacking_done;
      __pyx_L20_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2207, __pyx_L1_error)
      __pyx_L21_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_fg, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_ax, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2208
 *     pl.clf()
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=5)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)             # <<<<<<<<<<<<<<
 *     pl.draw()
 *     print('?')
 */
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_scatter); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_x1d);
    __Pyx_GIVEREF(__pyx_v_x1d);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x1d);
    __Pyx_INCREF(__pyx_v_y1d);
    __Pyx_GIVEREF(__pyx_v_y1d);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_y1d);
    __pyx_t_5 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_color, __pyx_n_u_k) < 0) __PYX_ERR(0, 2208, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_s, __pyx_float_0_1) < 0) __PYX_ERR(0, 2208, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_edgecolor, Py_None) < 0) __PYX_ERR(0, 2208, __pyx_L1_error)
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2209
 *     fg,ax=pl.subplots(ncols=1, nrows=1, num=5)
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     pl.draw()             # <<<<<<<<<<<<<<
 *     print('?')
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pl); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_draw); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_11 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2210
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     pl.draw()
 *     print('?')             # <<<<<<<<<<<<<<
 * 
 *   for it_sgm in range(segments.N):
 */
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2196
 * 
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     pl.figure(1)
 */
  }

  /* "mirror_lib_v04.pyx":2212
 *     print('?')
 * 
 *   for it_sgm in range(segments.N):             # <<<<<<<<<<<<<<
 * 
 *     tm1 = tm.time()
 */
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_N); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_11 = __pyx_t_3; __Pyx_INCREF(__pyx_t_11); __pyx_t_14 = 0;
    __pyx_t_15 = NULL;
  } else {
    __pyx_t_14 = -1; __pyx_t_11 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2212, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_15 = Py_TYPE(__pyx_t_11)->tp_iternext; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2212, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_15)) {
      if (likely(PyList_CheckExact(__pyx_t_11))) {
        if (__pyx_t_14 >= PyList_GET_SIZE(__pyx_t_11)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_11, __pyx_t_14); __Pyx_INCREF(__pyx_t_3); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 2212, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_11, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2212, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_14 >= PyTuple_GET_SIZE(__pyx_t_11)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_11, __pyx_t_14); __Pyx_INCREF(__pyx_t_3); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 2212, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_11, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2212, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_15(__pyx_t_11);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 2212, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_it_sgm, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2214
 *   for it_sgm in range(segments.N):
 * 
 *     tm1 = tm.time()             # <<<<<<<<<<<<<<
 *     ######x, y = check_primary_id(telescope\
 *     ######   , segments.xpos[it_sgm], segments.ypos[it_sgm], x1d, y1d)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_tm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_time); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_10);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tm1, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2224
 * 
 * 
 *     wpos = check_primary(telescope, segments.xpos[it_sgm], segments.ypos[it_sgm], x1d, y1d, nthreads)             # <<<<<<<<<<<<<<
 * 
 *     ww = np.where(wpos>0.5)[0]
 */
    __pyx_t_3 = __pyx_cur_scope->__pyx_v_telescope;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_xpos); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_10, __pyx_v_it_sgm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_ypos); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_10, __pyx_v_it_sgm); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __pyx_pf_9pymirrors_12get_geometry_2check_primary(__pyx_v_check_primary, __pyx_t_3, __pyx_t_5, __pyx_t_6, __pyx_v_x1d, __pyx_v_y1d, __pyx_v_nthreads); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_wpos, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2226
 *     wpos = check_primary(telescope, segments.xpos[it_sgm], segments.ypos[it_sgm], x1d, y1d, nthreads)
 * 
 *     ww = np.where(wpos>0.5)[0]             # <<<<<<<<<<<<<<
 *     if (len(ww)>0):
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_wpos, __pyx_float_0_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2226, __pyx_L1_error)
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_10 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_10, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2227
 * 
 *     ww = np.where(wpos>0.5)[0]
 *     if (len(ww)>0):             # <<<<<<<<<<<<<<
 * 
 *       wwn = np.where(wpos<0.5)[0]
 */
    __pyx_t_16 = PyObject_Length(__pyx_v_ww); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2227, __pyx_L1_error)
    __pyx_t_9 = ((__pyx_t_16 > 0) != 0);
    if (__pyx_t_9) {

      /* "mirror_lib_v04.pyx":2229
 *     if (len(ww)>0):
 * 
 *       wwn = np.where(wpos<0.5)[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_where); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyObject_RichCompare(__pyx_v_wpos, __pyx_float_0_5, Py_LT); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2229, __pyx_L1_error)
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_10);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_wwn, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2232
 * 
 * 
 *       x = x1d[ww] * 1.             # <<<<<<<<<<<<<<
 *       y = y1d[ww] * 1.
 *       rad = rad1d[ww] * 1.
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_x1d, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "mirror_lib_v04.pyx":2233
 * 
 *       x = x1d[ww] * 1.
 *       y = y1d[ww] * 1.             # <<<<<<<<<<<<<<
 *       rad = rad1d[ww] * 1.
 *       area = area1d[ww] * 1.
 */
      __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_y1d, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2234
 *       x = x1d[ww] * 1.
 *       y = y1d[ww] * 1.
 *       rad = rad1d[ww] * 1.             # <<<<<<<<<<<<<<
 *       area = area1d[ww] * 1.
 *       print("")
 */
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_rad1d, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyNumber_Multiply(__pyx_t_6, __pyx_float_1_); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_rad, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "mirror_lib_v04.pyx":2235
 *       y = y1d[ww] * 1.
 *       rad = rad1d[ww] * 1.
 *       area = area1d[ww] * 1.             # <<<<<<<<<<<<<<
 *       print("")
 *       print(x1d.size, ww.size, wwn.size)
 */
      __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_area1d, __pyx_v_ww); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_area, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2236
 *       rad = rad1d[ww] * 1.
 *       area = area1d[ww] * 1.
 *       print("")             # <<<<<<<<<<<<<<
 *       print(x1d.size, ww.size, wwn.size)
 *       print("")
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2236, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2237
 *       area = area1d[ww] * 1.
 *       print("")
 *       print(x1d.size, ww.size, wwn.size)             # <<<<<<<<<<<<<<
 *       print("")
 *       x1d = x1d[wwn] * 1.
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x1d, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ww, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_wwn, __pyx_n_s_size); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_10);
      __pyx_t_6 = 0;
      __pyx_t_5 = 0;
      __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2238
 *       print("")
 *       print(x1d.size, ww.size, wwn.size)
 *       print("")             # <<<<<<<<<<<<<<
 *       x1d = x1d[wwn] * 1.
 *       y1d = y1d[wwn] * 1.
 */
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2239
 *       print(x1d.size, ww.size, wwn.size)
 *       print("")
 *       x1d = x1d[wwn] * 1.             # <<<<<<<<<<<<<<
 *       y1d = y1d[wwn] * 1.
 *       rad1d = rad1d[wwn] * 1.
 */
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_x1d, __pyx_v_wwn); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2239, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = PyNumber_Multiply(__pyx_t_10, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2239, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF_SET(__pyx_v_x1d, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":2240
 *       print("")
 *       x1d = x1d[wwn] * 1.
 *       y1d = y1d[wwn] * 1.             # <<<<<<<<<<<<<<
 *       rad1d = rad1d[wwn] * 1.
 *       area1d = area1d[wwn] * 1.
 */
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_y1d, __pyx_v_wwn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2240, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2240, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF_SET(__pyx_v_y1d, __pyx_t_10);
      __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2241
 *       x1d = x1d[wwn] * 1.
 *       y1d = y1d[wwn] * 1.
 *       rad1d = rad1d[wwn] * 1.             # <<<<<<<<<<<<<<
 *       area1d = area1d[wwn] * 1.
 * 
 */
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_rad1d, __pyx_v_wwn); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = PyNumber_Multiply(__pyx_t_10, __pyx_float_1_); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF_SET(__pyx_v_rad1d, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":2242
 *       y1d = y1d[wwn] * 1.
 *       rad1d = rad1d[wwn] * 1.
 *       area1d = area1d[wwn] * 1.             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_area1d, __pyx_v_wwn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF_SET(__pyx_v_area1d, __pyx_t_10);
      __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2227
 * 
 *     ww = np.where(wpos>0.5)[0]
 *     if (len(ww)>0):             # <<<<<<<<<<<<<<
 * 
 *       wwn = np.where(wpos<0.5)[0]
 */
    }

    /* "mirror_lib_v04.pyx":2256
 * 
 * 
 *     if (check_rays):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax1.scatter(x, y, s=5, edgecolor='none')
 */
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2256, __pyx_L1_error)
    if (__pyx_t_9) {

      /* "mirror_lib_v04.pyx":2257
 * 
 *     if (check_rays):
 *       print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *       ax1.scatter(x, y, s=5, edgecolor='none')
 * 
 */
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2257, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2258
 *     if (check_rays):
 *       print(" !! PLOT !!")
 *       ax1.scatter(x, y, s=5, edgecolor='none')             # <<<<<<<<<<<<<<
 * 
 *     #
 */
      if (unlikely(!__pyx_v_ax1)) { __Pyx_RaiseUnboundLocalError("ax1"); __PYX_ERR(0, 2258, __pyx_L1_error) }
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax1, __pyx_n_s_scatter); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 2258, __pyx_L1_error) }
      if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 2258, __pyx_L1_error) }
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x);
      __Pyx_INCREF(__pyx_v_y);
      __Pyx_GIVEREF(__pyx_v_y);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_y);
      __pyx_t_5 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_s, __pyx_int_5) < 0) __PYX_ERR(0, 2258, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_edgecolor, __pyx_n_u_none) < 0) __PYX_ERR(0, 2258, __pyx_L1_error)
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2256
 * 
 * 
 *     if (check_rays):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax1.scatter(x, y, s=5, edgecolor='none')
 */
    }

    /* "mirror_lib_v04.pyx":2264
 *     # ...containing the normal and incident ray
 * 
 *     th = np.arctan2(y, x)             # <<<<<<<<<<<<<<
 * 
 *     #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 2264, __pyx_L1_error) }
    if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 2264, __pyx_L1_error) }
    __pyx_t_5 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_y, __pyx_v_x};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2264, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_y, __pyx_v_x};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2264, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else
    #endif
    {
      __pyx_t_10 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2264, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_y);
      __Pyx_GIVEREF(__pyx_v_y);
      PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_4, __pyx_v_y);
      __Pyx_INCREF(__pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_4, __pyx_v_x);
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2264, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_th, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2268
 *     #
 *     # Rotate system:
 *     cs = np.cos(th)             # <<<<<<<<<<<<<<
 *     sn = np.sin(th)
 *     x1 = x * cs + y * sn
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2268, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2268, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_3, __pyx_v_th) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_v_th);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2268, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_cs, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2269
 *     # Rotate system:
 *     cs = np.cos(th)
 *     sn = np.sin(th)             # <<<<<<<<<<<<<<
 *     x1 = x * cs + y * sn
 *     y1 = x * (-sn) + y * cs
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_sin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_10, __pyx_v_th) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_th);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_sn, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2270
 *     cs = np.cos(th)
 *     sn = np.sin(th)
 *     x1 = x * cs + y * sn             # <<<<<<<<<<<<<<
 *     y1 = x * (-sn) + y * cs
 * 
 */
    if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 2270, __pyx_L1_error) }
    __pyx_t_6 = PyNumber_Multiply(__pyx_v_x, __pyx_v_cs); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 2270, __pyx_L1_error) }
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_y, __pyx_v_sn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = PyNumber_Add(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_x1, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2271
 *     sn = np.sin(th)
 *     x1 = x * cs + y * sn
 *     y1 = x * (-sn) + y * cs             # <<<<<<<<<<<<<<
 * 
 *     # Director cosines for input beam:
 */
    if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 2271, __pyx_L1_error) }
    __pyx_t_10 = PyNumber_Negative(__pyx_v_sn); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_x, __pyx_t_10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 2271, __pyx_L1_error) }
    __pyx_t_10 = PyNumber_Multiply(__pyx_v_y, __pyx_v_cs); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_6 = PyNumber_Add(__pyx_t_3, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_y1, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2274
 * 
 *     # Director cosines for input beam:
 *     dir_cos_i = get_direction_cosines(beam.l_inc, beam.m_inc \             # <<<<<<<<<<<<<<
 *         , beam.n_inc)[:,None]*np.ones(x1.size, dtype=np.float64)[None,:]
 *     dir_cos_n1, z_1 = new2_get_gcurv(x1,k=telescope.k_1,r=telescope.rc_1 \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_get_direction_cosines); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_beam, __pyx_n_s_l_inc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_beam, __pyx_n_s_m_inc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);

    /* "mirror_lib_v04.pyx":2275
 *     # Director cosines for input beam:
 *     dir_cos_i = get_direction_cosines(beam.l_inc, beam.m_inc \
 *         , beam.n_inc)[:,None]*np.ones(x1.size, dtype=np.float64)[None,:]             # <<<<<<<<<<<<<<
 *     dir_cos_n1, z_1 = new2_get_gcurv(x1,k=telescope.k_1,r=telescope.rc_1 \
 *         , norm=True)
 */
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_beam, __pyx_n_s_n_inc); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_t_3, __pyx_t_5, __pyx_t_12};
      __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2274, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_t_3, __pyx_t_5, __pyx_t_12};
      __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2274, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2274, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_7) {
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_4, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_4, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_4, __pyx_t_12);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __pyx_t_12 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2274, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_tuple__43); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_ones); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x1, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_float64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_dtype, __pyx_t_3) < 0) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_12, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_tuple__44); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_10, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_dir_cos_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2276
 *     dir_cos_i = get_direction_cosines(beam.l_inc, beam.m_inc \
 *         , beam.n_inc)[:,None]*np.ones(x1.size, dtype=np.float64)[None,:]
 *     dir_cos_n1, z_1 = new2_get_gcurv(x1,k=telescope.k_1,r=telescope.rc_1 \             # <<<<<<<<<<<<<<
 *         , norm=True)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_new2_get_gcurv); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_x1);
    __Pyx_GIVEREF(__pyx_v_x1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_x1);
    __pyx_t_10 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_k_1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_k, __pyx_t_12) < 0) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_rc_1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_r, __pyx_t_12) < 0) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2277
 *         , beam.n_inc)[:,None]*np.ones(x1.size, dtype=np.float64)[None,:]
 *     dir_cos_n1, z_1 = new2_get_gcurv(x1,k=telescope.k_1,r=telescope.rc_1 \
 *         , norm=True)             # <<<<<<<<<<<<<<
 * 
 *     i_1 = np.arccos(np.sum(dir_cos_n1*dir_cos_i,axis=0))
 */
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_norm, Py_True) < 0) __PYX_ERR(0, 2276, __pyx_L1_error)

    /* "mirror_lib_v04.pyx":2276
 *     dir_cos_i = get_direction_cosines(beam.l_inc, beam.m_inc \
 *         , beam.n_inc)[:,None]*np.ones(x1.size, dtype=np.float64)[None,:]
 *     dir_cos_n1, z_1 = new2_get_gcurv(x1,k=telescope.k_1,r=telescope.rc_1 \             # <<<<<<<<<<<<<<
 *         , norm=True)
 * 
 */
    __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_10); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
      PyObject* sequence = __pyx_t_12;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2276, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
      index = 0; __pyx_t_10 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_10)) goto __pyx_L26_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_6)) goto __pyx_L26_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_3), 2) < 0) __PYX_ERR(0, 2276, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L27_unpacking_done;
      __pyx_L26_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2276, __pyx_L1_error)
      __pyx_L27_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_dir_cos_n1, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_z_1, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2279
 *         , norm=True)
 * 
 *     i_1 = np.arccos(np.sum(dir_cos_n1*dir_cos_i,axis=0))             # <<<<<<<<<<<<<<
 * 
 *     dir_cos_o1 = rotate_2d(dir_cos_i, -2 * i_1 * np.sign(x1))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_arccos); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_v_dir_cos_n1, __pyx_v_dir_cos_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 2279, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_12 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_i_1, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2281
 *     i_1 = np.arccos(np.sum(dir_cos_n1*dir_cos_i,axis=0))
 * 
 *     dir_cos_o1 = rotate_2d(dir_cos_i, -2 * i_1 * np.sign(x1))             # <<<<<<<<<<<<<<
 * 
 *     x2, z_2, dir_cos_n2 = get_intersection(dir_cos_o1, x1, z_1 \
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_rotate_2d); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_5 = PyNumber_Multiply(__pyx_int_neg_2, __pyx_v_i_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sign); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_x1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_x1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_dir_cos_i, __pyx_t_3};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2281, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_dir_cos_i, __pyx_t_3};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2281, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2281, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_v_dir_cos_i);
      __Pyx_GIVEREF(__pyx_v_dir_cos_i);
      PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_dir_cos_i);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_5, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2281, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_dir_cos_o1, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2283
 *     dir_cos_o1 = rotate_2d(dir_cos_i, -2 * i_1 * np.sign(x1))
 * 
 *     x2, z_2, dir_cos_n2 = get_intersection(dir_cos_o1, x1, z_1 \             # <<<<<<<<<<<<<<
 *         , telescope.nrc_2, telescope.k_2, telescope.dmm)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_get_intersection); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2283, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);

    /* "mirror_lib_v04.pyx":2284
 * 
 *     x2, z_2, dir_cos_n2 = get_intersection(dir_cos_o1, x1, z_1 \
 *         , telescope.nrc_2, telescope.k_2, telescope.dmm)             # <<<<<<<<<<<<<<
 * 
 *     i_2 = np.arccos(np.sum(dir_cos_n2*dir_cos_o1,axis=0))
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_nrc_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2284, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_k_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2284, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_telescope, __pyx_n_s_dmm); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2284, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[7] = {__pyx_t_2, __pyx_v_dir_cos_o1, __pyx_v_x1, __pyx_v_z_1, __pyx_t_5, __pyx_t_3, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 6+__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_10)) {
      PyObject *__pyx_temp[7] = {__pyx_t_2, __pyx_v_dir_cos_o1, __pyx_v_x1, __pyx_v_z_1, __pyx_t_5, __pyx_t_3, __pyx_t_6};
      __pyx_t_12 = __Pyx_PyCFunction_FastCall(__pyx_t_10, __pyx_temp+1-__pyx_t_4, 6+__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else
    #endif
    {
      __pyx_t_7 = PyTuple_New(6+__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_2) {
        __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
      }
      __Pyx_INCREF(__pyx_v_dir_cos_o1);
      __Pyx_GIVEREF(__pyx_v_dir_cos_o1);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_4, __pyx_v_dir_cos_o1);
      __Pyx_INCREF(__pyx_v_x1);
      __Pyx_GIVEREF(__pyx_v_x1);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_4, __pyx_v_x1);
      __Pyx_INCREF(__pyx_v_z_1);
      __Pyx_GIVEREF(__pyx_v_z_1);
      PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_4, __pyx_v_z_1);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_7, 3+__pyx_t_4, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 4+__pyx_t_4, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_7, 5+__pyx_t_4, __pyx_t_6);
      __pyx_t_5 = 0;
      __pyx_t_3 = 0;
      __pyx_t_6 = 0;
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_7, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
      PyObject* sequence = __pyx_t_12;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 3)) {
        if (size > 3) __Pyx_RaiseTooManyValuesError(3);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 2283, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 2); 
      } else {
        __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 2); 
      }
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
      index = 0; __pyx_t_10 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_10)) goto __pyx_L28_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      index = 1; __pyx_t_7 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_7)) goto __pyx_L28_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      index = 2; __pyx_t_6 = __pyx_t_8(__pyx_t_3); if (unlikely(!__pyx_t_6)) goto __pyx_L28_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_3), 3) < 0) __PYX_ERR(0, 2283, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L29_unpacking_done;
      __pyx_L28_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 2283, __pyx_L1_error)
      __pyx_L29_unpacking_done:;
    }

    /* "mirror_lib_v04.pyx":2283
 *     dir_cos_o1 = rotate_2d(dir_cos_i, -2 * i_1 * np.sign(x1))
 * 
 *     x2, z_2, dir_cos_n2 = get_intersection(dir_cos_o1, x1, z_1 \             # <<<<<<<<<<<<<<
 *         , telescope.nrc_2, telescope.k_2, telescope.dmm)
 * 
 */
    __Pyx_XDECREF_SET(__pyx_v_x2, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_z_2, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_dir_cos_n2, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2286
 *         , telescope.nrc_2, telescope.k_2, telescope.dmm)
 * 
 *     i_2 = np.arccos(np.sum(dir_cos_n2*dir_cos_o1,axis=0))             # <<<<<<<<<<<<<<
 * 
 * # Not necessary here      dir_cos_f = rotate_2d(dir_cos_o1, 2 * i_2 * np.sign(x2))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_arccos); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sum); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_v_dir_cos_n2, __pyx_v_dir_cos_o1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 2286, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_12 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_i_2, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2295
 *     #
 *     # Back-rotate system:
 *     cs = np.cos(-th)             # <<<<<<<<<<<<<<
 *     sn = np.sin(-th)
 *     y2 = x2 * 0.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_cos); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Negative(__pyx_v_th); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_12 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_cs, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2296
 *     # Back-rotate system:
 *     cs = np.cos(-th)
 *     sn = np.sin(-th)             # <<<<<<<<<<<<<<
 *     y2 = x2 * 0.
 *     x_sec = x2 * cs + y2 * sn
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sin); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Negative(__pyx_v_th); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_12 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_sn, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2297
 *     cs = np.cos(-th)
 *     sn = np.sin(-th)
 *     y2 = x2 * 0.             # <<<<<<<<<<<<<<
 *     x_sec = x2 * cs + y2 * sn
 *     y_sec = x2 * (-sn) + y2 * cs
 */
    __pyx_t_12 = PyNumber_Multiply(__pyx_v_x2, __pyx_float_0_); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_XDECREF_SET(__pyx_v_y2, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2298
 *     sn = np.sin(-th)
 *     y2 = x2 * 0.
 *     x_sec = x2 * cs + y2 * sn             # <<<<<<<<<<<<<<
 *     y_sec = x2 * (-sn) + y2 * cs
 * 
 */
    __pyx_t_12 = PyNumber_Multiply(__pyx_v_x2, __pyx_v_cs); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_7 = PyNumber_Multiply(__pyx_v_y2, __pyx_v_sn); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = PyNumber_Add(__pyx_t_12, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_x_sec, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2299
 *     y2 = x2 * 0.
 *     x_sec = x2 * cs + y2 * sn
 *     y_sec = x2 * (-sn) + y2 * cs             # <<<<<<<<<<<<<<
 * 
 *     tm2 = tm.time()
 */
    __pyx_t_5 = PyNumber_Negative(__pyx_v_sn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyNumber_Multiply(__pyx_v_x2, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_v_y2, __pyx_v_cs); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_12 = PyNumber_Add(__pyx_t_7, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_y_sec, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2301
 *     y_sec = x2 * (-sn) + y2 * cs
 * 
 *     tm2 = tm.time()             # <<<<<<<<<<<<<<
 *     isin = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x_sec, y_sec, nthreads, vectors=0)
 *     tm3 = tm.time()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_tm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_time); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_12 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tm2, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2302
 * 
 *     tm2 = tm.time()
 *     isin = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x_sec, y_sec, nthreads, vectors=0)             # <<<<<<<<<<<<<<
 *     tm3 = tm.time()
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_cinside); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_isx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_isy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_esx); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_esy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = PyTuple_New(7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_x_sec);
    __Pyx_GIVEREF(__pyx_v_x_sec);
    PyTuple_SET_ITEM(__pyx_t_10, 4, __pyx_v_x_sec);
    __Pyx_INCREF(__pyx_v_y_sec);
    __Pyx_GIVEREF(__pyx_v_y_sec);
    PyTuple_SET_ITEM(__pyx_t_10, 5, __pyx_v_y_sec);
    __Pyx_INCREF(__pyx_v_nthreads);
    __Pyx_GIVEREF(__pyx_v_nthreads);
    PyTuple_SET_ITEM(__pyx_t_10, 6, __pyx_v_nthreads);
    __pyx_t_7 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_vectors, __pyx_int_0) < 0) __PYX_ERR(0, 2302, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_10, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_isin, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2303
 *     tm2 = tm.time()
 *     isin = cinside(secondary.isx, secondary.isy, secondary.esx, secondary.esy, x_sec, y_sec, nthreads, vectors=0)
 *     tm3 = tm.time()             # <<<<<<<<<<<<<<
 * 
 *     ww = np.where(isin > 0.5)[0]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_tm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_time); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_10);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tm3, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2305
 *     tm3 = tm.time()
 * 
 *     ww = np.where(isin > 0.5)[0]             # <<<<<<<<<<<<<<
 * 
 *     if (check_rays):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_where); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_RichCompare(__pyx_v_isin, __pyx_float_0_5, Py_GT); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2305, __pyx_L1_error)
    __pyx_t_12 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_6 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_12, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10);
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_ww, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2307
 *     ww = np.where(isin > 0.5)[0]
 * 
 *     if (check_rays):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')
 */
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2307, __pyx_L1_error)
    if (__pyx_t_9) {

      /* "mirror_lib_v04.pyx":2308
 * 
 *     if (check_rays):
 *       print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')
 *       print(" !! PLOT !!")
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2308, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":2309
 *     if (check_rays):
 *       print(" !! PLOT !!")
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax2.scatter(x_sec, y_sec, s=1, edgecolor='none')
 */
      if (unlikely(!__pyx_v_ax1)) { __Pyx_RaiseUnboundLocalError("ax1"); __PYX_ERR(0, 2309, __pyx_L1_error) }
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax1, __pyx_n_s_scatter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 2309, __pyx_L1_error) }
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_v_ww); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(!__pyx_v_y)) { __Pyx_RaiseUnboundLocalError("y"); __PYX_ERR(0, 2309, __pyx_L1_error) }
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_y, __pyx_v_ww); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_10);
      __pyx_t_6 = 0;
      __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_s, __pyx_int_5) < 0) __PYX_ERR(0, 2309, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_edgecolor, __pyx_n_u_none) < 0) __PYX_ERR(0, 2309, __pyx_L1_error)
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_12, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2310
 *       print(" !! PLOT !!")
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')
 *       print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *       ax2.scatter(x_sec, y_sec, s=1, edgecolor='none')
 * 
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2310, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2311
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')
 *       print(" !! PLOT !!")
 *       ax2.scatter(x_sec, y_sec, s=1, edgecolor='none')             # <<<<<<<<<<<<<<
 * 
 * 
 */
      if (unlikely(!__pyx_v_ax2)) { __Pyx_RaiseUnboundLocalError("ax2"); __PYX_ERR(0, 2311, __pyx_L1_error) }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax2, __pyx_n_s_scatter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_v_x_sec);
      __Pyx_GIVEREF(__pyx_v_x_sec);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_x_sec);
      __Pyx_INCREF(__pyx_v_y_sec);
      __Pyx_GIVEREF(__pyx_v_y_sec);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_y_sec);
      __pyx_t_12 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_s, __pyx_int_1) < 0) __PYX_ERR(0, 2311, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_edgecolor, __pyx_n_u_none) < 0) __PYX_ERR(0, 2311, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_10, __pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2311, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "mirror_lib_v04.pyx":2307
 *     ww = np.where(isin > 0.5)[0]
 * 
 *     if (check_rays):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax1.scatter(x[ww], y[ww], s=5, edgecolor='none')
 */
    }

    /* "mirror_lib_v04.pyx":2314
 * 
 * 
 *     segments.i['%i' % (it_sgm,)]=i_1[ww]             # <<<<<<<<<<<<<<
 *     segments.i2['%i' % (it_sgm,)]=i_2[ww]
 *     segments.th1['%i' % (it_sgm,)]=th[ww]
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_i_1, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_i); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_it_sgm);
    __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_12, __pyx_t_6, __pyx_t_3) < 0)) __PYX_ERR(0, 2314, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2315
 * 
 *     segments.i['%i' % (it_sgm,)]=i_1[ww]
 *     segments.i2['%i' % (it_sgm,)]=i_2[ww]             # <<<<<<<<<<<<<<
 *     segments.th1['%i' % (it_sgm,)]=th[ww]
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_i_2, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_i2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_v_it_sgm);
    __pyx_t_10 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_12); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_6, __pyx_t_10, __pyx_t_3) < 0)) __PYX_ERR(0, 2315, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2316
 *     segments.i['%i' % (it_sgm,)]=i_1[ww]
 *     segments.i2['%i' % (it_sgm,)]=i_2[ww]
 *     segments.th1['%i' % (it_sgm,)]=th[ww]             # <<<<<<<<<<<<<<
 * 
 * #><::    segments.rad['%i' % (it_sgm,)] = np.sqrt(x[ww]**2+y[ww]**2)
 */
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_th, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_th1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_it_sgm);
    __pyx_t_12 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_10, __pyx_t_12, __pyx_t_3) < 0)) __PYX_ERR(0, 2316, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mirror_lib_v04.pyx":2328
 * #><::
 * 
 *     segments.rad['%i' % (it_sgm,)] = rad[ww] * 1.             # <<<<<<<<<<<<<<
 *     segments.area['%i' % (it_sgm,)] = area[ww] * 1.
 * 
 */
    if (unlikely(!__pyx_v_rad)) { __Pyx_RaiseUnboundLocalError("rad"); __PYX_ERR(0, 2328, __pyx_L1_error) }
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_rad, __pyx_v_ww); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = PyNumber_Multiply(__pyx_t_3, __pyx_float_1_); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_rad); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_it_sgm);
    __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_6, __pyx_t_12) < 0)) __PYX_ERR(0, 2328, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2329
 * 
 *     segments.rad['%i' % (it_sgm,)] = rad[ww] * 1.
 *     segments.area['%i' % (it_sgm,)] = area[ww] * 1.             # <<<<<<<<<<<<<<
 * 
 *     if (osecondary==True):
 */
    if (unlikely(!__pyx_v_area)) { __Pyx_RaiseUnboundLocalError("area"); __PYX_ERR(0, 2329, __pyx_L1_error) }
    __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_v_area, __pyx_v_ww); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_12, __pyx_float_1_); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_area); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_it_sgm);
    __pyx_t_10 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_12, __pyx_t_10, __pyx_t_6) < 0)) __PYX_ERR(0, 2329, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2331
 *     segments.area['%i' % (it_sgm,)] = area[ww] * 1.
 * 
 *     if (osecondary==True):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax.plot(x_sec[ww], y_sec[ww],marker='.' \
 */
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_osecondary, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2331, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2331, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "mirror_lib_v04.pyx":2332
 * 
 *     if (osecondary==True):
 *       print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *       ax.plot(x_sec[ww], y_sec[ww],marker='.' \
 *           , markersize=1, linestyle='none', alpha=0.5)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "mirror_lib_v04.pyx":2333
 *     if (osecondary==True):
 *       print(" !! PLOT !!")
 *       ax.plot(x_sec[ww], y_sec[ww],marker='.' \             # <<<<<<<<<<<<<<
 *           , markersize=1, linestyle='none', alpha=0.5)
 * 
 */
      if (unlikely(!__pyx_v_ax)) { __Pyx_RaiseUnboundLocalError("ax"); __PYX_ERR(0, 2333, __pyx_L1_error) }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_plot); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_x_sec, __pyx_v_ww); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_v_y_sec, __pyx_v_ww); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_12);
      __pyx_t_10 = 0;
      __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_marker, __pyx_kp_u__89) < 0) __PYX_ERR(0, 2333, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_markersize, __pyx_int_1) < 0) __PYX_ERR(0, 2333, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_linestyle, __pyx_n_u_none) < 0) __PYX_ERR(0, 2333, __pyx_L1_error)
      if (PyDict_SetItem(__pyx_t_12, __pyx_n_s_alpha, __pyx_float_0_5) < 0) __PYX_ERR(0, 2333, __pyx_L1_error)
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, __pyx_t_12); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2333, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "mirror_lib_v04.pyx":2331
 *     segments.area['%i' % (it_sgm,)] = area[ww] * 1.
 * 
 *     if (osecondary==True):             # <<<<<<<<<<<<<<
 *       print(" !! PLOT !!")
 *       ax.plot(x_sec[ww], y_sec[ww],marker='.' \
 */
    }

    /* "mirror_lib_v04.pyx":2336
 *           , markersize=1, linestyle='none', alpha=0.5)
 * 
 *     ntot = ntot + ww.size             # <<<<<<<<<<<<<<
 *     tm4 = tm.time()
 * 
 */
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_ww, __pyx_n_s_size); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_12 = PyNumber_Add(__pyx_v_ntot, __pyx_t_10); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_ntot, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2337
 * 
 *     ntot = ntot + ww.size
 *     tm4 = tm.time()             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_tm); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_12 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tm4, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2340
 * 
 * 
 *     txt = " Segment id[#]=%i ; nrays= %i" % (it_sgm, isin.sum())             # <<<<<<<<<<<<<<
 *     txt = txt + " -> it done! %.5f (%.5f sec.)" % ((tm3-tm2) / (tm4-tm1) * 100.,(tm4-tm1),)
 *     print(txt, end='\r', flush=True)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_isin, __pyx_n_s_sum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_12 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_v_it_sgm);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_it_sgm);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_12);
    __pyx_t_12 = 0;
    __pyx_t_12 = PyUnicode_Format(__pyx_kp_u_Segment_id_i_nrays_i, __pyx_t_3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_txt, ((PyObject*)__pyx_t_12));
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2341
 * 
 *     txt = " Segment id[#]=%i ; nrays= %i" % (it_sgm, isin.sum())
 *     txt = txt + " -> it done! %.5f (%.5f sec.)" % ((tm3-tm2) / (tm4-tm1) * 100.,(tm4-tm1),)             # <<<<<<<<<<<<<<
 *     print(txt, end='\r', flush=True)
 * 
 */
    __pyx_t_12 = PyTuple_New(5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_16 = 0;
    __pyx_t_17 = 127;
    __Pyx_INCREF(__pyx_kp_u_it_done);
    __pyx_t_16 += 13;
    __Pyx_GIVEREF(__pyx_kp_u_it_done);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_kp_u_it_done);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_tm3, __pyx_v_tm2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = PyNumber_Subtract(__pyx_v_tm4, __pyx_v_tm1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Multiply(__pyx_t_6, __pyx_float_100_); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Format(__pyx_t_10, __pyx_kp_u_5f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_17 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_17) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_17;
    __pyx_t_16 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__90);
    __pyx_t_16 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__90);
    PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_kp_u__90);
    __pyx_t_6 = PyNumber_Subtract(__pyx_v_tm4, __pyx_v_tm1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = __Pyx_PyObject_Format(__pyx_t_6, __pyx_kp_u_5f); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_17 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_17) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_17;
    __pyx_t_16 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_10);
    __pyx_t_10 = 0;
    __Pyx_INCREF(__pyx_kp_u_sec);
    __pyx_t_16 += 6;
    __Pyx_GIVEREF(__pyx_kp_u_sec);
    PyTuple_SET_ITEM(__pyx_t_12, 4, __pyx_kp_u_sec);
    __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_12, 5, __pyx_t_16, __pyx_t_17); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyUnicode_Concat(__pyx_v_txt, __pyx_t_10); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_txt, ((PyObject*)__pyx_t_12));
    __pyx_t_12 = 0;

    /* "mirror_lib_v04.pyx":2342
 *     txt = " Segment id[#]=%i ; nrays= %i" % (it_sgm, isin.sum())
 *     txt = txt + " -> it done! %.5f (%.5f sec.)" % ((tm3-tm2) / (tm4-tm1) * 100.,(tm4-tm1),)
 *     print(txt, end='\r', flush=True)             # <<<<<<<<<<<<<<
 * 
 *   #
 */
    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_v_txt);
    __Pyx_GIVEREF(__pyx_v_txt);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_v_txt);
    __pyx_t_10 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_end, __pyx_kp_u__76) < 0) __PYX_ERR(0, 2342, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_flush, Py_True) < 0) __PYX_ERR(0, 2342, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_12, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2212
 *     print('?')
 * 
 *   for it_sgm in range(segments.N):             # <<<<<<<<<<<<<<
 * 
 *     tm1 = tm.time()
 */
  }
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "mirror_lib_v04.pyx":2345
 * 
 *   #
 *   if (osecondary==True):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     import apy_utils as uts
 */
  __pyx_t_11 = PyObject_RichCompare(__pyx_v_osecondary, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2345, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2345, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":2346
 *   #
 *   if (osecondary==True):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     import apy_utils as uts
 *     ax.set_xlim(np.min(secondary.x), np.max(secondary.x))
 */
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2347
 *   if (osecondary==True):
 *     print(" !! PLOT !!")
 *     import apy_utils as uts             # <<<<<<<<<<<<<<
 *     ax.set_xlim(np.min(secondary.x), np.max(secondary.x))
 *     ax.set_ylim(np.min(secondary.y), np.max(secondary.y))
 */
    __pyx_t_11 = __Pyx_Import(__pyx_n_s_apy_utils, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_v_uts = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2348
 *     print(" !! PLOT !!")
 *     import apy_utils as uts
 *     ax.set_xlim(np.min(secondary.x), np.max(secondary.x))             # <<<<<<<<<<<<<<
 *     ax.set_ylim(np.min(secondary.y), np.max(secondary.y))
 *     ax.set_aspect('equal')
 */
    if (unlikely(!__pyx_v_ax)) { __Pyx_RaiseUnboundLocalError("ax"); __PYX_ERR(0, 2348, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_set_xlim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_min); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_x); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_10 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_12);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_max); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_x); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_12);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_10, __pyx_t_3};
      __pyx_t_11 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_10, __pyx_t_3};
      __pyx_t_11 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_12 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_12, 0+__pyx_t_4, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_12, 1+__pyx_t_4, __pyx_t_3);
      __pyx_t_10 = 0;
      __pyx_t_3 = 0;
      __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_12, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2348, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2349
 *     import apy_utils as uts
 *     ax.set_xlim(np.min(secondary.x), np.max(secondary.x))
 *     ax.set_ylim(np.min(secondary.y), np.max(secondary.y))             # <<<<<<<<<<<<<<
 *     ax.set_aspect('equal')
 *     stop()
 */
    if (unlikely(!__pyx_v_ax)) { __Pyx_RaiseUnboundLocalError("ax"); __PYX_ERR(0, 2349, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_set_ylim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_min); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_12 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_max); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_secondary, __pyx_n_s_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_10 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_4 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_12, __pyx_t_10};
      __pyx_t_11 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2349, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_12, __pyx_t_10};
      __pyx_t_11 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2349, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_4, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_4, __pyx_t_10);
      __pyx_t_12 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2350
 *     ax.set_xlim(np.min(secondary.x), np.max(secondary.x))
 *     ax.set_ylim(np.min(secondary.y), np.max(secondary.y))
 *     ax.set_aspect('equal')             # <<<<<<<<<<<<<<
 *     stop()
 * 
 */
    if (unlikely(!__pyx_v_ax)) { __Pyx_RaiseUnboundLocalError("ax"); __PYX_ERR(0, 2350, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax, __pyx_n_s_set_aspect); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_11 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_n_u_equal) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_n_u_equal);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2351
 *     ax.set_ylim(np.min(secondary.y), np.max(secondary.y))
 *     ax.set_aspect('equal')
 *     stop()             # <<<<<<<<<<<<<<
 * 
 *   print("")
 */
    __Pyx_INCREF(__pyx_v_stop);
    __pyx_t_6 = __pyx_v_stop; __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_11 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

    /* "mirror_lib_v04.pyx":2345
 * 
 *   #
 *   if (osecondary==True):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     import apy_utils as uts
 */
  }

  /* "mirror_lib_v04.pyx":2353
 *     stop()
 * 
 *   print("")             # <<<<<<<<<<<<<<
 *   print('Total number of rays considered: %i' % ntot)
 * 
 */
  __pyx_t_11 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "mirror_lib_v04.pyx":2354
 * 
 *   print("")
 *   print('Total number of rays considered: %i' % ntot)             # <<<<<<<<<<<<<<
 * 
 *   if (check_rays):
 */
  __pyx_t_11 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Total_number_of_rays_considered, __pyx_v_ntot); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_11); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mirror_lib_v04.pyx":2356
 *   print('Total number of rays considered: %i' % ntot)
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_check_rays); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 2356, __pyx_L1_error)
  if (__pyx_t_9) {

    /* "mirror_lib_v04.pyx":2357
 * 
 *   if (check_rays):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')
 *     fg1.show()
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2357, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2358
 *   if (check_rays):
 *     print(" !! PLOT !!")
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')             # <<<<<<<<<<<<<<
 *     fg1.show()
 *     fg2.show()
 */
    if (unlikely(!__pyx_v_ax1)) { __Pyx_RaiseUnboundLocalError("ax1"); __PYX_ERR(0, 2358, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ax1, __pyx_n_s_scatter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_INCREF(__pyx_v_x1d);
    __Pyx_GIVEREF(__pyx_v_x1d);
    PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_v_x1d);
    __Pyx_INCREF(__pyx_v_y1d);
    __Pyx_GIVEREF(__pyx_v_y1d);
    PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_v_y1d);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_s, __pyx_int_5) < 0) __PYX_ERR(0, 2358, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_edgecolor, __pyx_n_u_none) < 0) __PYX_ERR(0, 2358, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_color, __pyx_n_u_k) < 0) __PYX_ERR(0, 2358, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2359
 *     print(" !! PLOT !!")
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')
 *     fg1.show()             # <<<<<<<<<<<<<<
 *     fg2.show()
 *     stop()
 */
    if (unlikely(!__pyx_v_fg1)) { __Pyx_RaiseUnboundLocalError("fg1"); __PYX_ERR(0, 2359, __pyx_L1_error) }
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_fg1, __pyx_n_s_show); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_10 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2360
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')
 *     fg1.show()
 *     fg2.show()             # <<<<<<<<<<<<<<
 *     stop()
 * 
 */
    if (unlikely(!__pyx_v_fg2)) { __Pyx_RaiseUnboundLocalError("fg2"); __PYX_ERR(0, 2360, __pyx_L1_error) }
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_fg2, __pyx_n_s_show); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_10 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2361
 *     fg1.show()
 *     fg2.show()
 *     stop()             # <<<<<<<<<<<<<<
 * 
 *   return
 */
    __Pyx_INCREF(__pyx_v_stop);
    __pyx_t_3 = __pyx_v_stop; __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_10 = (__pyx_t_11) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_11) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

    /* "mirror_lib_v04.pyx":2356
 *   print('Total number of rays considered: %i' % ntot)
 * 
 *   if (check_rays):             # <<<<<<<<<<<<<<
 *     print(" !! PLOT !!")
 *     ax1.scatter(x1d, y1d, s=5, edgecolor='none', color='k')
 */
  }

  /* "mirror_lib_v04.pyx":2363
 *     stop()
 * 
 *   return             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("pymirrors.get_geometry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_stop);
  __Pyx_XDECREF(__pyx_v_x1d);
  __Pyx_XDECREF(__pyx_v_y1d);
  __Pyx_XDECREF(__pyx_v_rad1d);
  __Pyx_XDECREF(__pyx_v_area1d);
  __Pyx_XDECREF(__pyx_v_fg);
  __Pyx_XDECREF(__pyx_v_ax);
  __Pyx_XDECREF(__pyx_v_ww);
  __Pyx_XDECREF(__pyx_v_check_primary_id);
  __Pyx_XDECREF(__pyx_v_check_primary);
  __Pyx_XDECREF(__pyx_v_ntot);
  __Pyx_XDECREF(__pyx_v_fg1);
  __Pyx_XDECREF(__pyx_v_ax1);
  __Pyx_XDECREF(__pyx_v_fg2);
  __Pyx_XDECREF(__pyx_v_ax2);
  __Pyx_XDECREF(__pyx_v_it_sgm);
  __Pyx_XDECREF(__pyx_v_tm1);
  __Pyx_XDECREF(__pyx_v_wpos);
  __Pyx_XDECREF(__pyx_v_wwn);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_rad);
  __Pyx_XDECREF(__pyx_v_area);
  __Pyx_XDECREF(__pyx_v_th);
  __Pyx_XDECREF(__pyx_v_cs);
  __Pyx_XDECREF(__pyx_v_sn);
  __Pyx_XDECREF(__pyx_v_x1);
  __Pyx_XDECREF(__pyx_v_y1);
  __Pyx_XDECREF(__pyx_v_dir_cos_i);
  __Pyx_XDECREF(__pyx_v_dir_cos_n1);
  __Pyx_XDECREF(__pyx_v_z_1);
  __Pyx_XDECREF(__pyx_v_i_1);
  __Pyx_XDECREF(__pyx_v_dir_cos_o1);
  __Pyx_XDECREF(__pyx_v_x2);
  __Pyx_XDECREF(__pyx_v_z_2);
  __Pyx_XDECREF(__pyx_v_dir_cos_n2);
  __Pyx_XDECREF(__pyx_v_i_2);
  __Pyx_XDECREF(__pyx_v_y2);
  __Pyx_XDECREF(__pyx_v_x_sec);
  __Pyx_XDECREF(__pyx_v_y_sec);
  __Pyx_XDECREF(__pyx_v_tm2);
  __Pyx_XDECREF(__pyx_v_isin);
  __Pyx_XDECREF(__pyx_v_tm3);
  __Pyx_XDECREF(__pyx_v_tm4);
  __Pyx_XDECREF(__pyx_v_txt);
  __Pyx_XDECREF(__pyx_v_uts);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2370
 * #
 * 
 * def chex_syst(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] i \
 *     , ar [double, ndim=1] th_1 \
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_27chex_syst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_27chex_syst = {"chex_syst", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_27chex_syst, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_27chex_syst(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_i = 0;
  PyArrayObject *__pyx_v_th_1 = 0;
  PyArrayObject *__pyx_v_i_22 = 0;
  double __pyx_v_lamb;
  __pyx_t_double_complex __pyx_v_n_s;
  __pyx_t_double_complex __pyx_v_n_c;
  __pyx_t_double_complex __pyx_v_n_ox;
  CYTHON_UNUSED __pyx_t_double_complex __pyx_v_n_d;
  __pyx_t_double_complex __pyx_v_n_in;
  double __pyx_v_d_s;
  double __pyx_v_d_c;
  double __pyx_v_d_ox;
  CYTHON_UNUSED double __pyx_v_d_d;
  int __pyx_v_nthreads;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("chex_syst (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_th_1,&__pyx_n_s_i_22,&__pyx_n_s_lamb,&__pyx_n_s_n_s,&__pyx_n_s_n_c,&__pyx_n_s_n_ox,&__pyx_n_s_n_d,&__pyx_n_s_n_in,&__pyx_n_s_d_s,&__pyx_n_s_d_c,&__pyx_n_s_d_ox,&__pyx_n_s_d_d,&__pyx_n_s_nthreads,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_th_1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 1); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_i_22)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 2); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lamb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 3); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 4); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_c)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 5); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_ox)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 6); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_d)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 7); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 8); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 9); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_c)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 10); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_ox)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 11); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_d_d)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 12); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nthreads)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, 13); __PYX_ERR(0, 2370, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "chex_syst") < 0)) __PYX_ERR(0, 2370, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_i = ((PyArrayObject *)values[0]);
    __pyx_v_th_1 = ((PyArrayObject *)values[1]);
    __pyx_v_i_22 = ((PyArrayObject *)values[2]);
    __pyx_v_lamb = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_lamb == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2374, __pyx_L3_error)
    __pyx_v_n_s = __Pyx_PyComplex_As___pyx_t_double_complex(values[4]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_n_c = __Pyx_PyComplex_As___pyx_t_double_complex(values[5]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2376, __pyx_L3_error)
    __pyx_v_n_ox = __Pyx_PyComplex_As___pyx_t_double_complex(values[6]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2377, __pyx_L3_error)
    __pyx_v_n_d = __Pyx_PyComplex_As___pyx_t_double_complex(values[7]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2378, __pyx_L3_error)
    __pyx_v_n_in = __Pyx_PyComplex_As___pyx_t_double_complex(values[8]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2379, __pyx_L3_error)
    __pyx_v_d_s = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_d_s == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2380, __pyx_L3_error)
    __pyx_v_d_c = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_d_c == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2381, __pyx_L3_error)
    __pyx_v_d_ox = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_d_ox == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2382, __pyx_L3_error)
    __pyx_v_d_d = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_d_d == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2383, __pyx_L3_error)
    __pyx_v_nthreads = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_nthreads == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2384, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("chex_syst", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2370, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.chex_syst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i), __pyx_ptype_5numpy_ndarray, 1, "i", 0))) __PYX_ERR(0, 2371, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_th_1), __pyx_ptype_5numpy_ndarray, 1, "th_1", 0))) __PYX_ERR(0, 2372, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i_22), __pyx_ptype_5numpy_ndarray, 1, "i_22", 0))) __PYX_ERR(0, 2373, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pymirrors_26chex_syst(__pyx_self, __pyx_v_i, __pyx_v_th_1, __pyx_v_i_22, __pyx_v_lamb, __pyx_v_n_s, __pyx_v_n_c, __pyx_v_n_ox, __pyx_v_n_d, __pyx_v_n_in, __pyx_v_d_s, __pyx_v_d_c, __pyx_v_d_ox, __pyx_v_d_d, __pyx_v_nthreads);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_26chex_syst(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_i, PyArrayObject *__pyx_v_th_1, PyArrayObject *__pyx_v_i_22, double __pyx_v_lamb, __pyx_t_double_complex __pyx_v_n_s, __pyx_t_double_complex __pyx_v_n_c, __pyx_t_double_complex __pyx_v_n_ox, CYTHON_UNUSED __pyx_t_double_complex __pyx_v_n_d, __pyx_t_double_complex __pyx_v_n_in, double __pyx_v_d_s, double __pyx_v_d_c, double __pyx_v_d_ox, CYTHON_UNUSED double __pyx_v_d_d, int __pyx_v_nthreads) {
  long __pyx_v_cnrays;
  int __pyx_v_cnlayers;
  CYTHON_UNUSED double __pyx_v_clamb;
  PyArrayObject *__pyx_v_cnarr = 0;
  PyArrayObject *__pyx_v_ckarr = 0;
  PyArrayObject *__pyx_v_cdarr = 0;
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cdarr;
  __Pyx_Buffer __pyx_pybuffer_cdarr;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ckarr;
  __Pyx_Buffer __pyx_pybuffer_ckarr;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_cnarr;
  __Pyx_Buffer __pyx_pybuffer_cnarr;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_i;
  __Pyx_Buffer __pyx_pybuffer_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_i_22;
  __Pyx_Buffer __pyx_pybuffer_i_22;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_th_1;
  __Pyx_Buffer __pyx_pybuffer_th_1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyArrayObject *__pyx_t_13 = NULL;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  PyArrayObject *__pyx_t_18 = NULL;
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  Py_ssize_t __pyx_t_22;
  PyArrayObject *__pyx_t_23 = NULL;
  __Pyx_RefNannySetupContext("chex_syst", 0);
  __pyx_pybuffer_cnarr.pybuffer.buf = NULL;
  __pyx_pybuffer_cnarr.refcount = 0;
  __pyx_pybuffernd_cnarr.data = NULL;
  __pyx_pybuffernd_cnarr.rcbuffer = &__pyx_pybuffer_cnarr;
  __pyx_pybuffer_ckarr.pybuffer.buf = NULL;
  __pyx_pybuffer_ckarr.refcount = 0;
  __pyx_pybuffernd_ckarr.data = NULL;
  __pyx_pybuffernd_ckarr.rcbuffer = &__pyx_pybuffer_ckarr;
  __pyx_pybuffer_cdarr.pybuffer.buf = NULL;
  __pyx_pybuffer_cdarr.refcount = 0;
  __pyx_pybuffernd_cdarr.data = NULL;
  __pyx_pybuffernd_cdarr.rcbuffer = &__pyx_pybuffer_cdarr;
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;
  __pyx_pybuffer_i.pybuffer.buf = NULL;
  __pyx_pybuffer_i.refcount = 0;
  __pyx_pybuffernd_i.data = NULL;
  __pyx_pybuffernd_i.rcbuffer = &__pyx_pybuffer_i;
  __pyx_pybuffer_th_1.pybuffer.buf = NULL;
  __pyx_pybuffer_th_1.refcount = 0;
  __pyx_pybuffernd_th_1.data = NULL;
  __pyx_pybuffernd_th_1.rcbuffer = &__pyx_pybuffer_th_1;
  __pyx_pybuffer_i_22.pybuffer.buf = NULL;
  __pyx_pybuffer_i_22.refcount = 0;
  __pyx_pybuffernd_i_22.data = NULL;
  __pyx_pybuffernd_i_22.rcbuffer = &__pyx_pybuffer_i_22;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_i.rcbuffer->pybuffer, (PyObject*)__pyx_v_i, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2370, __pyx_L1_error)
  }
  __pyx_pybuffernd_i.diminfo[0].strides = __pyx_pybuffernd_i.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_i.diminfo[0].shape = __pyx_pybuffernd_i.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_th_1.rcbuffer->pybuffer, (PyObject*)__pyx_v_th_1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2370, __pyx_L1_error)
  }
  __pyx_pybuffernd_th_1.diminfo[0].strides = __pyx_pybuffernd_th_1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_th_1.diminfo[0].shape = __pyx_pybuffernd_th_1.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_i_22.rcbuffer->pybuffer, (PyObject*)__pyx_v_i_22, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2370, __pyx_L1_error)
  }
  __pyx_pybuffernd_i_22.diminfo[0].strides = __pyx_pybuffernd_i_22.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_i_22.diminfo[0].shape = __pyx_pybuffernd_i_22.rcbuffer->pybuffer.shape[0];

  /* "mirror_lib_v04.pyx":2388
 * 
 * 
 *   cdef long cnrays = i.size             # <<<<<<<<<<<<<<
 *   cdef int cnlayers = 4  # Dust is not considered with thin-film approach
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_i), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_2 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 2388, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cnrays = __pyx_t_2;

  /* "mirror_lib_v04.pyx":2389
 * 
 *   cdef long cnrays = i.size
 *   cdef int cnlayers = 4  # Dust is not considered with thin-film approach             # <<<<<<<<<<<<<<
 * 
 *   cdef double clamb = lamb
 */
  __pyx_v_cnlayers = 4;

  /* "mirror_lib_v04.pyx":2391
 *   cdef int cnlayers = 4  # Dust is not considered with thin-film approach
 * 
 *   cdef double clamb = lamb             # <<<<<<<<<<<<<<
 * 
 *   cdef ar[double, ndim=1] cnarr = np.zeros((cnlayers), dtype="f8")
 */
  __pyx_v_clamb = __pyx_v_lamb;

  /* "mirror_lib_v04.pyx":2393
 *   cdef double clamb = lamb
 * 
 *   cdef ar[double, ndim=1] cnarr = np.zeros((cnlayers), dtype="f8")             # <<<<<<<<<<<<<<
 *   cnarr[3] = n_s.real
 *   cnarr[2] = n_c.real
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_cnlayers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 2393, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2393, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cnarr.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_cnarr = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2393, __pyx_L1_error)
    } else {__pyx_pybuffernd_cnarr.diminfo[0].strides = __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cnarr.diminfo[0].shape = __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_cnarr = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":2394
 * 
 *   cdef ar[double, ndim=1] cnarr = np.zeros((cnlayers), dtype="f8")
 *   cnarr[3] = n_s.real             # <<<<<<<<<<<<<<
 *   cnarr[2] = n_c.real
 *   cnarr[1] = n_ox.real
 */
  __pyx_t_7 = __Pyx_CREAL(__pyx_v_n_s);
  __pyx_t_8 = 3;
  __pyx_t_9 = -1;
  if (__pyx_t_8 < 0) {
    __pyx_t_8 += __pyx_pybuffernd_cnarr.diminfo[0].shape;
    if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_8 >= __pyx_pybuffernd_cnarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2394, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_cnarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2395
 *   cdef ar[double, ndim=1] cnarr = np.zeros((cnlayers), dtype="f8")
 *   cnarr[3] = n_s.real
 *   cnarr[2] = n_c.real             # <<<<<<<<<<<<<<
 *   cnarr[1] = n_ox.real
 *   cnarr[0] = n_in.real
 */
  __pyx_t_7 = __Pyx_CREAL(__pyx_v_n_c);
  __pyx_t_10 = 2;
  __pyx_t_9 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_pybuffernd_cnarr.diminfo[0].shape;
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_cnarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2395, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_cnarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2396
 *   cnarr[3] = n_s.real
 *   cnarr[2] = n_c.real
 *   cnarr[1] = n_ox.real             # <<<<<<<<<<<<<<
 *   cnarr[0] = n_in.real
 * 
 */
  __pyx_t_7 = __Pyx_CREAL(__pyx_v_n_ox);
  __pyx_t_11 = 1;
  __pyx_t_9 = -1;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_pybuffernd_cnarr.diminfo[0].shape;
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_11 >= __pyx_pybuffernd_cnarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2396, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.buf, __pyx_t_11, __pyx_pybuffernd_cnarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2397
 *   cnarr[2] = n_c.real
 *   cnarr[1] = n_ox.real
 *   cnarr[0] = n_in.real             # <<<<<<<<<<<<<<
 * 
 *   cdef ar[double, ndim=1] ckarr = np.zeros((cnlayers), dtype="f8")
 */
  __pyx_t_7 = __Pyx_CREAL(__pyx_v_n_in);
  __pyx_t_12 = 0;
  __pyx_t_9 = -1;
  if (__pyx_t_12 < 0) {
    __pyx_t_12 += __pyx_pybuffernd_cnarr.diminfo[0].shape;
    if (unlikely(__pyx_t_12 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_12 >= __pyx_pybuffernd_cnarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2397, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cnarr.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_cnarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2399
 *   cnarr[0] = n_in.real
 * 
 *   cdef ar[double, ndim=1] ckarr = np.zeros((cnlayers), dtype="f8")             # <<<<<<<<<<<<<<
 *   ckarr[3] = n_s.imag
 *   ckarr[2] = n_c.imag
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_cnlayers); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 2399, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2399, __pyx_L1_error)
  __pyx_t_13 = ((PyArrayObject *)__pyx_t_3);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ckarr.rcbuffer->pybuffer, (PyObject*)__pyx_t_13, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_ckarr = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2399, __pyx_L1_error)
    } else {__pyx_pybuffernd_ckarr.diminfo[0].strides = __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ckarr.diminfo[0].shape = __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_13 = 0;
  __pyx_v_ckarr = ((PyArrayObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":2400
 * 
 *   cdef ar[double, ndim=1] ckarr = np.zeros((cnlayers), dtype="f8")
 *   ckarr[3] = n_s.imag             # <<<<<<<<<<<<<<
 *   ckarr[2] = n_c.imag
 *   ckarr[1] = n_ox.imag
 */
  __pyx_t_7 = __Pyx_CIMAG(__pyx_v_n_s);
  __pyx_t_14 = 3;
  __pyx_t_9 = -1;
  if (__pyx_t_14 < 0) {
    __pyx_t_14 += __pyx_pybuffernd_ckarr.diminfo[0].shape;
    if (unlikely(__pyx_t_14 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_14 >= __pyx_pybuffernd_ckarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2400, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.buf, __pyx_t_14, __pyx_pybuffernd_ckarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2401
 *   cdef ar[double, ndim=1] ckarr = np.zeros((cnlayers), dtype="f8")
 *   ckarr[3] = n_s.imag
 *   ckarr[2] = n_c.imag             # <<<<<<<<<<<<<<
 *   ckarr[1] = n_ox.imag
 *   ckarr[0] = n_in.imag
 */
  __pyx_t_7 = __Pyx_CIMAG(__pyx_v_n_c);
  __pyx_t_15 = 2;
  __pyx_t_9 = -1;
  if (__pyx_t_15 < 0) {
    __pyx_t_15 += __pyx_pybuffernd_ckarr.diminfo[0].shape;
    if (unlikely(__pyx_t_15 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_15 >= __pyx_pybuffernd_ckarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2401, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_ckarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2402
 *   ckarr[3] = n_s.imag
 *   ckarr[2] = n_c.imag
 *   ckarr[1] = n_ox.imag             # <<<<<<<<<<<<<<
 *   ckarr[0] = n_in.imag
 * 
 */
  __pyx_t_7 = __Pyx_CIMAG(__pyx_v_n_ox);
  __pyx_t_16 = 1;
  __pyx_t_9 = -1;
  if (__pyx_t_16 < 0) {
    __pyx_t_16 += __pyx_pybuffernd_ckarr.diminfo[0].shape;
    if (unlikely(__pyx_t_16 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_16 >= __pyx_pybuffernd_ckarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2402, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.buf, __pyx_t_16, __pyx_pybuffernd_ckarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2403
 *   ckarr[2] = n_c.imag
 *   ckarr[1] = n_ox.imag
 *   ckarr[0] = n_in.imag             # <<<<<<<<<<<<<<
 * 
 *   cdef ar[double, ndim=1] cdarr = np.zeros((cnlayers), dtype="f8")
 */
  __pyx_t_7 = __Pyx_CIMAG(__pyx_v_n_in);
  __pyx_t_17 = 0;
  __pyx_t_9 = -1;
  if (__pyx_t_17 < 0) {
    __pyx_t_17 += __pyx_pybuffernd_ckarr.diminfo[0].shape;
    if (unlikely(__pyx_t_17 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_17 >= __pyx_pybuffernd_ckarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2403, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_ckarr.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_ckarr.diminfo[0].strides) = __pyx_t_7;

  /* "mirror_lib_v04.pyx":2405
 *   ckarr[0] = n_in.imag
 * 
 *   cdef ar[double, ndim=1] cdarr = np.zeros((cnlayers), dtype="f8")             # <<<<<<<<<<<<<<
 *   cdarr[3] = d_s
 *   cdarr[2] = d_c
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_cnlayers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 2405, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2405, __pyx_L1_error)
  __pyx_t_18 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_cdarr.rcbuffer->pybuffer, (PyObject*)__pyx_t_18, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_cdarr = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2405, __pyx_L1_error)
    } else {__pyx_pybuffernd_cdarr.diminfo[0].strides = __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_cdarr.diminfo[0].shape = __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_18 = 0;
  __pyx_v_cdarr = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2406
 * 
 *   cdef ar[double, ndim=1] cdarr = np.zeros((cnlayers), dtype="f8")
 *   cdarr[3] = d_s             # <<<<<<<<<<<<<<
 *   cdarr[2] = d_c
 *   cdarr[1] = d_ox
 */
  __pyx_t_19 = 3;
  __pyx_t_9 = -1;
  if (__pyx_t_19 < 0) {
    __pyx_t_19 += __pyx_pybuffernd_cdarr.diminfo[0].shape;
    if (unlikely(__pyx_t_19 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_19 >= __pyx_pybuffernd_cdarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2406, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.buf, __pyx_t_19, __pyx_pybuffernd_cdarr.diminfo[0].strides) = __pyx_v_d_s;

  /* "mirror_lib_v04.pyx":2407
 *   cdef ar[double, ndim=1] cdarr = np.zeros((cnlayers), dtype="f8")
 *   cdarr[3] = d_s
 *   cdarr[2] = d_c             # <<<<<<<<<<<<<<
 *   cdarr[1] = d_ox
 *   cdarr[0] = -1
 */
  __pyx_t_20 = 2;
  __pyx_t_9 = -1;
  if (__pyx_t_20 < 0) {
    __pyx_t_20 += __pyx_pybuffernd_cdarr.diminfo[0].shape;
    if (unlikely(__pyx_t_20 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_20 >= __pyx_pybuffernd_cdarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2407, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.buf, __pyx_t_20, __pyx_pybuffernd_cdarr.diminfo[0].strides) = __pyx_v_d_c;

  /* "mirror_lib_v04.pyx":2408
 *   cdarr[3] = d_s
 *   cdarr[2] = d_c
 *   cdarr[1] = d_ox             # <<<<<<<<<<<<<<
 *   cdarr[0] = -1
 * 
 */
  __pyx_t_21 = 1;
  __pyx_t_9 = -1;
  if (__pyx_t_21 < 0) {
    __pyx_t_21 += __pyx_pybuffernd_cdarr.diminfo[0].shape;
    if (unlikely(__pyx_t_21 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_21 >= __pyx_pybuffernd_cdarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2408, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.buf, __pyx_t_21, __pyx_pybuffernd_cdarr.diminfo[0].strides) = __pyx_v_d_ox;

  /* "mirror_lib_v04.pyx":2409
 *   cdarr[2] = d_c
 *   cdarr[1] = d_ox
 *   cdarr[0] = -1             # <<<<<<<<<<<<<<
 * 
 *   cdef ar[double, ndim=3] result = np.zeros((cnrays,4,4), dtype="f8")
 */
  __pyx_t_22 = 0;
  __pyx_t_9 = -1;
  if (__pyx_t_22 < 0) {
    __pyx_t_22 += __pyx_pybuffernd_cdarr.diminfo[0].shape;
    if (unlikely(__pyx_t_22 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_22 >= __pyx_pybuffernd_cdarr.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 2409, __pyx_L1_error)
  }
  *__Pyx_BufPtrStrided1d(double *, __pyx_pybuffernd_cdarr.rcbuffer->pybuffer.buf, __pyx_t_22, __pyx_pybuffernd_cdarr.diminfo[0].strides) = -1.0;

  /* "mirror_lib_v04.pyx":2411
 *   cdarr[0] = -1
 * 
 *   cdef ar[double, ndim=3] result = np.zeros((cnrays,4,4), dtype="f8")             # <<<<<<<<<<<<<<
 * #
 *   eval_segment(cnrays, cnlayers, <double*>i.data, <double*>th_1.data \
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_cnrays); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_int_4);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_n_u_f8) < 0) __PYX_ERR(0, 2411, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2411, __pyx_L1_error)
  __pyx_t_23 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_23, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
      __pyx_v_result = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_result.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2411, __pyx_L1_error)
    } else {__pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_result.diminfo[1].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_result.diminfo[1].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_result.diminfo[2].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_result.diminfo[2].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[2];
    }
  }
  __pyx_t_23 = 0;
  __pyx_v_result = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":2413
 *   cdef ar[double, ndim=3] result = np.zeros((cnrays,4,4), dtype="f8")
 * #
 *   eval_segment(cnrays, cnlayers, <double*>i.data, <double*>th_1.data \             # <<<<<<<<<<<<<<
 *       , <double*>i_22.data, lamb, <double*>cnarr.data, <double*>ckarr.data \
 *       , <double*>cdarr.data, nthreads, <double*>result.data)
 */
  mrr::eval_mueller_segment<long,int,double>(__pyx_v_cnrays, __pyx_v_cnlayers, ((double *)__pyx_v_i->data), ((double *)__pyx_v_th_1->data), ((double *)__pyx_v_i_22->data), __pyx_v_lamb, ((double *)__pyx_v_cnarr->data), ((double *)__pyx_v_ckarr->data), ((double *)__pyx_v_cdarr->data), __pyx_v_nthreads, ((double *)__pyx_v_result->data));

  /* "mirror_lib_v04.pyx":2422
 * #
 * 
 *   return result             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2370
 * #
 * 
 * def chex_syst(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] i \
 *     , ar [double, ndim=1] th_1 \
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cdarr.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ckarr.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cnarr.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_i.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_i_22.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_th_1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("pymirrors.chex_syst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cdarr.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ckarr.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_cnarr.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_i.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_i_22.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_th_1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cnarr);
  __Pyx_XDECREF((PyObject *)__pyx_v_ckarr);
  __Pyx_XDECREF((PyObject *)__pyx_v_cdarr);
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2432
 * #
 * 
 * def get_mdust(n, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_29get_mdust(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_29get_mdust = {"get_mdust", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_29get_mdust, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_29get_mdust(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_mean_dust = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_mdust (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,&__pyx_n_s_mean_dust,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mean_dust)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_mdust", 1, 2, 2, 1); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_mdust") < 0)) __PYX_ERR(0, 2432, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_n = values[0];
    __pyx_v_mean_dust = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_mdust", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2432, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_mdust", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_28get_mdust(__pyx_self, __pyx_v_n, __pyx_v_mean_dust);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2435
 * #
 * #
 *   def snell(n1, n2, theta1):             # <<<<<<<<<<<<<<
 * 
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9get_mdust_1snell(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9get_mdust_1snell = {"snell", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9get_mdust_1snell, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9get_mdust_1snell(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n1 = 0;
  PyObject *__pyx_v_n2 = 0;
  PyObject *__pyx_v_theta1 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("snell (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n1,&__pyx_n_s_n2,&__pyx_n_s_theta1,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snell", 1, 3, 3, 1); __PYX_ERR(0, 2435, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snell", 1, 3, 3, 2); __PYX_ERR(0, 2435, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "snell") < 0)) __PYX_ERR(0, 2435, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_n1 = values[0];
    __pyx_v_n2 = values[1];
    __pyx_v_theta1 = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("snell", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2435, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_mdust.snell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9get_mdust_snell(__pyx_self, __pyx_v_n1, __pyx_v_n2, __pyx_v_theta1);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9get_mdust_snell(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("snell", 0);

  /* "mirror_lib_v04.pyx":2437
 *   def snell(n1, n2, theta1):
 * 
 *     return np.arcsin(n1 * np.sin(theta1) / n2)             # <<<<<<<<<<<<<<
 * #
 *   def tpar(n1, n2, theta1, theta2):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_arcsin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_theta1);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_v_n1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_v_n2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2435
 * #
 * #
 *   def snell(n1, n2, theta1):             # <<<<<<<<<<<<<<
 * 
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_mdust.snell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2439
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 * #
 *   def tpar(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9get_mdust_3tpar(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9get_mdust_3tpar = {"tpar", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9get_mdust_3tpar, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9get_mdust_3tpar(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n1 = 0;
  PyObject *__pyx_v_n2 = 0;
  PyObject *__pyx_v_theta1 = 0;
  PyObject *__pyx_v_theta2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tpar (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n1,&__pyx_n_s_n2,&__pyx_n_s_theta1,&__pyx_n_s_theta2,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tpar", 1, 4, 4, 1); __PYX_ERR(0, 2439, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tpar", 1, 4, 4, 2); __PYX_ERR(0, 2439, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tpar", 1, 4, 4, 3); __PYX_ERR(0, 2439, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "tpar") < 0)) __PYX_ERR(0, 2439, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_n1 = values[0];
    __pyx_v_n2 = values[1];
    __pyx_v_theta1 = values[2];
    __pyx_v_theta2 = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tpar", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2439, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_mdust.tpar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9get_mdust_2tpar(__pyx_self, __pyx_v_n1, __pyx_v_n2, __pyx_v_theta1, __pyx_v_theta2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9get_mdust_2tpar(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1, PyObject *__pyx_v_theta2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("tpar", 0);

  /* "mirror_lib_v04.pyx":2441
 *   def tpar(n1, n2, theta1, theta2):
 * 
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))             # <<<<<<<<<<<<<<
 * #
 *   def tper(n1, n2, theta1, theta2):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_n1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_theta1);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_theta1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_n1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_1, __pyx_v_theta2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_theta2);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_v_n2, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2439
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 * #
 *   def tpar(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_mdust.tpar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2443
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 * #
 *   def tper(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta2)) / (n1 * np.cos(theta2) + n2 * np.cos(theta1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_9get_mdust_5tper(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_9get_mdust_5tper = {"tper", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_9get_mdust_5tper, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_9get_mdust_5tper(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n1 = 0;
  PyObject *__pyx_v_n2 = 0;
  PyObject *__pyx_v_theta1 = 0;
  PyObject *__pyx_v_theta2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tper (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n1,&__pyx_n_s_n2,&__pyx_n_s_theta1,&__pyx_n_s_theta2,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tper", 1, 4, 4, 1); __PYX_ERR(0, 2443, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tper", 1, 4, 4, 2); __PYX_ERR(0, 2443, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_theta2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("tper", 1, 4, 4, 3); __PYX_ERR(0, 2443, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "tper") < 0)) __PYX_ERR(0, 2443, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_n1 = values[0];
    __pyx_v_n2 = values[1];
    __pyx_v_theta1 = values[2];
    __pyx_v_theta2 = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tper", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2443, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_mdust.tper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_9get_mdust_4tper(__pyx_self, __pyx_v_n1, __pyx_v_n2, __pyx_v_theta1, __pyx_v_theta2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_9get_mdust_4tper(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n1, PyObject *__pyx_v_n2, PyObject *__pyx_v_theta1, PyObject *__pyx_v_theta2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("tper", 0);

  /* "mirror_lib_v04.pyx":2445
 *   def tper(n1, n2, theta1, theta2):
 * 
 *     return (2. * n1 * np.cos(theta2)) / (n1 * np.cos(theta2) + n2 * np.cos(theta1))             # <<<<<<<<<<<<<<
 * #
 *   #t_par_1 =
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_n1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_theta2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_theta2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_theta2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_theta2);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_v_n1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_1, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_theta1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_v_n2, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2443
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 * #
 *   def tper(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta2)) / (n1 * np.cos(theta2) + n2 * np.cos(theta1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pymirrors.get_mdust.tper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2432
 * #
 * 
 * def get_mdust(n, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */

static PyObject *__pyx_pf_9pymirrors_28get_mdust(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n, PyObject *__pyx_v_mean_dust) {
  PyObject *__pyx_v_snell = 0;
  PyObject *__pyx_v_tpar = 0;
  PyObject *__pyx_v_tper = 0;
  long __pyx_v_calculate;
  CYTHON_UNUSED PyObject *__pyx_v_rtd = NULL;
  double __pyx_v_upplim;
  double __pyx_v_n1;
  PyObject *__pyx_v_n2 = NULL;
  double __pyx_v_n3;
  long __pyx_v_num;
  PyObject *__pyx_v_dtor = NULL;
  PyObject *__pyx_v_thetas = NULL;
  PyObject *__pyx_v_dtheta = NULL;
  PyObject *__pyx_v_int1 = NULL;
  PyObject *__pyx_v_int3 = NULL;
  PyObject *__pyx_v_it_th1 = NULL;
  PyObject *__pyx_v_theta1 = NULL;
  PyObject *__pyx_v_theta2 = NULL;
  PyObject *__pyx_v_theta3 = NULL;
  PyObject *__pyx_v_tpar1 = NULL;
  PyObject *__pyx_v_tpar2 = NULL;
  PyObject *__pyx_v_tper1 = NULL;
  PyObject *__pyx_v_tper2 = NULL;
  PyObject *__pyx_v_it1 = NULL;
  PyObject *__pyx_v_it3 = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_v_mat = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_UCS4 __pyx_t_11;
  __Pyx_RefNannySetupContext("get_mdust", 0);

  /* "mirror_lib_v04.pyx":2435
 * #
 * #
 *   def snell(n1, n2, theta1):             # <<<<<<<<<<<<<<
 * 
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9get_mdust_1snell, 0, __pyx_n_s_get_mdust_locals_snell, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__92)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_snell = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2439
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 * #
 *   def tpar(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9get_mdust_3tpar, 0, __pyx_n_s_get_mdust_locals_tpar, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tpar = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2443
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 * #
 *   def tper(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta2)) / (n1 * np.cos(theta2) + n2 * np.cos(theta1))
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9pymirrors_9get_mdust_5tper, 0, __pyx_n_s_get_mdust_locals_tper, NULL, __pyx_n_s_pymirrors, __pyx_d, ((PyObject *)__pyx_codeobj__96)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tper = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2452
 *   #t_per_2 =
 * #
 *   calculate = 0 # This calculation has to be repeated when changing n of dust             # <<<<<<<<<<<<<<
 *   if (calculate == 1):
 *     ####upplim = 40.
 */
  __pyx_v_calculate = 0;

  /* "mirror_lib_v04.pyx":2453
 * #
 *   calculate = 0 # This calculation has to be repeated when changing n of dust
 *   if (calculate == 1):             # <<<<<<<<<<<<<<
 *     ####upplim = 40.
 *     rtd = 180. / np.pi
 */
  __pyx_t_2 = ((__pyx_v_calculate == 1) != 0);
  if (__pyx_t_2) {

    /* "mirror_lib_v04.pyx":2455
 *   if (calculate == 1):
 *     ####upplim = 40.
 *     rtd = 180. / np.pi             # <<<<<<<<<<<<<<
 *     upplim = 90.#np.arcsin(np.sin(np.pi/2.)*n2.real/n1.real)*rtd
 * #
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideCObj(__pyx_float_180_, __pyx_t_3, 180., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_rtd = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2456
 *     ####upplim = 40.
 *     rtd = 180. / np.pi
 *     upplim = 90.#np.arcsin(np.sin(np.pi/2.)*n2.real/n1.real)*rtd             # <<<<<<<<<<<<<<
 * #
 *     n1 = 1.
 */
    __pyx_v_upplim = 90.;

    /* "mirror_lib_v04.pyx":2458
 *     upplim = 90.#np.arcsin(np.sin(np.pi/2.)*n2.real/n1.real)*rtd
 * #
 *     n1 = 1.             # <<<<<<<<<<<<<<
 *     n2 = n * 1.
 *     n3 = 1.
 */
    __pyx_v_n1 = 1.;

    /* "mirror_lib_v04.pyx":2459
 * #
 *     n1 = 1.
 *     n2 = n * 1.             # <<<<<<<<<<<<<<
 *     n3 = 1.
 * #
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_n, __pyx_float_1_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_n2 = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2460
 *     n1 = 1.
 *     n2 = n * 1.
 *     n3 = 1.             # <<<<<<<<<<<<<<
 * #
 *     num = 100001
 */
    __pyx_v_n3 = 1.;

    /* "mirror_lib_v04.pyx":2462
 *     n3 = 1.
 * #
 *     num = 100001             # <<<<<<<<<<<<<<
 *     dtor = np.pi / 180.
 * 
 */
    __pyx_v_num = 0x186A1;

    /* "mirror_lib_v04.pyx":2463
 * #
 *     num = 100001
 *     dtor = np.pi / 180.             # <<<<<<<<<<<<<<
 * 
 *     thetas = np.linspace(0., upplim, num)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_3, __pyx_float_180_, 180., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_dtor = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2465
 *     dtor = np.pi / 180.
 * 
 *     thetas = np.linspace(0., upplim, num)             # <<<<<<<<<<<<<<
 *     dtheta = (thetas[1] - thetas[0]) * dtor
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_upplim); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_num); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2465, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_float_0_, __pyx_t_3, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2465, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_float_0_);
      __Pyx_GIVEREF(__pyx_float_0_);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_float_0_);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_thetas = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mirror_lib_v04.pyx":2466
 * 
 *     thetas = np.linspace(0., upplim, num)
 *     dtheta = (thetas[1] - thetas[0]) * dtor             # <<<<<<<<<<<<<<
 * 
 *     int1 = 0.
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_thetas, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_thetas, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_8, __pyx_v_dtor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_dtheta = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2468
 *     dtheta = (thetas[1] - thetas[0]) * dtor
 * 
 *     int1 = 0.             # <<<<<<<<<<<<<<
 *     int3 = 0.
 * 
 */
    __Pyx_INCREF(__pyx_float_0_);
    __pyx_v_int1 = __pyx_float_0_;

    /* "mirror_lib_v04.pyx":2469
 * 
 *     int1 = 0.
 *     int3 = 0.             # <<<<<<<<<<<<<<
 * 
 *     for it_th1 in thetas:
 */
    __Pyx_INCREF(__pyx_float_0_);
    __pyx_v_int3 = __pyx_float_0_;

    /* "mirror_lib_v04.pyx":2471
 *     int3 = 0.
 * 
 *     for it_th1 in thetas:             # <<<<<<<<<<<<<<
 * 
 *       theta1 = it_th1 * dtor
 */
    if (likely(PyList_CheckExact(__pyx_v_thetas)) || PyTuple_CheckExact(__pyx_v_thetas)) {
      __pyx_t_4 = __pyx_v_thetas; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_thetas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2471, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2471, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 2471, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 2471, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        }
      } else {
        __pyx_t_8 = __pyx_t_10(__pyx_t_4);
        if (unlikely(!__pyx_t_8)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2471, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_8);
      }
      __Pyx_XDECREF_SET(__pyx_v_it_th1, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2473
 *     for it_th1 in thetas:
 * 
 *       theta1 = it_th1 * dtor             # <<<<<<<<<<<<<<
 *       theta2 = snell(n1, n2, theta1)
 *   ####    print(it_th1, theta2/dtor)
 */
      __pyx_t_8 = PyNumber_Multiply(__pyx_v_it_th1, __pyx_v_dtor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2473, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_XDECREF_SET(__pyx_v_theta1, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2474
 * 
 *       theta1 = it_th1 * dtor
 *       theta2 = snell(n1, n2, theta1)             # <<<<<<<<<<<<<<
 *   ####    print(it_th1, theta2/dtor)
 *   ####    if ( theta2/dtor > 45.):
 */
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2474, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __pyx_pf_9pymirrors_9get_mdust_snell(__pyx_v_snell, __pyx_t_8, __pyx_v_n2, __pyx_v_theta1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2474, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_theta2, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":2479
 *   ####      print(theta2/dtor)
 *   ####      continue
 *       theta3 = snell(n2.real, n3.real, theta2)             # <<<<<<<<<<<<<<
 * 
 *       tpar1 = tpar(n1.real, n2.real, theta1, theta2)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_n2, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2479, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2479, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2479, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __pyx_pf_9pymirrors_9get_mdust_snell(__pyx_v_snell, __pyx_t_1, __pyx_t_5, __pyx_v_theta2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2479, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_theta3, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2481
 *       theta3 = snell(n2.real, n3.real, theta2)
 * 
 *       tpar1 = tpar(n1.real, n2.real, theta1, theta2)             # <<<<<<<<<<<<<<
 *       tpar2 = tpar(n2.real, n3.real, theta2, theta3)
 *       tper1 = tper(n1.real, n2.real, theta1, theta2)
 */
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_n2, __pyx_n_s_real); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __pyx_pf_9pymirrors_9get_mdust_2tpar(__pyx_v_tpar, __pyx_t_5, __pyx_t_8, __pyx_v_theta1, __pyx_v_theta2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_tpar1, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":2482
 * 
 *       tpar1 = tpar(n1.real, n2.real, theta1, theta2)
 *       tpar2 = tpar(n2.real, n3.real, theta2, theta3)             # <<<<<<<<<<<<<<
 *       tper1 = tper(n1.real, n2.real, theta1, theta2)
 *       tper2 = tper(n2.real, n3.real, theta2, theta3)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_n2, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __pyx_pf_9pymirrors_9get_mdust_2tpar(__pyx_v_tpar, __pyx_t_1, __pyx_t_5, __pyx_v_theta2, __pyx_v_theta3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2482, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_tpar2, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2483
 *       tpar1 = tpar(n1.real, n2.real, theta1, theta2)
 *       tpar2 = tpar(n2.real, n3.real, theta2, theta3)
 *       tper1 = tper(n1.real, n2.real, theta1, theta2)             # <<<<<<<<<<<<<<
 *       tper2 = tper(n2.real, n3.real, theta2, theta3)
 * ####      theta3 = snell(n2, n3, theta2)
 */
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_n2, __pyx_n_s_real); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __pyx_pf_9pymirrors_9get_mdust_4tper(__pyx_v_tper, __pyx_t_5, __pyx_t_8, __pyx_v_theta1, __pyx_v_theta2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2483, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_tper1, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":2484
 *       tpar2 = tpar(n2.real, n3.real, theta2, theta3)
 *       tper1 = tper(n1.real, n2.real, theta1, theta2)
 *       tper2 = tper(n2.real, n3.real, theta2, theta3)             # <<<<<<<<<<<<<<
 * ####      theta3 = snell(n2, n3, theta2)
 * ####
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_n2, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_n3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __pyx_pf_9pymirrors_9get_mdust_4tper(__pyx_v_tper, __pyx_t_1, __pyx_t_5, __pyx_v_theta2, __pyx_v_theta3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_tper2, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2492
 * ####      tper2 = tper(n2, n3, theta2, theta3)
 * 
 *       it1 = (tpar1*tpar2)**2+(tper1*tper2)**2             # <<<<<<<<<<<<<<
 *       it3 = 2. * tpar1 * tpar2 * tper1 * tper2
 * 
 */
      __pyx_t_8 = PyNumber_Multiply(__pyx_v_tpar1, __pyx_v_tpar2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2492, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = PyNumber_Power(__pyx_t_8, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2492, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Multiply(__pyx_v_tper1, __pyx_v_tper2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2492, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = PyNumber_Power(__pyx_t_8, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2492, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Add(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2492, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it1, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2493
 * 
 *       it1 = (tpar1*tpar2)**2+(tper1*tper2)**2
 *       it3 = 2. * tpar1 * tpar2 * tper1 * tper2             # <<<<<<<<<<<<<<
 * 
 *       int1 += it1 * np.sin(theta1) * dtheta
 */
      __pyx_t_8 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_tpar1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2493, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_8, __pyx_v_tpar2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2493, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_v_tper1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2493, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_8, __pyx_v_tper2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2493, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_it3, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "mirror_lib_v04.pyx":2495
 *       it3 = 2. * tpar1 * tpar2 * tper1 * tper2
 * 
 *       int1 += it1 * np.sin(theta1) * dtheta             # <<<<<<<<<<<<<<
 *       int3 += it3 * np.sin(theta1) * dtheta
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_theta1);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Multiply(__pyx_v_it1, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_v_dtheta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_int1, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF_SET(__pyx_v_int1, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "mirror_lib_v04.pyx":2496
 * 
 *       int1 += it1 * np.sin(theta1) * dtheta
 *       int3 += it3 * np.sin(theta1) * dtheta             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sin); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_1, __pyx_v_theta1) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_theta1);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Multiply(__pyx_v_it3, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Multiply(__pyx_t_8, __pyx_v_dtheta); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_v_int3, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2496, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_int3, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2471
 *     int3 = 0.
 * 
 *     for it_th1 in thetas:             # <<<<<<<<<<<<<<
 * 
 *       theta1 = it_th1 * dtor
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2499
 * 
 * 
 *     print("a = %.8f / 2. / np.pi" % (int1,))             # <<<<<<<<<<<<<<
 *     print("d = %.8f / 2. / np.pi" % (int3,))
 * 
 */
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = 0;
    __pyx_t_11 = 127;
    __Pyx_INCREF(__pyx_kp_u_a_2);
    __pyx_t_9 += 4;
    __Pyx_GIVEREF(__pyx_kp_u_a_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_a_2);
    __pyx_t_8 = __Pyx_PyObject_Format(__pyx_v_int1, __pyx_kp_u_8f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_11;
    __pyx_t_9 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_INCREF(__pyx_kp_u_2_np_pi);
    __pyx_t_9 += 13;
    __Pyx_GIVEREF(__pyx_kp_u_2_np_pi);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_2_np_pi);
    __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_9, __pyx_t_11); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2500
 * 
 *     print("a = %.8f / 2. / np.pi" % (int1,))
 *     print("d = %.8f / 2. / np.pi" % (int3,))             # <<<<<<<<<<<<<<
 * 
 * ###    print(int1)
 */
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2500, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = 0;
    __pyx_t_11 = 127;
    __Pyx_INCREF(__pyx_kp_u_d);
    __pyx_t_9 += 4;
    __Pyx_GIVEREF(__pyx_kp_u_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_d);
    __pyx_t_8 = __Pyx_PyObject_Format(__pyx_v_int3, __pyx_kp_u_8f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2500, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_11;
    __pyx_t_9 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_8 = 0;
    __Pyx_INCREF(__pyx_kp_u_2_np_pi);
    __pyx_t_9 += 13;
    __Pyx_GIVEREF(__pyx_kp_u_2_np_pi);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_2_np_pi);
    __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_9, __pyx_t_11); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2500, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2500, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2504
 * ###    print(int1)
 * ###    print(int3)
 *     stop()             # <<<<<<<<<<<<<<
 * 
 *   #a = (t_par_2 * t_par_1)**2 + (t_per_2 * t_per_1)**2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_stop); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mirror_lib_v04.pyx":2453
 * #
 *   calculate = 0 # This calculation has to be repeated when changing n of dust
 *   if (calculate == 1):             # <<<<<<<<<<<<<<
 *     ####upplim = 40.
 *     rtd = 180. / np.pi
 */
  }

  /* "mirror_lib_v04.pyx":2512
 *   #a = 0.42751143
 *   #d = 0.42720953
 *   a = 1.38942494 / 2. / np.pi             # <<<<<<<<<<<<<<
 *   d = 1.35253306 / 2. / np.pi
 * #
 */
  __pyx_t_4 = PyFloat_FromDouble((1.38942494 / 2.)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_pi); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_a = __pyx_t_8;
  __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2513
 *   #d = 0.42720953
 *   a = 1.38942494 / 2. / np.pi
 *   d = 1.35253306 / 2. / np.pi             # <<<<<<<<<<<<<<
 * #
 *   #a = a.real[0] / 4. * np.pi
 */
  __pyx_t_8 = PyFloat_FromDouble((1.35253306 / 2.)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_pi); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_d = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "mirror_lib_v04.pyx":2517
 *   #a = a.real[0] / 4. * np.pi
 *   #d = d.real[0] / 4. * np.pi
 *   a = a / 4. * np.pi             # <<<<<<<<<<<<<<
 *   d = d / 4. * np.pi
 * #
 */
  __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_a, __pyx_float_4_, 4., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF_SET(__pyx_v_a, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "mirror_lib_v04.pyx":2518
 *   #d = d.real[0] / 4. * np.pi
 *   a = a / 4. * np.pi
 *   d = d / 4. * np.pi             # <<<<<<<<<<<<<<
 * #
 *   mat = np.zeros((4,4))
 */
  __pyx_t_4 = __Pyx_PyFloat_TrueDivideObjC(__pyx_v_d, __pyx_float_4_, 4., 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_pi); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF_SET(__pyx_v_d, __pyx_t_8);
  __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2520
 *   d = d / 4. * np.pi
 * #
 *   mat = np.zeros((4,4))             # <<<<<<<<<<<<<<
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_tuple__97) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_tuple__97);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_mat = __pyx_t_8;
  __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2521
 * #
 *   mat = np.zeros((4,4))
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))             # <<<<<<<<<<<<<<
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_exp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyFloat_SubtractObjC(__pyx_t_1, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__98, __pyx_t_8) < 0)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2522
 *   mat = np.zeros((4,4))
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))             # <<<<<<<<<<<<<<
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_exp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyNumber_Add(__pyx_v_a, __pyx_v_d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyFloat_SubtractObjC(__pyx_t_3, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__99, __pyx_t_8) < 0)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2523
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))             # <<<<<<<<<<<<<<
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))
 * #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_exp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Add(__pyx_v_a, __pyx_v_d); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyFloat_SubtractObjC(__pyx_t_4, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__79, __pyx_t_8) < 0)) __PYX_ERR(0, 2523, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2524
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))             # <<<<<<<<<<<<<<
 * #
 *   return mat
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_exp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Multiply(__pyx_float_2_, __pyx_v_d); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyFloat_SubtractObjC(__pyx_t_5, __pyx_float_1_, 1., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__100, __pyx_t_8) < 0)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mirror_lib_v04.pyx":2526
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))
 * #
 *   return mat             # <<<<<<<<<<<<<<
 * 
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_mat);
  __pyx_r = __pyx_v_mat;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2432
 * #
 * 
 * def get_mdust(n, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pymirrors.get_mdust", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_snell);
  __Pyx_XDECREF(__pyx_v_tpar);
  __Pyx_XDECREF(__pyx_v_tper);
  __Pyx_XDECREF(__pyx_v_rtd);
  __Pyx_XDECREF(__pyx_v_n2);
  __Pyx_XDECREF(__pyx_v_dtor);
  __Pyx_XDECREF(__pyx_v_thetas);
  __Pyx_XDECREF(__pyx_v_dtheta);
  __Pyx_XDECREF(__pyx_v_int1);
  __Pyx_XDECREF(__pyx_v_int3);
  __Pyx_XDECREF(__pyx_v_it_th1);
  __Pyx_XDECREF(__pyx_v_theta1);
  __Pyx_XDECREF(__pyx_v_theta2);
  __Pyx_XDECREF(__pyx_v_theta3);
  __Pyx_XDECREF(__pyx_v_tpar1);
  __Pyx_XDECREF(__pyx_v_tpar2);
  __Pyx_XDECREF(__pyx_v_tper1);
  __Pyx_XDECREF(__pyx_v_tper2);
  __Pyx_XDECREF(__pyx_v_it1);
  __Pyx_XDECREF(__pyx_v_it3);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_mat);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2532
 * #
 * 
 * def new_get_mdust(p0, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_31new_get_mdust(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_31new_get_mdust = {"new_get_mdust", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_31new_get_mdust, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_31new_get_mdust(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_p0 = 0;
  PyObject *__pyx_v_mean_dust = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("new_get_mdust (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p0,&__pyx_n_s_mean_dust,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_p0)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mean_dust)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("new_get_mdust", 1, 2, 2, 1); __PYX_ERR(0, 2532, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "new_get_mdust") < 0)) __PYX_ERR(0, 2532, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_p0 = values[0];
    __pyx_v_mean_dust = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("new_get_mdust", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2532, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.new_get_mdust", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_30new_get_mdust(__pyx_self, __pyx_v_p0, __pyx_v_mean_dust);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_30new_get_mdust(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_p0, PyObject *__pyx_v_mean_dust) {
  PyObject *__pyx_v_mat = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("new_get_mdust", 0);

  /* "mirror_lib_v04.pyx":2535
 * #
 * #
 *   mat = np.zeros((4,4))             # <<<<<<<<<<<<<<
 *   mat[0,0] = 1. - mean_dust.real# * (1.-p0)
 *   mat[1,1] = 1. - mean_dust.real# * (1.-p0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_tuple__97) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_tuple__97);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_mat = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2536
 * #
 *   mat = np.zeros((4,4))
 *   mat[0,0] = 1. - mean_dust.real# * (1.-p0)             # <<<<<<<<<<<<<<
 *   mat[1,1] = 1. - mean_dust.real# * (1.-p0)
 *   mat[2,2] = 1. - mean_dust.real# * (1.-p0)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_, __pyx_t_1, 1., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__98, __pyx_t_3) < 0)) __PYX_ERR(0, 2536, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":2537
 *   mat = np.zeros((4,4))
 *   mat[0,0] = 1. - mean_dust.real# * (1.-p0)
 *   mat[1,1] = 1. - mean_dust.real# * (1.-p0)             # <<<<<<<<<<<<<<
 *   mat[2,2] = 1. - mean_dust.real# * (1.-p0)
 *   mat[3,3] = 1. - mean_dust.real# * (1.-p0)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_, __pyx_t_3, 1., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__99, __pyx_t_1) < 0)) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2538
 *   mat[0,0] = 1. - mean_dust.real# * (1.-p0)
 *   mat[1,1] = 1. - mean_dust.real# * (1.-p0)
 *   mat[2,2] = 1. - mean_dust.real# * (1.-p0)             # <<<<<<<<<<<<<<
 *   mat[3,3] = 1. - mean_dust.real# * (1.-p0)
 * #
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_, __pyx_t_1, 1., 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__79, __pyx_t_3) < 0)) __PYX_ERR(0, 2538, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "mirror_lib_v04.pyx":2539
 *   mat[1,1] = 1. - mean_dust.real# * (1.-p0)
 *   mat[2,2] = 1. - mean_dust.real# * (1.-p0)
 *   mat[3,3] = 1. - mean_dust.real# * (1.-p0)             # <<<<<<<<<<<<<<
 * #
 *   return mat
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_mean_dust, __pyx_n_s_real); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_, __pyx_t_3, 1., 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_mat, __pyx_tuple__100, __pyx_t_1) < 0)) __PYX_ERR(0, 2539, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2541
 *   mat[3,3] = 1. - mean_dust.real# * (1.-p0)
 * #
 *   return mat             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_mat);
  __pyx_r = __pyx_v_mat;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2532
 * #
 * 
 * def new_get_mdust(p0, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pymirrors.new_get_mdust", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mat);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mirror_lib_v04.pyx":2547
 * #
 * 
 * def get_mueller_time(segments, materials,cdust=False, thetaref=0., nthreads=1):             # <<<<<<<<<<<<<<
 * 
 *   import apy_utils as uts
 */

/* Python wrapper */
static PyObject *__pyx_pw_9pymirrors_33get_mueller_time(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9pymirrors_33get_mueller_time = {"get_mueller_time", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9pymirrors_33get_mueller_time, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pymirrors_33get_mueller_time(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_segments = 0;
  PyObject *__pyx_v_materials = 0;
  PyObject *__pyx_v_cdust = 0;
  CYTHON_UNUSED PyObject *__pyx_v_thetaref = 0;
  PyObject *__pyx_v_nthreads = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_mueller_time (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_segments,&__pyx_n_s_materials,&__pyx_n_s_cdust,&__pyx_n_s_thetaref,&__pyx_n_s_nthreads,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[2] = ((PyObject *)Py_False);
    values[3] = ((PyObject *)__pyx_float_0_);
    values[4] = ((PyObject *)__pyx_int_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_segments)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_materials)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_mueller_time", 0, 2, 5, 1); __PYX_ERR(0, 2547, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cdust);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_thetaref);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nthreads);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_mueller_time") < 0)) __PYX_ERR(0, 2547, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_segments = values[0];
    __pyx_v_materials = values[1];
    __pyx_v_cdust = values[2];
    __pyx_v_thetaref = values[3];
    __pyx_v_nthreads = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_mueller_time", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2547, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pymirrors.get_mueller_time", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pymirrors_32get_mueller_time(__pyx_self, __pyx_v_segments, __pyx_v_materials, __pyx_v_cdust, __pyx_v_thetaref, __pyx_v_nthreads);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pymirrors_32get_mueller_time(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_segments, PyObject *__pyx_v_materials, PyObject *__pyx_v_cdust, CYTHON_UNUSED PyObject *__pyx_v_thetaref, PyObject *__pyx_v_nthreads) {
  CYTHON_UNUSED PyObject *__pyx_v_uts = NULL;
  PyObject *__pyx_v_tarea = NULL;
  PyObject *__pyx_v_it = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_v_avg_res = NULL;
  PyObject *__pyx_v_it_tms = NULL;
  PyObject *__pyx_v_npts_seg = NULL;
  PyObject *__pyx_v_ntot2 = NULL;
  PyObject *__pyx_v_it_sgm = NULL;
  PyObject *__pyx_v_mmpa_full = NULL;
  PyObject *__pyx_v_mmpd = NULL;
  PyObject *__pyx_v_res_full = NULL;
  PyObject *__pyx_v_nn = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_v_txt = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  int __pyx_t_25;
  PyObject *(*__pyx_t_26)(PyObject *);
  __Pyx_RefNannySetupContext("get_mueller_time", 0);

  /* "mirror_lib_v04.pyx":2549
 * def get_mueller_time(segments, materials,cdust=False, thetaref=0., nthreads=1):
 * 
 *   import apy_utils as uts             # <<<<<<<<<<<<<<
 * #
 *   tarea = 0.
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_apy_utils, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_uts = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2551
 *   import apy_utils as uts
 * #
 *   tarea = 0.             # <<<<<<<<<<<<<<
 *   for it in range(segments.N):
 *     tarea += np.sum(segments.area['%i' % (it,)])
 */
  __Pyx_INCREF(__pyx_float_0_);
  __pyx_v_tarea = __pyx_float_0_;

  /* "mirror_lib_v04.pyx":2552
 * #
 *   tarea = 0.
 *   for it in range(segments.N):             # <<<<<<<<<<<<<<
 *     tarea += np.sum(segments.area['%i' % (it,)])
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_N); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2552, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2552, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 2552, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2552, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 2552, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2552, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 2552, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_it, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mirror_lib_v04.pyx":2553
 *   tarea = 0.
 *   for it in range(segments.N):
 *     tarea += np.sum(segments.area['%i' % (it,)])             # <<<<<<<<<<<<<<
 * 
 * #RUN TIMES:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sum); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_area); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_it);
    __Pyx_GIVEREF(__pyx_v_it);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_it);
    __pyx_t_8 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_tarea, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_tarea, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "mirror_lib_v04.pyx":2552
 * #
 *   tarea = 0.
 *   for it in range(segments.N):             # <<<<<<<<<<<<<<
 *     tarea += np.sum(segments.area['%i' % (it,)])
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2556
 * 
 * #RUN TIMES:
 *   res = np.zeros((segments.SimulatedTimes, segments.N, 4, 4))             # <<<<<<<<<<<<<<
 *   avg_res = np.zeros((segments.SimulatedTimes, 4, 4))
 * #  avg_res_test = np.zeros((4, 4))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_N); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyTuple_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_7);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_8, 3, __pyx_int_4);
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_8);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_res = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2557
 * #RUN TIMES:
 *   res = np.zeros((segments.SimulatedTimes, segments.N, 4, 4))
 *   avg_res = np.zeros((segments.SimulatedTimes, 4, 4))             # <<<<<<<<<<<<<<
 * #  avg_res_test = np.zeros((4, 4))
 *   for it_tms in range(segments.SimulatedTimes):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_int_4);
  __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_v_avg_res = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2559
 *   avg_res = np.zeros((segments.SimulatedTimes, 4, 4))
 * #  avg_res_test = np.zeros((4, 4))
 *   for it_tms in range(segments.SimulatedTimes):             # <<<<<<<<<<<<<<
 *     #print("Timestep: %i of %i" % (it_tms, segments.SimulatedTimes))
 * #RUN SEGMENTS:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
    __pyx_t_1 = __pyx_t_8; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2559, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2559, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_8 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_8); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 2559, __pyx_L1_error)
        #else
        __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2559, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_8); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 2559, __pyx_L1_error)
        #else
        __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2559, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        #endif
      }
    } else {
      __pyx_t_8 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_8)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 2559, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_8);
    }
    __Pyx_XDECREF_SET(__pyx_v_it_tms, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":2562
 *     #print("Timestep: %i of %i" % (it_tms, segments.SimulatedTimes))
 * #RUN SEGMENTS:
 *     npts_seg = np.ones((segments.N,), dtype=np.float64)             # <<<<<<<<<<<<<<
 *     ntot2=0
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_ones); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_N); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_float64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_npts_seg, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2563
 * #RUN SEGMENTS:
 *     npts_seg = np.ones((segments.N,), dtype=np.float64)
 *     ntot2=0             # <<<<<<<<<<<<<<
 * 
 *     for it_sgm in range(segments.N):
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_ntot2, __pyx_int_0);

    /* "mirror_lib_v04.pyx":2565
 *     ntot2=0
 * 
 *     for it_sgm in range(segments.N):             # <<<<<<<<<<<<<<
 * #
 *       if (segments.i['%i' % (it_sgm,)].size<1):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_N); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2565, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2565, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2565, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2565, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 2565, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2565, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 2565, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2565, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2565, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_it_sgm, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mirror_lib_v04.pyx":2567
 *     for it_sgm in range(segments.N):
 * #
 *       if (segments.i['%i' % (it_sgm,)].size<1):             # <<<<<<<<<<<<<<
 *         npts_seg[it_sgm] = 0.
 *         res[it_tms,it_sgm,:,:] = res[it_tms,it_sgm,:,:] * 0.
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_it_sgm);
      __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_size); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_RichCompare(__pyx_t_7, __pyx_int_1, Py_LT); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 2567, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_11) {

        /* "mirror_lib_v04.pyx":2568
 * #
 *       if (segments.i['%i' % (it_sgm,)].size<1):
 *         npts_seg[it_sgm] = 0.             # <<<<<<<<<<<<<<
 *         res[it_tms,it_sgm,:,:] = res[it_tms,it_sgm,:,:] * 0.
 *         continue
 */
        if (unlikely(PyObject_SetItem(__pyx_v_npts_seg, __pyx_v_it_sgm, __pyx_float_0_) < 0)) __PYX_ERR(0, 2568, __pyx_L1_error)

        /* "mirror_lib_v04.pyx":2569
 *       if (segments.i['%i' % (it_sgm,)].size<1):
 *         npts_seg[it_sgm] = 0.
 *         res[it_tms,it_sgm,:,:] = res[it_tms,it_sgm,:,:] * 0.             # <<<<<<<<<<<<<<
 *         continue
 * 
 */
        __pyx_t_8 = PyTuple_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2569, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_it_tms);
        __Pyx_GIVEREF(__pyx_v_it_tms);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_it_tms);
        __Pyx_INCREF(__pyx_v_it_sgm);
        __Pyx_GIVEREF(__pyx_v_it_sgm);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_it_sgm);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_slice__30);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_8, 3, __pyx_slice__30);
        __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_res, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2569, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Multiply(__pyx_t_7, __pyx_float_0_); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2569, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = PyTuple_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2569, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_it_tms);
        __Pyx_GIVEREF(__pyx_v_it_tms);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_it_tms);
        __Pyx_INCREF(__pyx_v_it_sgm);
        __Pyx_GIVEREF(__pyx_v_it_sgm);
        PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_v_it_sgm);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_slice__30);
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_slice__30);
        if (unlikely(PyObject_SetItem(__pyx_v_res, __pyx_t_7, __pyx_t_8) < 0)) __PYX_ERR(0, 2569, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "mirror_lib_v04.pyx":2570
 *         npts_seg[it_sgm] = 0.
 *         res[it_tms,it_sgm,:,:] = res[it_tms,it_sgm,:,:] * 0.
 *         continue             # <<<<<<<<<<<<<<
 * 
 *       mmpa_full = chex_syst(segments.i['%i' % (it_sgm,)], \
 */
        goto __pyx_L7_continue;

        /* "mirror_lib_v04.pyx":2567
 *     for it_sgm in range(segments.N):
 * #
 *       if (segments.i['%i' % (it_sgm,)].size<1):             # <<<<<<<<<<<<<<
 *         npts_seg[it_sgm] = 0.
 *         res[it_tms,it_sgm,:,:] = res[it_tms,it_sgm,:,:] * 0.
 */
      }

      /* "mirror_lib_v04.pyx":2572
 *         continue
 * 
 *       mmpa_full = chex_syst(segments.i['%i' % (it_sgm,)], \             # <<<<<<<<<<<<<<
 *           segments.th1['%i' % (it_sgm,)], \
 *           segments.i2['%i' % (it_sgm,)], \
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_chex_syst); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2572, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2572, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2572, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_it_sgm);
      __pyx_t_12 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2572, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_t_12); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2572, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "mirror_lib_v04.pyx":2573
 * 
 *       mmpa_full = chex_syst(segments.i['%i' % (it_sgm,)], \
 *           segments.th1['%i' % (it_sgm,)], \             # <<<<<<<<<<<<<<
 *           segments.i2['%i' % (it_sgm,)], \
 *           materials.lamb, materials.n_s, materials.n_c\
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_th1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2573, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2573, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_it_sgm);
      __pyx_t_13 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2573, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2573, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

      /* "mirror_lib_v04.pyx":2574
 *       mmpa_full = chex_syst(segments.i['%i' % (it_sgm,)], \
 *           segments.th1['%i' % (it_sgm,)], \
 *           segments.i2['%i' % (it_sgm,)], \             # <<<<<<<<<<<<<<
 *           materials.lamb, materials.n_s, materials.n_c\
 *           , materials.n_ox, materials.n_d, materials.n_in, \
 */
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_i2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_v_it_sgm);
      __pyx_t_14 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_PyObject_Dict_GetItem(__pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "mirror_lib_v04.pyx":2575
 *           segments.th1['%i' % (it_sgm,)], \
 *           segments.i2['%i' % (it_sgm,)], \
 *           materials.lamb, materials.n_s, materials.n_c\             # <<<<<<<<<<<<<<
 *           , materials.n_ox, materials.n_d, materials.n_in, \
 *           materials.d_s[it_sgm, it_tms], \
 */
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_lamb); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2575, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_n_s); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2575, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_n_c); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2575, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);

      /* "mirror_lib_v04.pyx":2576
 *           segments.i2['%i' % (it_sgm,)], \
 *           materials.lamb, materials.n_s, materials.n_c\
 *           , materials.n_ox, materials.n_d, materials.n_in, \             # <<<<<<<<<<<<<<
 *           materials.d_s[it_sgm, it_tms], \
 *           materials.d_c[it_sgm, it_tms]\
 */
      __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_n_ox); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_n_d); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 2576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_n_in); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 2576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);

      /* "mirror_lib_v04.pyx":2577
 *           materials.lamb, materials.n_s, materials.n_c\
 *           , materials.n_ox, materials.n_d, materials.n_in, \
 *           materials.d_s[it_sgm, it_tms], \             # <<<<<<<<<<<<<<
 *           materials.d_c[it_sgm, it_tms]\
 *           , materials.d_ox[it_sgm, it_tms], materials.d_d[it_sgm, it_tms] \
 */
      __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_d_s); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 2577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_20 = PyTuple_New(2); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_v_it_sgm);
      __Pyx_INCREF(__pyx_v_it_tms);
      __Pyx_GIVEREF(__pyx_v_it_tms);
      PyTuple_SET_ITEM(__pyx_t_20, 1, __pyx_v_it_tms);
      __pyx_t_21 = __Pyx_PyObject_GetItem(__pyx_t_19, __pyx_t_20); if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 2577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_21);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;

      /* "mirror_lib_v04.pyx":2578
 *           , materials.n_ox, materials.n_d, materials.n_in, \
 *           materials.d_s[it_sgm, it_tms], \
 *           materials.d_c[it_sgm, it_tms]\             # <<<<<<<<<<<<<<
 *           , materials.d_ox[it_sgm, it_tms], materials.d_d[it_sgm, it_tms] \
 *           , nthreads)
 */
      __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_d_c); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2578, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_19 = PyTuple_New(2); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 2578, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_v_it_sgm);
      __Pyx_INCREF(__pyx_v_it_tms);
      __Pyx_GIVEREF(__pyx_v_it_tms);
      PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_v_it_tms);
      __pyx_t_22 = __Pyx_PyObject_GetItem(__pyx_t_20, __pyx_t_19); if (unlikely(!__pyx_t_22)) __PYX_ERR(0, 2578, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_22);
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;

      /* "mirror_lib_v04.pyx":2579
 *           materials.d_s[it_sgm, it_tms], \
 *           materials.d_c[it_sgm, it_tms]\
 *           , materials.d_ox[it_sgm, it_tms], materials.d_d[it_sgm, it_tms] \             # <<<<<<<<<<<<<<
 *           , nthreads)
 * 
 */
      __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_d_ox); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_20 = PyTuple_New(2); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_v_it_sgm);
      __Pyx_INCREF(__pyx_v_it_tms);
      __Pyx_GIVEREF(__pyx_v_it_tms);
      PyTuple_SET_ITEM(__pyx_t_20, 1, __pyx_v_it_tms);
      __pyx_t_23 = __Pyx_PyObject_GetItem(__pyx_t_19, __pyx_t_20); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_23);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_d_d); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_19 = PyTuple_New(2); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_v_it_sgm);
      __Pyx_INCREF(__pyx_v_it_tms);
      __Pyx_GIVEREF(__pyx_v_it_tms);
      PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_v_it_tms);
      __pyx_t_24 = __Pyx_PyObject_GetItem(__pyx_t_20, __pyx_t_19); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;

      /* "mirror_lib_v04.pyx":2580
 *           materials.d_c[it_sgm, it_tms]\
 *           , materials.d_ox[it_sgm, it_tms], materials.d_d[it_sgm, it_tms] \
 *           , nthreads)             # <<<<<<<<<<<<<<
 * 
 *       #GET Mdust
 */
      __pyx_t_19 = NULL;
      __pyx_t_25 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_19)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_19);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_25 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[15] = {__pyx_t_19, __pyx_t_6, __pyx_t_2, __pyx_t_12, __pyx_t_14, __pyx_t_13, __pyx_t_15, __pyx_t_16, __pyx_t_17, __pyx_t_18, __pyx_t_21, __pyx_t_22, __pyx_t_23, __pyx_t_24, __pyx_v_nthreads};
        __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 14+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2572, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[15] = {__pyx_t_19, __pyx_t_6, __pyx_t_2, __pyx_t_12, __pyx_t_14, __pyx_t_13, __pyx_t_15, __pyx_t_16, __pyx_t_17, __pyx_t_18, __pyx_t_21, __pyx_t_22, __pyx_t_23, __pyx_t_24, __pyx_v_nthreads};
        __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 14+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2572, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
        __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      } else
      #endif
      {
        __pyx_t_20 = PyTuple_New(14+__pyx_t_25); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        if (__pyx_t_19) {
          __Pyx_GIVEREF(__pyx_t_19); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_19); __pyx_t_19 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_25, __pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_25, __pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_20, 2+__pyx_t_25, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_14);
        PyTuple_SET_ITEM(__pyx_t_20, 3+__pyx_t_25, __pyx_t_14);
        __Pyx_GIVEREF(__pyx_t_13);
        PyTuple_SET_ITEM(__pyx_t_20, 4+__pyx_t_25, __pyx_t_13);
        __Pyx_GIVEREF(__pyx_t_15);
        PyTuple_SET_ITEM(__pyx_t_20, 5+__pyx_t_25, __pyx_t_15);
        __Pyx_GIVEREF(__pyx_t_16);
        PyTuple_SET_ITEM(__pyx_t_20, 6+__pyx_t_25, __pyx_t_16);
        __Pyx_GIVEREF(__pyx_t_17);
        PyTuple_SET_ITEM(__pyx_t_20, 7+__pyx_t_25, __pyx_t_17);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_20, 8+__pyx_t_25, __pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_21);
        PyTuple_SET_ITEM(__pyx_t_20, 9+__pyx_t_25, __pyx_t_21);
        __Pyx_GIVEREF(__pyx_t_22);
        PyTuple_SET_ITEM(__pyx_t_20, 10+__pyx_t_25, __pyx_t_22);
        __Pyx_GIVEREF(__pyx_t_23);
        PyTuple_SET_ITEM(__pyx_t_20, 11+__pyx_t_25, __pyx_t_23);
        __Pyx_GIVEREF(__pyx_t_24);
        PyTuple_SET_ITEM(__pyx_t_20, 12+__pyx_t_25, __pyx_t_24);
        __Pyx_INCREF(__pyx_v_nthreads);
        __Pyx_GIVEREF(__pyx_v_nthreads);
        PyTuple_SET_ITEM(__pyx_t_20, 13+__pyx_t_25, __pyx_v_nthreads);
        __pyx_t_6 = 0;
        __pyx_t_2 = 0;
        __pyx_t_12 = 0;
        __pyx_t_14 = 0;
        __pyx_t_13 = 0;
        __pyx_t_15 = 0;
        __pyx_t_16 = 0;
        __pyx_t_17 = 0;
        __pyx_t_18 = 0;
        __pyx_t_21 = 0;
        __pyx_t_22 = 0;
        __pyx_t_23 = 0;
        __pyx_t_24 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_20, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v_mmpa_full, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2583
 * 
 *       #GET Mdust
 *       if (cdust==True):             # <<<<<<<<<<<<<<
 *         ###mmpd = get_mdust(materials.n_d, materials.d_d[it_sgm, it_tms])
 *         mmpd = new_get_mdust(0.1, materials.d_d[it_sgm, it_tms])
 */
      __pyx_t_8 = PyObject_RichCompare(__pyx_v_cdust, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2583, __pyx_L1_error)
      __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 2583, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_11) {

        /* "mirror_lib_v04.pyx":2585
 *       if (cdust==True):
 *         ###mmpd = get_mdust(materials.n_d, materials.d_d[it_sgm, it_tms])
 *         mmpd = new_get_mdust(0.1, materials.d_d[it_sgm, it_tms])             # <<<<<<<<<<<<<<
 *         res_full = mmpa_full.dot(mmpd)
 *       else:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_new_get_mdust); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2585, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_materials, __pyx_n_s_d_d); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2585, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_24 = PyTuple_New(2); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2585, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        __Pyx_INCREF(__pyx_v_it_sgm);
        __Pyx_GIVEREF(__pyx_v_it_sgm);
        PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_v_it_sgm);
        __Pyx_INCREF(__pyx_v_it_tms);
        __Pyx_GIVEREF(__pyx_v_it_tms);
        PyTuple_SET_ITEM(__pyx_t_24, 1, __pyx_v_it_tms);
        __pyx_t_23 = __Pyx_PyObject_GetItem(__pyx_t_20, __pyx_t_24); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 2585, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __pyx_t_24 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_24 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_24)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_24);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_float_0_1, __pyx_t_23};
          __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2585, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_24, __pyx_float_0_1, __pyx_t_23};
          __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2585, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
        } else
        #endif
        {
          __pyx_t_20 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2585, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_20);
          if (__pyx_t_24) {
            __Pyx_GIVEREF(__pyx_t_24); PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_24); __pyx_t_24 = NULL;
          }
          __Pyx_INCREF(__pyx_float_0_1);
          __Pyx_GIVEREF(__pyx_float_0_1);
          PyTuple_SET_ITEM(__pyx_t_20, 0+__pyx_t_25, __pyx_float_0_1);
          __Pyx_GIVEREF(__pyx_t_23);
          PyTuple_SET_ITEM(__pyx_t_20, 1+__pyx_t_25, __pyx_t_23);
          __pyx_t_23 = 0;
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_20, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2585, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF_SET(__pyx_v_mmpd, __pyx_t_8);
        __pyx_t_8 = 0;

        /* "mirror_lib_v04.pyx":2586
 *         ###mmpd = get_mdust(materials.n_d, materials.d_d[it_sgm, it_tms])
 *         mmpd = new_get_mdust(0.1, materials.d_d[it_sgm, it_tms])
 *         res_full = mmpa_full.dot(mmpd)             # <<<<<<<<<<<<<<
 *       else:
 *         res_full = mmpa_full * 1.
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_mmpa_full, __pyx_n_s_dot); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2586, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_20 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_8 = (__pyx_t_20) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_20, __pyx_v_mmpd) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_mmpd);
        __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2586, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF_SET(__pyx_v_res_full, __pyx_t_8);
        __pyx_t_8 = 0;

        /* "mirror_lib_v04.pyx":2583
 * 
 *       #GET Mdust
 *       if (cdust==True):             # <<<<<<<<<<<<<<
 *         ###mmpd = get_mdust(materials.n_d, materials.d_d[it_sgm, it_tms])
 *         mmpd = new_get_mdust(0.1, materials.d_d[it_sgm, it_tms])
 */
        goto __pyx_L10;
      }

      /* "mirror_lib_v04.pyx":2588
 *         res_full = mmpa_full.dot(mmpd)
 *       else:
 *         res_full = mmpa_full * 1.             # <<<<<<<<<<<<<<
 * 
 *       nn,_,_ = res_full.shape
 */
      /*else*/ {
        __pyx_t_8 = PyNumber_Multiply(__pyx_v_mmpa_full, __pyx_float_1_); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2588, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_XDECREF_SET(__pyx_v_res_full, __pyx_t_8);
        __pyx_t_8 = 0;
      }
      __pyx_L10:;

      /* "mirror_lib_v04.pyx":2590
 *         res_full = mmpa_full * 1.
 * 
 *       nn,_,_ = res_full.shape             # <<<<<<<<<<<<<<
 *       ntot2=ntot2+nn
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_res_full, __pyx_n_s_shape); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2590, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if ((likely(PyTuple_CheckExact(__pyx_t_8))) || (PyList_CheckExact(__pyx_t_8))) {
        PyObject* sequence = __pyx_t_8;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 3)) {
          if (size > 3) __Pyx_RaiseTooManyValuesError(3);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 2590, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_20 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_23 = PyTuple_GET_ITEM(sequence, 2); 
        } else {
          __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_20 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_23 = PyList_GET_ITEM(sequence, 2); 
        }
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_20);
        __Pyx_INCREF(__pyx_t_23);
        #else
        __pyx_t_7 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2590, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_20 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2590, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_23 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 2590, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_23);
        #endif
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_24 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2590, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_24);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_26 = Py_TYPE(__pyx_t_24)->tp_iternext;
        index = 0; __pyx_t_7 = __pyx_t_26(__pyx_t_24); if (unlikely(!__pyx_t_7)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        index = 1; __pyx_t_20 = __pyx_t_26(__pyx_t_24); if (unlikely(!__pyx_t_20)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_20);
        index = 2; __pyx_t_23 = __pyx_t_26(__pyx_t_24); if (unlikely(!__pyx_t_23)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_23);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_26(__pyx_t_24), 3) < 0) __PYX_ERR(0, 2590, __pyx_L1_error)
        __pyx_t_26 = NULL;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        goto __pyx_L12_unpacking_done;
        __pyx_L11_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __pyx_t_26 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 2590, __pyx_L1_error)
        __pyx_L12_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_nn, __pyx_t_7);
      __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_20);
      __pyx_t_20 = 0;
      __Pyx_DECREF_SET(__pyx_v__, __pyx_t_23);
      __pyx_t_23 = 0;

      /* "mirror_lib_v04.pyx":2591
 * 
 *       nn,_,_ = res_full.shape
 *       ntot2=ntot2+nn             # <<<<<<<<<<<<<<
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \
 */
      __pyx_t_8 = PyNumber_Add(__pyx_v_ntot2, __pyx_v_nn); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2591, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_ntot2, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2593
 *       ntot2=ntot2+nn
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \             # <<<<<<<<<<<<<<
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea
 *       #
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_23 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sum); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_23);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_v_res_full, __pyx_tuple__101); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);

      /* "mirror_lib_v04.pyx":2594
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea             # <<<<<<<<<<<<<<
 *       #
 *       #
 */
      __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_area); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_it_sgm);
      __pyx_t_24 = PyUnicode_Format(__pyx_kp_u_i_2, __pyx_t_7); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Dict_GetItem(__pyx_t_20, __pyx_t_24); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      __pyx_t_24 = __Pyx_PyObject_GetItem(__pyx_t_7, __pyx_tuple__102); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Multiply(__pyx_t_8, __pyx_t_24); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

      /* "mirror_lib_v04.pyx":2593
 *       ntot2=ntot2+nn
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \             # <<<<<<<<<<<<<<
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea
 *       #
 */
      __pyx_t_24 = PyTuple_New(1); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_24);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "mirror_lib_v04.pyx":2594
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea             # <<<<<<<<<<<<<<
 *       #
 *       #
 */
      __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 2594, __pyx_L1_error)

      /* "mirror_lib_v04.pyx":2593
 *       ntot2=ntot2+nn
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \             # <<<<<<<<<<<<<<
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea
 *       #
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_23, __pyx_t_24, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "mirror_lib_v04.pyx":2594
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea             # <<<<<<<<<<<<<<
 *       #
 *       #
 */
      __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_v_tarea); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2594, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mirror_lib_v04.pyx":2593
 *       ntot2=ntot2+nn
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \             # <<<<<<<<<<<<<<
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea
 *       #
 */
      __pyx_t_8 = PyTuple_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_INCREF(__pyx_v_it_tms);
      __Pyx_GIVEREF(__pyx_v_it_tms);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_it_tms);
      __Pyx_INCREF(__pyx_v_it_sgm);
      __Pyx_GIVEREF(__pyx_v_it_sgm);
      PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_it_sgm);
      __Pyx_INCREF(__pyx_slice__30);
      __Pyx_GIVEREF(__pyx_slice__30);
      PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_slice__30);
      __Pyx_INCREF(__pyx_slice__30);
      __Pyx_GIVEREF(__pyx_slice__30);
      PyTuple_SET_ITEM(__pyx_t_8, 3, __pyx_slice__30);
      if (unlikely(PyObject_SetItem(__pyx_v_res, __pyx_t_8, __pyx_t_7) < 0)) __PYX_ERR(0, 2593, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "mirror_lib_v04.pyx":2565
 *     ntot2=0
 * 
 *     for it_sgm in range(segments.N):             # <<<<<<<<<<<<<<
 * #
 *       if (segments.i['%i' % (it_sgm,)].size<1):
 */
      __pyx_L7_continue:;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2600
 *       #######npts_seg[it_sgm] = np.sum(segments.area['%i' % (it_sgm,)])
 * 
 *     txt = " t=%i(/%i) ; " % (it_tms, segments.SimulatedTimes,)             # <<<<<<<<<<<<<<
 *     txt += " nrays=%i ; " % (ntot2, )
 *     txt += " area=%.8f" % (tarea, )
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_segments, __pyx_n_s_SimulatedTimes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2600, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2600, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_it_tms);
    __Pyx_GIVEREF(__pyx_v_it_tms);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_it_tms);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyUnicode_Format(__pyx_kp_u_t_i_i, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2600, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_txt, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2601
 * 
 *     txt = " t=%i(/%i) ; " % (it_tms, segments.SimulatedTimes,)
 *     txt += " nrays=%i ; " % (ntot2, )             # <<<<<<<<<<<<<<
 *     txt += " area=%.8f" % (tarea, )
 *     print(txt, end='\r', flush=True)
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2601, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_ntot2);
    __Pyx_GIVEREF(__pyx_v_ntot2);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_ntot2);
    __pyx_t_7 = PyUnicode_Format(__pyx_kp_u_nrays_i, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2601, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyUnicode_Concat(__pyx_v_txt, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2601, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_txt, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2602
 *     txt = " t=%i(/%i) ; " % (it_tms, segments.SimulatedTimes,)
 *     txt += " nrays=%i ; " % (ntot2, )
 *     txt += " area=%.8f" % (tarea, )             # <<<<<<<<<<<<<<
 *     print(txt, end='\r', flush=True)
 *     #print("Timestep: %i of %i" % (it_tms, segments.SimulatedTimes))
 */
    __pyx_t_5 = __Pyx_PyObject_Format(__pyx_v_tarea, __pyx_kp_u_8f); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2602, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyUnicode_Concat(__pyx_kp_u_area_2, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2602, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyUnicode_Concat(__pyx_v_txt, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2602, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_txt, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "mirror_lib_v04.pyx":2603
 *     txt += " nrays=%i ; " % (ntot2, )
 *     txt += " area=%.8f" % (tarea, )
 *     print(txt, end='\r', flush=True)             # <<<<<<<<<<<<<<
 *     #print("Timestep: %i of %i" % (it_tms, segments.SimulatedTimes))
 *     #print('Total number of rays considered: %i' % ntot2)
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_txt);
    __Pyx_GIVEREF(__pyx_v_txt);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_txt);
    __pyx_t_7 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_end, __pyx_kp_u__76) < 0) __PYX_ERR(0, 2603, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_flush, Py_True) < 0) __PYX_ERR(0, 2603, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "mirror_lib_v04.pyx":2611
 *     # Since we consider all the points of each segment, the average must...
 *     # ... be done accordingly:
 *     avg_res[it_tms,:,:] = np.sum(res[it_tms,:,:,:], axis=0)#### \             # <<<<<<<<<<<<<<
 * #####        / np.sum(npts_seg)
 *   print("")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sum); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_it_tms);
    __Pyx_GIVEREF(__pyx_v_it_tms);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_it_tms);
    __Pyx_INCREF(__pyx_slice__30);
    __Pyx_GIVEREF(__pyx_slice__30);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_slice__30);
    __Pyx_INCREF(__pyx_slice__30);
    __Pyx_GIVEREF(__pyx_slice__30);
    PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_slice__30);
    __Pyx_INCREF(__pyx_slice__30);
    __Pyx_GIVEREF(__pyx_slice__30);
    PyTuple_SET_ITEM(__pyx_t_8, 3, __pyx_slice__30);
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_res, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 2611, __pyx_L1_error)
    __pyx_t_24 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, __pyx_t_5); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_24);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_it_tms);
    __Pyx_GIVEREF(__pyx_v_it_tms);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_it_tms);
    __Pyx_INCREF(__pyx_slice__30);
    __Pyx_GIVEREF(__pyx_slice__30);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_slice__30);
    __Pyx_INCREF(__pyx_slice__30);
    __Pyx_GIVEREF(__pyx_slice__30);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_slice__30);
    if (unlikely(PyObject_SetItem(__pyx_v_avg_res, __pyx_t_5, __pyx_t_24) < 0)) __PYX_ERR(0, 2611, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

    /* "mirror_lib_v04.pyx":2559
 *   avg_res = np.zeros((segments.SimulatedTimes, 4, 4))
 * #  avg_res_test = np.zeros((4, 4))
 *   for it_tms in range(segments.SimulatedTimes):             # <<<<<<<<<<<<<<
 *     #print("Timestep: %i of %i" % (it_tms, segments.SimulatedTimes))
 * #RUN SEGMENTS:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2613
 *     avg_res[it_tms,:,:] = np.sum(res[it_tms,:,:,:], axis=0)#### \
 * #####        / np.sum(npts_seg)
 *   print("")             # <<<<<<<<<<<<<<
 * 
 *   return avg_res, res, npts_seg
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2615
 *   print("")
 * 
 *   return avg_res, res, npts_seg             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_npts_seg)) { __Pyx_RaiseUnboundLocalError("npts_seg"); __PYX_ERR(0, 2615, __pyx_L1_error) }
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_avg_res);
  __Pyx_GIVEREF(__pyx_v_avg_res);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_avg_res);
  __Pyx_INCREF(__pyx_v_res);
  __Pyx_GIVEREF(__pyx_v_res);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_res);
  __Pyx_INCREF(__pyx_v_npts_seg);
  __Pyx_GIVEREF(__pyx_v_npts_seg);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_npts_seg);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mirror_lib_v04.pyx":2547
 * #
 * 
 * def get_mueller_time(segments, materials,cdust=False, thetaref=0., nthreads=1):             # <<<<<<<<<<<<<<
 * 
 *   import apy_utils as uts
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_XDECREF(__pyx_t_23);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_AddTraceback("pymirrors.get_mueller_time", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_uts);
  __Pyx_XDECREF(__pyx_v_tarea);
  __Pyx_XDECREF(__pyx_v_it);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_avg_res);
  __Pyx_XDECREF(__pyx_v_it_tms);
  __Pyx_XDECREF(__pyx_v_npts_seg);
  __Pyx_XDECREF(__pyx_v_ntot2);
  __Pyx_XDECREF(__pyx_v_it_sgm);
  __Pyx_XDECREF(__pyx_v_mmpa_full);
  __Pyx_XDECREF(__pyx_v_mmpd);
  __Pyx_XDECREF(__pyx_v_res_full);
  __Pyx_XDECREF(__pyx_v_nn);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XDECREF(__pyx_v_txt);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":258
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyArray_Descr *__pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  if (__pyx_v_info == NULL) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":265
 * 
 *             cdef int i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":266
 *             cdef int i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":268
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":271
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":272
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__103, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 272, __pyx_L1_error)

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":270
 *             ndim = PyArray_NDIM(self)
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":275
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L7_bool_binop_done:;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (unlikely(__pyx_t_1)) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":276
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__104, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 276, __pyx_L1_error)

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":279
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":280
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":283
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * 2) * ((size_t)__pyx_v_ndim))));

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":286
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":287
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":280
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L9;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":289
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":290
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L9:;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":291
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":292
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":293
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":296
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = <dtype>PyArray_DESCR(self)
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":297
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_7 = PyArray_DESCR(__pyx_v_self);
  __pyx_t_3 = ((PyObject *)__pyx_t_7);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":300
 *             cdef int offset
 * 
 *             info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not PyDataType_HASFIELDS(descr):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":302
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(PyDataType_HASFIELDS(__pyx_v_descr) != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":303
 * 
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L15_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_L15_next_or:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":305
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L14_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L14_bool_binop_done:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_1)) {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":306
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__105, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 306, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(1, 306, __pyx_L1_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":304
 *             if not PyDataType_HASFIELDS(descr):
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":307
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;
      case NPY_UBYTE:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":308
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      __pyx_v_f = ((char *)"B");
      break;
      case NPY_SHORT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":309
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      __pyx_v_f = ((char *)"h");
      break;
      case NPY_USHORT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":310
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      __pyx_v_f = ((char *)"H");
      break;
      case NPY_INT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":311
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      __pyx_v_f = ((char *)"i");
      break;
      case NPY_UINT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":312
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      __pyx_v_f = ((char *)"I");
      break;
      case NPY_LONG:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":313
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      __pyx_v_f = ((char *)"l");
      break;
      case NPY_ULONG:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":314
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      __pyx_v_f = ((char *)"L");
      break;
      case NPY_LONGLONG:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":315
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      __pyx_v_f = ((char *)"q");
      break;
      case NPY_ULONGLONG:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":316
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      __pyx_v_f = ((char *)"Q");
      break;
      case NPY_FLOAT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":317
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      __pyx_v_f = ((char *)"f");
      break;
      case NPY_DOUBLE:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":318
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      __pyx_v_f = ((char *)"d");
      break;
      case NPY_LONGDOUBLE:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":319
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      __pyx_v_f = ((char *)"g");
      break;
      case NPY_CFLOAT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":320
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      __pyx_v_f = ((char *)"Zf");
      break;
      case NPY_CDOUBLE:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":321
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      __pyx_v_f = ((char *)"Zd");
      break;
      case NPY_CLONGDOUBLE:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":322
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      __pyx_v_f = ((char *)"Zg");
      break;
      case NPY_OBJECT:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":323
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":325
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(1, 325, __pyx_L1_error)
      break;
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":326
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":327
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":302
 *             info.obj = self
 * 
 *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":329
 *                 return
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)PyObject_Malloc(0xFF));

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":330
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":331
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":332
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(1, 332, __pyx_L1_error)
    __pyx_v_f = __pyx_t_9;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":335
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":258
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":337
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":338
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":339
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)
 */
    PyObject_Free(__pyx_v_info->format);

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":338
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":340
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":341
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    PyObject_Free(__pyx_v_info->strides);

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":340
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":337
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":821
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":822
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":821
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":824
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":825
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":824
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":827
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":828
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":827
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":830
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":831
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":830
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":833
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":834
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":833
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":836
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":838
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":840
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":836
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":842
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":847
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":848
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":851
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(1, 851, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 851, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 851, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":852
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 852, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 852, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(1, 852, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":853
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(1, 853, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(1, 853, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(1, 853, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":855
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 855, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (unlikely(__pyx_t_6)) {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":856
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__106, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 856, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(1, 856, __pyx_L1_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":855
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":859
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (unlikely(__pyx_t_6)) {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":860
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__105, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 860, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(1, 860, __pyx_L1_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":858
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":870
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 870, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 870, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 870, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":871
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":872
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":873
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":875
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":877
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":878
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 878, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":879
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (unlikely(__pyx_t_6)) {

        /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":880
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__107, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 880, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 880, __pyx_L1_error)

        /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":879
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":883
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 883, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 883, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 883, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":884
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 884, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 884, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 884, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":885
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 885, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 885, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 885, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":886
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 886, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 886, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 886, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":887
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 887, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 887, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":888
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 888, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 888, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 888, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":889
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 889, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 889, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 889, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":890
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 890, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 890, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 890, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":891
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 891, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 891, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 891, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":892
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 892, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 892, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 892, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":893
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 893, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 893, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 893, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":894
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 894, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":895
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 895, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 895, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":896
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 896, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 896, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":897
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 897, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 897, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 897, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":898
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 898, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 898, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 898, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":899
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 899, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 899, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 899, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (likely(__pyx_t_6)) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":901
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 901, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":902
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":877
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":906
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(1, 906, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":851
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":907
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":842
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1022
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1023
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1024
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1022
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1026
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1027
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1028
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1029
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1028
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1030
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1026
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1034
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1036
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 1036, __pyx_L3_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1037
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 1037, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1038
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__108, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 1038, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 1038, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1035
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1034
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1040
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1042
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 1042, __pyx_L3_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1043
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 1043, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1044
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__109, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 1044, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 1044, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1041
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1040
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1048
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 1048, __pyx_L3_error)

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1049
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 1049, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1050
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__109, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 1050, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 1050, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1047
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *__pyx_freelist_9pymirrors___pyx_scope_struct__get_geometry[8];
static int __pyx_freecount_9pymirrors___pyx_scope_struct__get_geometry = 0;

static PyObject *__pyx_tp_new_9pymirrors___pyx_scope_struct__get_geometry(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_9pymirrors___pyx_scope_struct__get_geometry > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry)))) {
    o = (PyObject*)__pyx_freelist_9pymirrors___pyx_scope_struct__get_geometry[--__pyx_freecount_9pymirrors___pyx_scope_struct__get_geometry];
    memset(o, 0, sizeof(struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9pymirrors___pyx_scope_struct__get_geometry(PyObject *o) {
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *p = (struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_telescope);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_9pymirrors___pyx_scope_struct__get_geometry < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry)))) {
    __pyx_freelist_9pymirrors___pyx_scope_struct__get_geometry[__pyx_freecount_9pymirrors___pyx_scope_struct__get_geometry++] = ((struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_9pymirrors___pyx_scope_struct__get_geometry(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *p = (struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)o;
  if (p->__pyx_v_telescope) {
    e = (*v)(p->__pyx_v_telescope, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9pymirrors___pyx_scope_struct__get_geometry(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *p = (struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry *)o;
  tmp = ((PyObject*)p->__pyx_v_telescope);
  p->__pyx_v_telescope = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_9pymirrors___pyx_scope_struct__get_geometry = {
  PyVarObject_HEAD_INIT(0, 0)
  "pymirrors.__pyx_scope_struct__get_geometry", /*tp_name*/
  sizeof(struct __pyx_obj_9pymirrors___pyx_scope_struct__get_geometry), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pymirrors___pyx_scope_struct__get_geometry, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9pymirrors___pyx_scope_struct__get_geometry, /*tp_traverse*/
  __pyx_tp_clear_9pymirrors___pyx_scope_struct__get_geometry, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pymirrors___pyx_scope_struct__get_geometry, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_pymirrors(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_pymirrors},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "pymirrors",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_2_np_pi, __pyx_k_2_np_pi, sizeof(__pyx_k_2_np_pi), 0, 1, 0, 0},
  {&__pyx_kp_u_4f, __pyx_k_4f, sizeof(__pyx_k_4f), 0, 1, 0, 0},
  {&__pyx_kp_u_5f, __pyx_k_5f, sizeof(__pyx_k_5f), 0, 1, 0, 0},
  {&__pyx_kp_u_8f, __pyx_k_8f, sizeof(__pyx_k_8f), 0, 1, 0, 0},
  {&__pyx_n_u_AEELT, __pyx_k_AEELT, sizeof(__pyx_k_AEELT), 0, 1, 0, 1},
  {&__pyx_n_u_AGTC, __pyx_k_AGTC, sizeof(__pyx_k_AGTC), 0, 1, 0, 1},
  {&__pyx_n_u_AL, __pyx_k_AL, sizeof(__pyx_k_AL), 0, 1, 0, 1},
  {&__pyx_n_u_AZIMUTHAL, __pyx_k_AZIMUTHAL, sizeof(__pyx_k_AZIMUTHAL), 0, 1, 0, 1},
  {&__pyx_kp_u_AZIMUTHAL_2, __pyx_k_AZIMUTHAL_2, sizeof(__pyx_k_AZIMUTHAL_2), 0, 1, 0, 0},
  {&__pyx_kp_u_Allowed_options_are_polar_carte, __pyx_k_Allowed_options_are_polar_carte, sizeof(__pyx_k_Allowed_options_are_polar_carte), 0, 1, 0, 0},
  {&__pyx_kp_u_Area_covered_by_the_primary_mir, __pyx_k_Area_covered_by_the_primary_mir, sizeof(__pyx_k_Area_covered_by_the_primary_mir), 0, 1, 0, 0},
  {&__pyx_kp_u_At_least_one_time_step_per_chang, __pyx_k_At_least_one_time_step_per_chang, sizeof(__pyx_k_At_least_one_time_step_per_chang), 0, 1, 0, 0},
  {&__pyx_n_u_DUST, __pyx_k_DUST, sizeof(__pyx_k_DUST), 0, 1, 0, 1},
  {&__pyx_n_s_Dthick, __pyx_k_Dthick, sizeof(__pyx_k_Dthick), 0, 0, 1, 1},
  {&__pyx_n_u_EELT, __pyx_k_EELT, sizeof(__pyx_k_EELT), 0, 1, 0, 1},
  {&__pyx_n_u_EQUAL, __pyx_k_EQUAL, sizeof(__pyx_k_EQUAL), 0, 1, 0, 1},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_u_GTC, __pyx_k_GTC, sizeof(__pyx_k_GTC), 0, 1, 0, 1},
  {&__pyx_kp_u_Get_geometry, __pyx_k_Get_geometry, sizeof(__pyx_k_Get_geometry), 0, 1, 0, 0},
  {&__pyx_n_s_ID, __pyx_k_ID, sizeof(__pyx_k_ID), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_u_LINEAL, __pyx_k_LINEAL, sizeof(__pyx_k_LINEAL), 0, 1, 0, 1},
  {&__pyx_kp_u_LINEAL_2, __pyx_k_LINEAL_2, sizeof(__pyx_k_LINEAL_2), 0, 1, 0, 0},
  {&__pyx_kp_u_Multiplechange_MUST_be_1, __pyx_k_Multiplechange_MUST_be_1, sizeof(__pyx_k_Multiplechange_MUST_be_1), 0, 1, 0, 0},
  {&__pyx_kp_u_Multiplechange_MUST_be_an_integ, __pyx_k_Multiplechange_MUST_be_an_integ, sizeof(__pyx_k_Multiplechange_MUST_be_an_integ), 0, 1, 0, 0},
  {&__pyx_kp_u_Multiplechange_MUST_give_MODULU, __pyx_k_Multiplechange_MUST_give_MODULU, sizeof(__pyx_k_Multiplechange_MUST_give_MODULU), 0, 1, 0, 0},
  {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
  {&__pyx_n_s_Nfamily, __pyx_k_Nfamily, sizeof(__pyx_k_Nfamily), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_kp_u_Not_yet, __pyx_k_Not_yet, sizeof(__pyx_k_Not_yet), 0, 1, 0, 0},
  {&__pyx_n_s_Nperfamily, __pyx_k_Nperfamily, sizeof(__pyx_k_Nperfamily), 0, 0, 1, 1},
  {&__pyx_n_s_Ntimes, __pyx_k_Ntimes, sizeof(__pyx_k_Ntimes), 0, 0, 1, 1},
  {&__pyx_kp_u_Number_of_simulated_steps_i, __pyx_k_Number_of_simulated_steps_i, sizeof(__pyx_k_Number_of_simulated_steps_i), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_of_simulated_steps_in_be, __pyx_k_Number_of_simulated_steps_in_be, sizeof(__pyx_k_Number_of_simulated_steps_in_be), 0, 1, 0, 0},
  {&__pyx_n_u_OX, __pyx_k_OX, sizeof(__pyx_k_OX), 0, 1, 0, 1},
  {&__pyx_kp_u_PLOT, __pyx_k_PLOT, sizeof(__pyx_k_PLOT), 0, 1, 0, 0},
  {&__pyx_kp_u_Primary_shape_unknown, __pyx_k_Primary_shape_unknown, sizeof(__pyx_k_Primary_shape_unknown), 0, 1, 0, 0},
  {&__pyx_n_u_RANDOM, __pyx_k_RANDOM, sizeof(__pyx_k_RANDOM), 0, 1, 0, 1},
  {&__pyx_kp_u_RANDOM_2, __pyx_k_RANDOM_2, sizeof(__pyx_k_RANDOM_2), 0, 1, 0, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_u_SEELT, __pyx_k_SEELT, sizeof(__pyx_k_SEELT), 0, 1, 0, 1},
  {&__pyx_n_u_SGTC, __pyx_k_SGTC, sizeof(__pyx_k_SGTC), 0, 1, 0, 1},
  {&__pyx_n_u_SYMMETRIC, __pyx_k_SYMMETRIC, sizeof(__pyx_k_SYMMETRIC), 0, 1, 0, 1},
  {&__pyx_kp_u_SYMMETRIC_2, __pyx_k_SYMMETRIC_2, sizeof(__pyx_k_SYMMETRIC_2), 0, 1, 0, 0},
  {&__pyx_n_u_SYMMETRY, __pyx_k_SYMMETRY, sizeof(__pyx_k_SYMMETRY), 0, 1, 0, 1},
  {&__pyx_kp_u_Secondary, __pyx_k_Secondary, sizeof(__pyx_k_Secondary), 0, 1, 0, 0},
  {&__pyx_kp_u_Segment_i_dust_value_4f, __pyx_k_Segment_i_dust_value_4f, sizeof(__pyx_k_Segment_i_dust_value_4f), 0, 1, 0, 0},
  {&__pyx_kp_u_Segment_id_i_nrays_i, __pyx_k_Segment_id_i_nrays_i, sizeof(__pyx_k_Segment_id_i_nrays_i), 0, 1, 0, 0},
  {&__pyx_kp_u_Shape_unknown, __pyx_k_Shape_unknown, sizeof(__pyx_k_Shape_unknown), 0, 1, 0, 0},
  {&__pyx_n_s_SimulatedTime, __pyx_k_SimulatedTime, sizeof(__pyx_k_SimulatedTime), 0, 0, 1, 1},
  {&__pyx_n_s_SimulatedTimes, __pyx_k_SimulatedTimes, sizeof(__pyx_k_SimulatedTimes), 0, 0, 1, 1},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_kp_u_THE_ORDER_MUST_BE_ONE_OF_THE_FOL, __pyx_k_THE_ORDER_MUST_BE_ONE_OF_THE_FOL, sizeof(__pyx_k_THE_ORDER_MUST_BE_ONE_OF_THE_FOL), 0, 1, 0, 0},
  {&__pyx_kp_u_Total_number_of_rays_considered, __pyx_k_Total_number_of_rays_considered, sizeof(__pyx_k_Total_number_of_rays_considered), 0, 1, 0, 0},
  {&__pyx_kp_u_Unknown_layout, __pyx_k_Unknown_layout, sizeof(__pyx_k_Unknown_layout), 0, 1, 0, 0},
  {&__pyx_kp_u_Unknown_layout_2, __pyx_k_Unknown_layout_2, sizeof(__pyx_k_Unknown_layout_2), 0, 1, 0, 0},
  {&__pyx_kp_u_Unknown_primary_mirror_shape, __pyx_k_Unknown_primary_mirror_shape, sizeof(__pyx_k_Unknown_primary_mirror_shape), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_u_Warning_number_of_segments_insi, __pyx_k_Warning_number_of_segments_insi, sizeof(__pyx_k_Warning_number_of_segments_insi), 0, 1, 0, 0},
  {&__pyx_kp_u__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 1, 0, 0},
  {&__pyx_n_s__110, __pyx_k__110, sizeof(__pyx_k__110), 0, 0, 1, 1},
  {&__pyx_n_s__17, __pyx_k__17, sizeof(__pyx_k__17), 0, 0, 1, 1},
  {&__pyx_kp_u__76, __pyx_k__76, sizeof(__pyx_k__76), 0, 1, 0, 0},
  {&__pyx_kp_u__87, __pyx_k__87, sizeof(__pyx_k__87), 0, 1, 0, 0},
  {&__pyx_kp_u__89, __pyx_k__89, sizeof(__pyx_k__89), 0, 1, 0, 0},
  {&__pyx_kp_u__90, __pyx_k__90, sizeof(__pyx_k__90), 0, 1, 0, 0},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_a2, __pyx_k_a2, sizeof(__pyx_k_a2), 0, 0, 1, 1},
  {&__pyx_kp_u_a_2, __pyx_k_a_2, sizeof(__pyx_k_a_2), 0, 1, 0, 0},
  {&__pyx_n_s_a_alp, __pyx_k_a_alp, sizeof(__pyx_k_a_alp), 0, 0, 1, 1},
  {&__pyx_n_s_abs, __pyx_k_abs, sizeof(__pyx_k_abs), 0, 0, 1, 1},
  {&__pyx_n_s_adif, __pyx_k_adif, sizeof(__pyx_k_adif), 0, 0, 1, 1},
  {&__pyx_n_s_adiff1, __pyx_k_adiff1, sizeof(__pyx_k_adiff1), 0, 0, 1, 1},
  {&__pyx_n_s_adiff2, __pyx_k_adiff2, sizeof(__pyx_k_adiff2), 0, 0, 1, 1},
  {&__pyx_n_u_al, __pyx_k_al, sizeof(__pyx_k_al), 0, 1, 0, 1},
  {&__pyx_n_s_alp, __pyx_k_alp, sizeof(__pyx_k_alp), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_ang, __pyx_k_ang, sizeof(__pyx_k_ang), 0, 0, 1, 1},
  {&__pyx_n_s_ang_ref, __pyx_k_ang_ref, sizeof(__pyx_k_ang_ref), 0, 0, 1, 1},
  {&__pyx_n_s_angs, __pyx_k_angs, sizeof(__pyx_k_angs), 0, 0, 1, 1},
  {&__pyx_n_s_angstrom, __pyx_k_angstrom, sizeof(__pyx_k_angstrom), 0, 0, 1, 1},
  {&__pyx_n_u_anular, __pyx_k_anular, sizeof(__pyx_k_anular), 0, 1, 0, 1},
  {&__pyx_n_s_ap, __pyx_k_ap, sizeof(__pyx_k_ap), 0, 0, 1, 1},
  {&__pyx_n_s_apy_utils, __pyx_k_apy_utils, sizeof(__pyx_k_apy_utils), 0, 0, 1, 1},
  {&__pyx_n_s_arange, __pyx_k_arange, sizeof(__pyx_k_arange), 0, 0, 1, 1},
  {&__pyx_n_s_arccos, __pyx_k_arccos, sizeof(__pyx_k_arccos), 0, 0, 1, 1},
  {&__pyx_n_s_arcsin, __pyx_k_arcsin, sizeof(__pyx_k_arcsin), 0, 0, 1, 1},
  {&__pyx_n_s_arctan2, __pyx_k_arctan2, sizeof(__pyx_k_arctan2), 0, 0, 1, 1},
  {&__pyx_n_s_area, __pyx_k_area, sizeof(__pyx_k_area), 0, 0, 1, 1},
  {&__pyx_n_s_area1d, __pyx_k_area1d, sizeof(__pyx_k_area1d), 0, 0, 1, 1},
  {&__pyx_kp_u_area_2, __pyx_k_area_2, sizeof(__pyx_k_area_2), 0, 1, 0, 0},
  {&__pyx_n_s_argsort, __pyx_k_argsort, sizeof(__pyx_k_argsort), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_astype, __pyx_k_astype, sizeof(__pyx_k_astype), 0, 0, 1, 1},
  {&__pyx_n_s_aux, __pyx_k_aux, sizeof(__pyx_k_aux), 0, 0, 1, 1},
  {&__pyx_n_s_aux_seg_chg, __pyx_k_aux_seg_chg, sizeof(__pyx_k_aux_seg_chg), 0, 0, 1, 1},
  {&__pyx_n_s_avail, __pyx_k_avail, sizeof(__pyx_k_avail), 0, 0, 1, 1},
  {&__pyx_n_s_avg_res, __pyx_k_avg_res, sizeof(__pyx_k_avg_res), 0, 0, 1, 1},
  {&__pyx_n_s_ax, __pyx_k_ax, sizeof(__pyx_k_ax), 0, 0, 1, 1},
  {&__pyx_n_s_ax1, __pyx_k_ax1, sizeof(__pyx_k_ax1), 0, 0, 1, 1},
  {&__pyx_n_s_ax2, __pyx_k_ax2, sizeof(__pyx_k_ax2), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_azi360, __pyx_k_azi360, sizeof(__pyx_k_azi360), 0, 0, 1, 1},
  {&__pyx_n_s_azi_val, __pyx_k_azi_val, sizeof(__pyx_k_azi_val), 0, 0, 1, 1},
  {&__pyx_n_s_azimuth, __pyx_k_azimuth, sizeof(__pyx_k_azimuth), 0, 0, 1, 1},
  {&__pyx_n_s_azis, __pyx_k_azis, sizeof(__pyx_k_azis), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_n_s_beam, __pyx_k_beam, sizeof(__pyx_k_beam), 0, 0, 1, 1},
  {&__pyx_n_s_beams, __pyx_k_beams, sizeof(__pyx_k_beams), 0, 0, 1, 1},
  {&__pyx_n_s_bu_ginit_dust_val, __pyx_k_bu_ginit_dust_val, sizeof(__pyx_k_bu_ginit_dust_val), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_ca, __pyx_k_ca, sizeof(__pyx_k_ca), 0, 0, 1, 1},
  {&__pyx_n_s_calculate, __pyx_k_calculate, sizeof(__pyx_k_calculate), 0, 0, 1, 1},
  {&__pyx_n_u_cartesian, __pyx_k_cartesian, sizeof(__pyx_k_cartesian), 0, 1, 0, 1},
  {&__pyx_n_s_cdarr, __pyx_k_cdarr, sizeof(__pyx_k_cdarr), 0, 0, 1, 1},
  {&__pyx_n_s_cdust, __pyx_k_cdust, sizeof(__pyx_k_cdust), 0, 0, 1, 1},
  {&__pyx_n_s_ceil, __pyx_k_ceil, sizeof(__pyx_k_ceil), 0, 0, 1, 1},
  {&__pyx_n_s_check_primary, __pyx_k_check_primary, sizeof(__pyx_k_check_primary), 0, 0, 1, 1},
  {&__pyx_n_s_check_primary_id, __pyx_k_check_primary_id, sizeof(__pyx_k_check_primary_id), 0, 0, 1, 1},
  {&__pyx_n_s_check_rays, __pyx_k_check_rays, sizeof(__pyx_k_check_rays), 0, 0, 1, 1},
  {&__pyx_n_s_chex_syst, __pyx_k_chex_syst, sizeof(__pyx_k_chex_syst), 0, 0, 1, 1},
  {&__pyx_n_s_cinside, __pyx_k_cinside, sizeof(__pyx_k_cinside), 0, 0, 1, 1},
  {&__pyx_n_s_ckarr, __pyx_k_ckarr, sizeof(__pyx_k_ckarr), 0, 0, 1, 1},
  {&__pyx_n_s_clamb, __pyx_k_clamb, sizeof(__pyx_k_clamb), 0, 0, 1, 1},
  {&__pyx_n_s_cleandust, __pyx_k_cleandust, sizeof(__pyx_k_cleandust), 0, 0, 1, 1},
  {&__pyx_n_s_cleandustcadence, __pyx_k_cleandustcadence, sizeof(__pyx_k_cleandustcadence), 0, 0, 1, 1},
  {&__pyx_n_s_clf, __pyx_k_clf, sizeof(__pyx_k_clf), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_cnarr, __pyx_k_cnarr, sizeof(__pyx_k_cnarr), 0, 0, 1, 1},
  {&__pyx_n_s_cnlayers, __pyx_k_cnlayers, sizeof(__pyx_k_cnlayers), 0, 0, 1, 1},
  {&__pyx_n_s_cnrays, __pyx_k_cnrays, sizeof(__pyx_k_cnrays), 0, 0, 1, 1},
  {&__pyx_n_s_cnt, __pyx_k_cnt, sizeof(__pyx_k_cnt), 0, 0, 1, 1},
  {&__pyx_n_s_color, __pyx_k_color, sizeof(__pyx_k_color), 0, 0, 1, 1},
  {&__pyx_n_s_colors, __pyx_k_colors, sizeof(__pyx_k_colors), 0, 0, 1, 1},
  {&__pyx_n_s_complementary, __pyx_k_complementary, sizeof(__pyx_k_complementary), 0, 0, 1, 1},
  {&__pyx_n_s_concatenate, __pyx_k_concatenate, sizeof(__pyx_k_concatenate), 0, 0, 1, 1},
  {&__pyx_n_s_condit, __pyx_k_condit, sizeof(__pyx_k_condit), 0, 0, 1, 1},
  {&__pyx_n_s_condit2, __pyx_k_condit2, sizeof(__pyx_k_condit2), 0, 0, 1, 1},
  {&__pyx_n_s_contour, __pyx_k_contour, sizeof(__pyx_k_contour), 0, 0, 1, 1},
  {&__pyx_n_s_cos, __pyx_k_cos, sizeof(__pyx_k_cos), 0, 0, 1, 1},
  {&__pyx_n_s_costhU, __pyx_k_costhU, sizeof(__pyx_k_costhU), 0, 0, 1, 1},
  {&__pyx_n_s_cs, __pyx_k_cs, sizeof(__pyx_k_cs), 0, 0, 1, 1},
  {&__pyx_n_s_cte1, __pyx_k_cte1, sizeof(__pyx_k_cte1), 0, 0, 1, 1},
  {&__pyx_n_s_cte2, __pyx_k_cte2, sizeof(__pyx_k_cte2), 0, 0, 1, 1},
  {&__pyx_n_s_ctea, __pyx_k_ctea, sizeof(__pyx_k_ctea), 0, 0, 1, 1},
  {&__pyx_n_s_cteb, __pyx_k_cteb, sizeof(__pyx_k_cteb), 0, 0, 1, 1},
  {&__pyx_n_s_ctei, __pyx_k_ctei, sizeof(__pyx_k_ctei), 0, 0, 1, 1},
  {&__pyx_n_s_ctel, __pyx_k_ctel, sizeof(__pyx_k_ctel), 0, 0, 1, 1},
  {&__pyx_n_s_cteq, __pyx_k_cteq, sizeof(__pyx_k_cteq), 0, 0, 1, 1},
  {&__pyx_kp_u_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 1, 0, 0},
  {&__pyx_n_s_d11d, __pyx_k_d11d, sizeof(__pyx_k_d11d), 0, 0, 1, 1},
  {&__pyx_n_s_d1s, __pyx_k_d1s, sizeof(__pyx_k_d1s), 0, 0, 1, 1},
  {&__pyx_n_s_d21d, __pyx_k_d21d, sizeof(__pyx_k_d21d), 0, 0, 1, 1},
  {&__pyx_n_s_d2s, __pyx_k_d2s, sizeof(__pyx_k_d2s), 0, 0, 1, 1},
  {&__pyx_n_s_d_2, __pyx_k_d_2, sizeof(__pyx_k_d_2), 0, 0, 1, 1},
  {&__pyx_n_s_d_c, __pyx_k_d_c, sizeof(__pyx_k_d_c), 0, 0, 1, 1},
  {&__pyx_n_s_d_d, __pyx_k_d_d, sizeof(__pyx_k_d_d), 0, 0, 1, 1},
  {&__pyx_n_s_d_mir, __pyx_k_d_mir, sizeof(__pyx_k_d_mir), 0, 0, 1, 1},
  {&__pyx_n_s_d_ox, __pyx_k_d_ox, sizeof(__pyx_k_d_ox), 0, 0, 1, 1},
  {&__pyx_n_s_d_s, __pyx_k_d_s, sizeof(__pyx_k_d_s), 0, 0, 1, 1},
  {&__pyx_n_s_dangs, __pyx_k_dangs, sizeof(__pyx_k_dangs), 0, 0, 1, 1},
  {&__pyx_n_s_days_between_change, __pyx_k_days_between_change, sizeof(__pyx_k_days_between_change), 0, 0, 1, 1},
  {&__pyx_n_s_days_for_each_timestep, __pyx_k_days_for_each_timestep, sizeof(__pyx_k_days_for_each_timestep), 0, 0, 1, 1},
  {&__pyx_n_s_dd, __pyx_k_dd, sizeof(__pyx_k_dd), 0, 0, 1, 1},
  {&__pyx_n_s_degrees, __pyx_k_degrees, sizeof(__pyx_k_degrees), 0, 0, 1, 1},
  {&__pyx_n_s_deltat, __pyx_k_deltat, sizeof(__pyx_k_deltat), 0, 0, 1, 1},
  {&__pyx_kp_u_deltat_and_period_are_0_one_of_t, __pyx_k_deltat_and_period_are_0_one_of_t, sizeof(__pyx_k_deltat_and_period_are_0_one_of_t), 0, 1, 0, 0},
  {&__pyx_kp_u_deltat_and_period_are_non_0_one, __pyx_k_deltat_and_period_are_non_0_one, sizeof(__pyx_k_deltat_and_period_are_non_0_one), 0, 1, 0, 0},
  {&__pyx_n_s_df_1, __pyx_k_df_1, sizeof(__pyx_k_df_1), 0, 0, 1, 1},
  {&__pyx_n_s_df_2, __pyx_k_df_2, sizeof(__pyx_k_df_2), 0, 0, 1, 1},
  {&__pyx_n_s_diam_1, __pyx_k_diam_1, sizeof(__pyx_k_diam_1), 0, 0, 1, 1},
  {&__pyx_n_s_dif, __pyx_k_dif, sizeof(__pyx_k_dif), 0, 0, 1, 1},
  {&__pyx_n_s_diff, __pyx_k_diff, sizeof(__pyx_k_diff), 0, 0, 1, 1},
  {&__pyx_n_s_diff2, __pyx_k_diff2, sizeof(__pyx_k_diff2), 0, 0, 1, 1},
  {&__pyx_n_s_diffs, __pyx_k_diffs, sizeof(__pyx_k_diffs), 0, 0, 1, 1},
  {&__pyx_n_s_dim_x, __pyx_k_dim_x, sizeof(__pyx_k_dim_x), 0, 0, 1, 1},
  {&__pyx_n_s_dim_y, __pyx_k_dim_y, sizeof(__pyx_k_dim_y), 0, 0, 1, 1},
  {&__pyx_n_s_dir_cos, __pyx_k_dir_cos, sizeof(__pyx_k_dir_cos), 0, 0, 1, 1},
  {&__pyx_n_s_dir_cos_i, __pyx_k_dir_cos_i, sizeof(__pyx_k_dir_cos_i), 0, 0, 1, 1},
  {&__pyx_n_s_dir_cos_n1, __pyx_k_dir_cos_n1, sizeof(__pyx_k_dir_cos_n1), 0, 0, 1, 1},
  {&__pyx_n_s_dir_cos_n2, __pyx_k_dir_cos_n2, sizeof(__pyx_k_dir_cos_n2), 0, 0, 1, 1},
  {&__pyx_n_s_dir_cos_o1, __pyx_k_dir_cos_o1, sizeof(__pyx_k_dir_cos_o1), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing, __pyx_k_dirt_timing, sizeof(__pyx_k_dirt_timing), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_Dthick, __pyx_k_dirt_timing_locals_Dthick, sizeof(__pyx_k_dirt_timing_locals_Dthick), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_indexes, __pyx_k_dirt_timing_locals_indexes, sizeof(__pyx_k_dirt_timing_locals_indexes), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_materials, __pyx_k_dirt_timing_locals_materials, sizeof(__pyx_k_dirt_timing_locals_materials), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_materials___i, __pyx_k_dirt_timing_locals_materials___i, sizeof(__pyx_k_dirt_timing_locals_materials___i), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_thick, __pyx_k_dirt_timing_locals_thick, sizeof(__pyx_k_dirt_timing_locals_thick), 0, 0, 1, 1},
  {&__pyx_n_s_dirt_timing_locals_zerodux, __pyx_k_dirt_timing_locals_zerodux, sizeof(__pyx_k_dirt_timing_locals_zerodux), 0, 0, 1, 1},
  {&__pyx_n_s_dist, __pyx_k_dist, sizeof(__pyx_k_dist), 0, 0, 1, 1},
  {&__pyx_n_s_dmm, __pyx_k_dmm, sizeof(__pyx_k_dmm), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_dot, __pyx_k_dot, sizeof(__pyx_k_dot), 0, 0, 1, 1},
  {&__pyx_n_s_drads, __pyx_k_drads, sizeof(__pyx_k_drads), 0, 0, 1, 1},
  {&__pyx_n_s_draw, __pyx_k_draw, sizeof(__pyx_k_draw), 0, 0, 1, 1},
  {&__pyx_n_s_dtheta, __pyx_k_dtheta, sizeof(__pyx_k_dtheta), 0, 0, 1, 1},
  {&__pyx_n_s_dtor, __pyx_k_dtor, sizeof(__pyx_k_dtor), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_dum, __pyx_k_dum, sizeof(__pyx_k_dum), 0, 0, 1, 1},
  {&__pyx_n_s_dumgx, __pyx_k_dumgx, sizeof(__pyx_k_dumgx), 0, 0, 1, 1},
  {&__pyx_n_s_dumgy, __pyx_k_dumgy, sizeof(__pyx_k_dumgy), 0, 0, 1, 1},
  {&__pyx_n_s_dumrad, __pyx_k_dumrad, sizeof(__pyx_k_dumrad), 0, 0, 1, 1},
  {&__pyx_n_s_dumxg, __pyx_k_dumxg, sizeof(__pyx_k_dumxg), 0, 0, 1, 1},
  {&__pyx_n_s_dumyg, __pyx_k_dumyg, sizeof(__pyx_k_dumyg), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_e_1, __pyx_k_e_1, sizeof(__pyx_k_e_1), 0, 0, 1, 1},
  {&__pyx_n_s_e_2, __pyx_k_e_2, sizeof(__pyx_k_e_2), 0, 0, 1, 1},
  {&__pyx_n_s_edgecolor, __pyx_k_edgecolor, sizeof(__pyx_k_edgecolor), 0, 0, 1, 1},
  {&__pyx_n_s_elem, __pyx_k_elem, sizeof(__pyx_k_elem), 0, 0, 1, 1},
  {&__pyx_n_s_elem_esp, __pyx_k_elem_esp, sizeof(__pyx_k_elem_esp), 0, 0, 1, 1},
  {&__pyx_n_s_elem_ox, __pyx_k_elem_ox, sizeof(__pyx_k_elem_ox), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_u_equal, __pyx_k_equal, sizeof(__pyx_k_equal), 0, 1, 0, 1},
  {&__pyx_n_s_esx, __pyx_k_esx, sizeof(__pyx_k_esx), 0, 0, 1, 1},
  {&__pyx_n_s_esy, __pyx_k_esy, sizeof(__pyx_k_esy), 0, 0, 1, 1},
  {&__pyx_n_s_excess_sim_step, __pyx_k_excess_sim_step, sizeof(__pyx_k_excess_sim_step), 0, 0, 1, 1},
  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
  {&__pyx_n_s_exp, __pyx_k_exp, sizeof(__pyx_k_exp), 0, 0, 1, 1},
  {&__pyx_n_s_extent, __pyx_k_extent, sizeof(__pyx_k_extent), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_u_f8, __pyx_k_f8, sizeof(__pyx_k_f8), 0, 1, 0, 1},
  {&__pyx_n_s_factor, __pyx_k_factor, sizeof(__pyx_k_factor), 0, 0, 1, 1},
  {&__pyx_n_s_families, __pyx_k_families, sizeof(__pyx_k_families), 0, 0, 1, 1},
  {&__pyx_n_s_family, __pyx_k_family, sizeof(__pyx_k_family), 0, 0, 1, 1},
  {&__pyx_n_s_fg, __pyx_k_fg, sizeof(__pyx_k_fg), 0, 0, 1, 1},
  {&__pyx_n_s_fg1, __pyx_k_fg1, sizeof(__pyx_k_fg1), 0, 0, 1, 1},
  {&__pyx_n_s_fg2, __pyx_k_fg2, sizeof(__pyx_k_fg2), 0, 0, 1, 1},
  {&__pyx_n_s_figure, __pyx_k_figure, sizeof(__pyx_k_figure), 0, 0, 1, 1},
  {&__pyx_n_s_first_acc_amount_dust_in_sim_ste, __pyx_k_first_acc_amount_dust_in_sim_ste, sizeof(__pyx_k_first_acc_amount_dust_in_sim_ste), 0, 0, 1, 1},
  {&__pyx_n_s_flatten, __pyx_k_flatten, sizeof(__pyx_k_flatten), 0, 0, 1, 1},
  {&__pyx_n_s_float64, __pyx_k_float64, sizeof(__pyx_k_float64), 0, 0, 1, 1},
  {&__pyx_n_s_floor, __pyx_k_floor, sizeof(__pyx_k_floor), 0, 0, 1, 1},
  {&__pyx_n_s_flush, __pyx_k_flush, sizeof(__pyx_k_flush), 0, 0, 1, 1},
  {&__pyx_kp_u_for_ray_tracing, __pyx_k_for_ray_tracing, sizeof(__pyx_k_for_ray_tracing), 0, 1, 0, 0},
  {&__pyx_n_s_fr_1, __pyx_k_fr_1, sizeof(__pyx_k_fr_1), 0, 0, 1, 1},
  {&__pyx_n_s_frac, __pyx_k_frac, sizeof(__pyx_k_frac), 0, 0, 1, 1},
  {&__pyx_n_s_fsort, __pyx_k_fsort, sizeof(__pyx_k_fsort), 0, 0, 1, 1},
  {&__pyx_n_s_get_conic_sols, __pyx_k_get_conic_sols, sizeof(__pyx_k_get_conic_sols), 0, 0, 1, 1},
  {&__pyx_n_s_get_direction_cosines, __pyx_k_get_direction_cosines, sizeof(__pyx_k_get_direction_cosines), 0, 0, 1, 1},
  {&__pyx_n_s_get_geometry, __pyx_k_get_geometry, sizeof(__pyx_k_get_geometry), 0, 0, 1, 1},
  {&__pyx_n_s_get_geometry_locals_check_primar, __pyx_k_get_geometry_locals_check_primar, sizeof(__pyx_k_get_geometry_locals_check_primar), 0, 0, 1, 1},
  {&__pyx_n_s_get_geometry_locals_check_primar_2, __pyx_k_get_geometry_locals_check_primar_2, sizeof(__pyx_k_get_geometry_locals_check_primar_2), 0, 0, 1, 1},
  {&__pyx_n_s_get_intersection, __pyx_k_get_intersection, sizeof(__pyx_k_get_intersection), 0, 0, 1, 1},
  {&__pyx_n_s_get_intersection_focus, __pyx_k_get_intersection_focus, sizeof(__pyx_k_get_intersection_focus), 0, 0, 1, 1},
  {&__pyx_n_s_get_mdust, __pyx_k_get_mdust, sizeof(__pyx_k_get_mdust), 0, 0, 1, 1},
  {&__pyx_n_s_get_mdust_locals_snell, __pyx_k_get_mdust_locals_snell, sizeof(__pyx_k_get_mdust_locals_snell), 0, 0, 1, 1},
  {&__pyx_n_s_get_mdust_locals_tpar, __pyx_k_get_mdust_locals_tpar, sizeof(__pyx_k_get_mdust_locals_tpar), 0, 0, 1, 1},
  {&__pyx_n_s_get_mdust_locals_tper, __pyx_k_get_mdust_locals_tper, sizeof(__pyx_k_get_mdust_locals_tper), 0, 0, 1, 1},
  {&__pyx_n_s_get_mirror, __pyx_k_get_mirror, sizeof(__pyx_k_get_mirror), 0, 0, 1, 1},
  {&__pyx_n_s_get_mueller_time, __pyx_k_get_mueller_time, sizeof(__pyx_k_get_mueller_time), 0, 0, 1, 1},
  {&__pyx_n_s_get_order, __pyx_k_get_order, sizeof(__pyx_k_get_order), 0, 0, 1, 1},
  {&__pyx_n_s_get_primary_geometry, __pyx_k_get_primary_geometry, sizeof(__pyx_k_get_primary_geometry), 0, 0, 1, 1},
  {&__pyx_n_s_get_primary_rays, __pyx_k_get_primary_rays, sizeof(__pyx_k_get_primary_rays), 0, 0, 1, 1},
  {&__pyx_n_s_get_secondary_geometry, __pyx_k_get_secondary_geometry, sizeof(__pyx_k_get_secondary_geometry), 0, 0, 1, 1},
  {&__pyx_n_s_get_times, __pyx_k_get_times, sizeof(__pyx_k_get_times), 0, 0, 1, 1},
  {&__pyx_n_s_get_times_new, __pyx_k_get_times_new, sizeof(__pyx_k_get_times_new), 0, 0, 1, 1},
  {&__pyx_n_s_ginit_dust_val, __pyx_k_ginit_dust_val, sizeof(__pyx_k_ginit_dust_val), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_hangs, __pyx_k_hangs, sizeof(__pyx_k_hangs), 0, 0, 1, 1},
  {&__pyx_n_u_hexagonal, __pyx_k_hexagonal, sizeof(__pyx_k_hexagonal), 0, 1, 0, 1},
  {&__pyx_n_s_hstack, __pyx_k_hstack, sizeof(__pyx_k_hstack), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_i2, __pyx_k_i2, sizeof(__pyx_k_i2), 0, 0, 1, 1},
  {&__pyx_n_u_i4, __pyx_k_i4, sizeof(__pyx_k_i4), 0, 1, 0, 1},
  {&__pyx_n_s_i_1, __pyx_k_i_1, sizeof(__pyx_k_i_1), 0, 0, 1, 1},
  {&__pyx_kp_u_i_2, __pyx_k_i_2, sizeof(__pyx_k_i_2), 0, 1, 0, 0},
  {&__pyx_n_s_i_22, __pyx_k_i_22, sizeof(__pyx_k_i_22), 0, 0, 1, 1},
  {&__pyx_n_s_i_2_2, __pyx_k_i_2_2, sizeof(__pyx_k_i_2_2), 0, 0, 1, 1},
  {&__pyx_kp_u_i_4f_8e, __pyx_k_i_4f_8e, sizeof(__pyx_k_i_4f_8e), 0, 1, 0, 0},
  {&__pyx_kp_u_i_i, __pyx_k_i_i, sizeof(__pyx_k_i_i), 0, 1, 0, 0},
  {&__pyx_n_s_ia, __pyx_k_ia, sizeof(__pyx_k_ia), 0, 0, 1, 1},
  {&__pyx_n_s_iangs, __pyx_k_iangs, sizeof(__pyx_k_iangs), 0, 0, 1, 1},
  {&__pyx_n_s_ib, __pyx_k_ib, sizeof(__pyx_k_ib), 0, 0, 1, 1},
  {&__pyx_n_s_ic, __pyx_k_ic, sizeof(__pyx_k_ic), 0, 0, 1, 1},
  {&__pyx_n_s_ideal, __pyx_k_ideal, sizeof(__pyx_k_ideal), 0, 0, 1, 1},
  {&__pyx_n_s_ideltat, __pyx_k_ideltat, sizeof(__pyx_k_ideltat), 0, 0, 1, 1},
  {&__pyx_n_s_iff_azi, __pyx_k_iff_azi, sizeof(__pyx_k_iff_azi), 0, 0, 1, 1},
  {&__pyx_n_s_igarea, __pyx_k_igarea, sizeof(__pyx_k_igarea), 0, 0, 1, 1},
  {&__pyx_n_s_igrad, __pyx_k_igrad, sizeof(__pyx_k_igrad), 0, 0, 1, 1},
  {&__pyx_n_s_igxs, __pyx_k_igxs, sizeof(__pyx_k_igxs), 0, 0, 1, 1},
  {&__pyx_n_s_igys, __pyx_k_igys, sizeof(__pyx_k_igys), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_ind, __pyx_k_ind, sizeof(__pyx_k_ind), 0, 0, 1, 1},
  {&__pyx_n_s_indexes, __pyx_k_indexes, sizeof(__pyx_k_indexes), 0, 0, 1, 1},
  {&__pyx_n_s_inf, __pyx_k_inf, sizeof(__pyx_k_inf), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_init_beam, __pyx_k_init_beam, sizeof(__pyx_k_init_beam), 0, 0, 1, 1},
  {&__pyx_n_s_init_beam_locals_beam, __pyx_k_init_beam_locals_beam, sizeof(__pyx_k_init_beam_locals_beam), 0, 0, 1, 1},
  {&__pyx_n_s_init_beam_locals_beam___init, __pyx_k_init_beam_locals_beam___init, sizeof(__pyx_k_init_beam_locals_beam___init), 0, 0, 1, 1},
  {&__pyx_n_s_init_dust_val, __pyx_k_init_dust_val, sizeof(__pyx_k_init_dust_val), 0, 0, 1, 1},
  {&__pyx_n_s_init_telescope, __pyx_k_init_telescope, sizeof(__pyx_k_init_telescope), 0, 0, 1, 1},
  {&__pyx_n_s_init_telescope_locals_telescope, __pyx_k_init_telescope_locals_telescope, sizeof(__pyx_k_init_telescope_locals_telescope), 0, 0, 1, 1},
  {&__pyx_n_s_init_telescope_locals_telescope_2, __pyx_k_init_telescope_locals_telescope_2, sizeof(__pyx_k_init_telescope_locals_telescope_2), 0, 0, 1, 1},
  {&__pyx_n_s_init_val, __pyx_k_init_val, sizeof(__pyx_k_init_val), 0, 0, 1, 1},
  {&__pyx_n_s_inital_amount_dust_in_sim_steps, __pyx_k_inital_amount_dust_in_sim_steps, sizeof(__pyx_k_inital_amount_dust_in_sim_steps), 0, 0, 1, 1},
  {&__pyx_n_s_initial_num_cln_since_last_sch, __pyx_k_initial_num_cln_since_last_sch, sizeof(__pyx_k_initial_num_cln_since_last_sch), 0, 0, 1, 1},
  {&__pyx_n_s_int1, __pyx_k_int1, sizeof(__pyx_k_int1), 0, 0, 1, 1},
  {&__pyx_n_s_int16, __pyx_k_int16, sizeof(__pyx_k_int16), 0, 0, 1, 1},
  {&__pyx_n_s_int3, __pyx_k_int3, sizeof(__pyx_k_int3), 0, 0, 1, 1},
  {&__pyx_n_s_int32, __pyx_k_int32, sizeof(__pyx_k_int32), 0, 0, 1, 1},
  {&__pyx_n_s_int64, __pyx_k_int64, sizeof(__pyx_k_int64), 0, 0, 1, 1},
  {&__pyx_n_s_interp1d, __pyx_k_interp1d, sizeof(__pyx_k_interp1d), 0, 0, 1, 1},
  {&__pyx_n_s_interpol, __pyx_k_interpol, sizeof(__pyx_k_interpol), 0, 0, 1, 1},
  {&__pyx_n_s_inum_esp, __pyx_k_inum_esp, sizeof(__pyx_k_inum_esp), 0, 0, 1, 1},
  {&__pyx_n_s_ion, __pyx_k_ion, sizeof(__pyx_k_ion), 0, 0, 1, 1},
  {&__pyx_n_s_iperiod, __pyx_k_iperiod, sizeof(__pyx_k_iperiod), 0, 0, 1, 1},
  {&__pyx_n_s_iprimary_shape, __pyx_k_iprimary_shape, sizeof(__pyx_k_iprimary_shape), 0, 0, 1, 1},
  {&__pyx_n_s_irad_max, __pyx_k_irad_max, sizeof(__pyx_k_irad_max), 0, 0, 1, 1},
  {&__pyx_n_s_irad_min, __pyx_k_irad_min, sizeof(__pyx_k_irad_min), 0, 0, 1, 1},
  {&__pyx_n_s_iradius, __pyx_k_iradius, sizeof(__pyx_k_iradius), 0, 0, 1, 1},
  {&__pyx_n_s_irads, __pyx_k_irads, sizeof(__pyx_k_irads), 0, 0, 1, 1},
  {&__pyx_n_s_isec_ext_radius, __pyx_k_isec_ext_radius, sizeof(__pyx_k_isec_ext_radius), 0, 0, 1, 1},
  {&__pyx_n_s_isec_int_radius, __pyx_k_isec_int_radius, sizeof(__pyx_k_isec_int_radius), 0, 0, 1, 1},
  {&__pyx_n_s_ishape, __pyx_k_ishape, sizeof(__pyx_k_ishape), 0, 0, 1, 1},
  {&__pyx_n_s_isin, __pyx_k_isin, sizeof(__pyx_k_isin), 0, 0, 1, 1},
  {&__pyx_n_s_isol1, __pyx_k_isol1, sizeof(__pyx_k_isol1), 0, 0, 1, 1},
  {&__pyx_n_s_isol2, __pyx_k_isol2, sizeof(__pyx_k_isol2), 0, 0, 1, 1},
  {&__pyx_n_s_isx, __pyx_k_isx, sizeof(__pyx_k_isx), 0, 0, 1, 1},
  {&__pyx_n_s_isy, __pyx_k_isy, sizeof(__pyx_k_isy), 0, 0, 1, 1},
  {&__pyx_n_s_it, __pyx_k_it, sizeof(__pyx_k_it), 0, 0, 1, 1},
  {&__pyx_n_s_it1, __pyx_k_it1, sizeof(__pyx_k_it1), 0, 0, 1, 1},
  {&__pyx_n_s_it2_a, __pyx_k_it2_a, sizeof(__pyx_k_it2_a), 0, 0, 1, 1},
  {&__pyx_n_s_it3, __pyx_k_it3, sizeof(__pyx_k_it3), 0, 0, 1, 1},
  {&__pyx_n_s_it_a, __pyx_k_it_a, sizeof(__pyx_k_it_a), 0, 0, 1, 1},
  {&__pyx_kp_u_it_done, __pyx_k_it_done, sizeof(__pyx_k_it_done), 0, 1, 0, 0},
  {&__pyx_n_s_it_index, __pyx_k_it_index, sizeof(__pyx_k_it_index), 0, 0, 1, 1},
  {&__pyx_n_s_it_nn2, __pyx_k_it_nn2, sizeof(__pyx_k_it_nn2), 0, 0, 1, 1},
  {&__pyx_n_s_it_nnn, __pyx_k_it_nnn, sizeof(__pyx_k_it_nnn), 0, 0, 1, 1},
  {&__pyx_n_s_it_sgm, __pyx_k_it_sgm, sizeof(__pyx_k_it_sgm), 0, 0, 1, 1},
  {&__pyx_n_s_it_sort, __pyx_k_it_sort, sizeof(__pyx_k_it_sort), 0, 0, 1, 1},
  {&__pyx_n_s_it_th1, __pyx_k_it_th1, sizeof(__pyx_k_it_th1), 0, 0, 1, 1},
  {&__pyx_n_s_it_tms, __pyx_k_it_tms, sizeof(__pyx_k_it_tms), 0, 0, 1, 1},
  {&__pyx_n_s_it_ttt, __pyx_k_it_ttt, sizeof(__pyx_k_it_ttt), 0, 0, 1, 1},
  {&__pyx_n_s_it_x, __pyx_k_it_x, sizeof(__pyx_k_it_x), 0, 0, 1, 1},
  {&__pyx_n_s_it_y, __pyx_k_it_y, sizeof(__pyx_k_it_y), 0, 0, 1, 1},
  {&__pyx_n_s_iteles, __pyx_k_iteles, sizeof(__pyx_k_iteles), 0, 0, 1, 1},
  {&__pyx_n_s_itf_sort, __pyx_k_itf_sort, sizeof(__pyx_k_itf_sort), 0, 0, 1, 1},
  {&__pyx_n_s_itn, __pyx_k_itn, sizeof(__pyx_k_itn), 0, 0, 1, 1},
  {&__pyx_n_s_itnum, __pyx_k_itnum, sizeof(__pyx_k_itnum), 0, 0, 1, 1},
  {&__pyx_n_s_ix, __pyx_k_ix, sizeof(__pyx_k_ix), 0, 0, 1, 1},
  {&__pyx_n_s_ix1s, __pyx_k_ix1s, sizeof(__pyx_k_ix1s), 0, 0, 1, 1},
  {&__pyx_n_s_ixpos, __pyx_k_ixpos, sizeof(__pyx_k_ixpos), 0, 0, 1, 1},
  {&__pyx_n_s_ixs, __pyx_k_ixs, sizeof(__pyx_k_ixs), 0, 0, 1, 1},
  {&__pyx_n_s_iy, __pyx_k_iy, sizeof(__pyx_k_iy), 0, 0, 1, 1},
  {&__pyx_n_s_iy1s, __pyx_k_iy1s, sizeof(__pyx_k_iy1s), 0, 0, 1, 1},
  {&__pyx_n_s_iypos, __pyx_k_iypos, sizeof(__pyx_k_iypos), 0, 0, 1, 1},
  {&__pyx_n_s_iys, __pyx_k_iys, sizeof(__pyx_k_iys), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_u_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 1, 0, 1},
  {&__pyx_n_s_k_1, __pyx_k_k_1, sizeof(__pyx_k_k_1), 0, 0, 1, 1},
  {&__pyx_n_s_k_2, __pyx_k_k_2, sizeof(__pyx_k_k_2), 0, 0, 1, 1},
  {&__pyx_n_s_k_g, __pyx_k_k_g, sizeof(__pyx_k_k_g), 0, 0, 1, 1},
  {&__pyx_n_s_k_out, __pyx_k_k_out, sizeof(__pyx_k_k_out), 0, 0, 1, 1},
  {&__pyx_n_s_k_ox, __pyx_k_k_ox, sizeof(__pyx_k_k_ox), 0, 0, 1, 1},
  {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {&__pyx_n_s_l_inc, __pyx_k_l_inc, sizeof(__pyx_k_l_inc), 0, 0, 1, 1},
  {&__pyx_n_s_lam, __pyx_k_lam, sizeof(__pyx_k_lam), 0, 0, 1, 1},
  {&__pyx_n_s_lam_in, __pyx_k_lam_in, sizeof(__pyx_k_lam_in), 0, 0, 1, 1},
  {&__pyx_n_s_lamb, __pyx_k_lamb, sizeof(__pyx_k_lamb), 0, 0, 1, 1},
  {&__pyx_n_s_lamb_mu, __pyx_k_lamb_mu, sizeof(__pyx_k_lamb_mu), 0, 0, 1, 1},
  {&__pyx_n_s_last, __pyx_k_last, sizeof(__pyx_k_last), 0, 0, 1, 1},
  {&__pyx_n_s_last_dust_val, __pyx_k_last_dust_val, sizeof(__pyx_k_last_dust_val), 0, 0, 1, 1},
  {&__pyx_n_s_layout, __pyx_k_layout, sizeof(__pyx_k_layout), 0, 0, 1, 1},
  {&__pyx_n_s_linestyle, __pyx_k_linestyle, sizeof(__pyx_k_linestyle), 0, 0, 1, 1},
  {&__pyx_n_s_linspace, __pyx_k_linspace, sizeof(__pyx_k_linspace), 0, 0, 1, 1},
  {&__pyx_n_s_m, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {&__pyx_n_s_m_inc, __pyx_k_m_inc, sizeof(__pyx_k_m_inc), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_marker, __pyx_k_marker, sizeof(__pyx_k_marker), 0, 0, 1, 1},
  {&__pyx_n_s_markersize, __pyx_k_markersize, sizeof(__pyx_k_markersize), 0, 0, 1, 1},
  {&__pyx_n_s_mat, __pyx_k_mat, sizeof(__pyx_k_mat), 0, 0, 1, 1},
  {&__pyx_n_s_material, __pyx_k_material, sizeof(__pyx_k_material), 0, 0, 1, 1},
  {&__pyx_n_s_materials, __pyx_k_materials, sizeof(__pyx_k_materials), 0, 0, 1, 1},
  {&__pyx_n_s_matplotlib_pyplot, __pyx_k_matplotlib_pyplot, sizeof(__pyx_k_matplotlib_pyplot), 0, 0, 1, 1},
  {&__pyx_n_s_max, __pyx_k_max, sizeof(__pyx_k_max), 0, 0, 1, 1},
  {&__pyx_n_s_mean, __pyx_k_mean, sizeof(__pyx_k_mean), 0, 0, 1, 1},
  {&__pyx_n_s_mean_dust, __pyx_k_mean_dust, sizeof(__pyx_k_mean_dust), 0, 0, 1, 1},
  {&__pyx_n_s_meshgrid, __pyx_k_meshgrid, sizeof(__pyx_k_meshgrid), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_min, __pyx_k_min, sizeof(__pyx_k_min), 0, 0, 1, 1},
  {&__pyx_n_s_mirror, __pyx_k_mirror, sizeof(__pyx_k_mirror), 0, 0, 1, 1},
  {&__pyx_kp_s_mirror_lib_v04_pyx, __pyx_k_mirror_lib_v04_pyx, sizeof(__pyx_k_mirror_lib_v04_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_mirror_obj, __pyx_k_mirror_obj, sizeof(__pyx_k_mirror_obj), 0, 0, 1, 1},
  {&__pyx_n_s_mltch, __pyx_k_mltch, sizeof(__pyx_k_mltch), 0, 0, 1, 1},
  {&__pyx_n_s_mmpa_full, __pyx_k_mmpa_full, sizeof(__pyx_k_mmpa_full), 0, 0, 1, 1},
  {&__pyx_n_s_mmpd, __pyx_k_mmpd, sizeof(__pyx_k_mmpd), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_multiplechange, __pyx_k_multiplechange, sizeof(__pyx_k_multiplechange), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_n1, __pyx_k_n1, sizeof(__pyx_k_n1), 0, 0, 1, 1},
  {&__pyx_n_s_n2, __pyx_k_n2, sizeof(__pyx_k_n2), 0, 0, 1, 1},
  {&__pyx_n_s_n3, __pyx_k_n3, sizeof(__pyx_k_n3), 0, 0, 1, 1},
  {&__pyx_n_s_n_c, __pyx_k_n_c, sizeof(__pyx_k_n_c), 0, 0, 1, 1},
  {&__pyx_n_s_n_d, __pyx_k_n_d, sizeof(__pyx_k_n_d), 0, 0, 1, 1},
  {&__pyx_n_s_n_g, __pyx_k_n_g, sizeof(__pyx_k_n_g), 0, 0, 1, 1},
  {&__pyx_n_s_n_in, __pyx_k_n_in, sizeof(__pyx_k_n_in), 0, 0, 1, 1},
  {&__pyx_n_s_n_inc, __pyx_k_n_inc, sizeof(__pyx_k_n_inc), 0, 0, 1, 1},
  {&__pyx_n_s_n_out, __pyx_k_n_out, sizeof(__pyx_k_n_out), 0, 0, 1, 1},
  {&__pyx_n_s_n_ox, __pyx_k_n_ox, sizeof(__pyx_k_n_ox), 0, 0, 1, 1},
  {&__pyx_n_s_n_s, __pyx_k_n_s, sizeof(__pyx_k_n_s), 0, 0, 1, 1},
  {&__pyx_n_s_n_x, __pyx_k_n_x, sizeof(__pyx_k_n_x), 0, 0, 1, 1},
  {&__pyx_n_s_n_y, __pyx_k_n_y, sizeof(__pyx_k_n_y), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_nan, __pyx_k_nan, sizeof(__pyx_k_nan), 0, 0, 1, 1},
  {&__pyx_n_s_ncols, __pyx_k_ncols, sizeof(__pyx_k_ncols), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_ndf_2, __pyx_k_ndf_2, sizeof(__pyx_k_ndf_2), 0, 0, 1, 1},
  {&__pyx_n_s_nds, __pyx_k_nds, sizeof(__pyx_k_nds), 0, 0, 1, 1},
  {&__pyx_n_s_new2_get_gcurv, __pyx_k_new2_get_gcurv, sizeof(__pyx_k_new2_get_gcurv), 0, 0, 1, 1},
  {&__pyx_n_s_new2_get_gcurv_locals_get_conic, __pyx_k_new2_get_gcurv_locals_get_conic, sizeof(__pyx_k_new2_get_gcurv_locals_get_conic), 0, 0, 1, 1},
  {&__pyx_kp_u_new2_get_gcurv_requires_either_k, __pyx_k_new2_get_gcurv_requires_either_k, sizeof(__pyx_k_new2_get_gcurv_requires_either_k), 0, 1, 0, 0},
  {&__pyx_n_s_new_get_mdust, __pyx_k_new_get_mdust, sizeof(__pyx_k_new_get_mdust), 0, 0, 1, 1},
  {&__pyx_n_s_nn, __pyx_k_nn, sizeof(__pyx_k_nn), 0, 0, 1, 1},
  {&__pyx_n_u_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 1, 0, 1},
  {&__pyx_n_s_norm, __pyx_k_norm, sizeof(__pyx_k_norm), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_npts_seg, __pyx_k_npts_seg, sizeof(__pyx_k_npts_seg), 0, 0, 1, 1},
  {&__pyx_kp_u_nrays_i, __pyx_k_nrays_i, sizeof(__pyx_k_nrays_i), 0, 1, 0, 0},
  {&__pyx_n_s_nrc_2, __pyx_k_nrc_2, sizeof(__pyx_k_nrc_2), 0, 0, 1, 1},
  {&__pyx_n_s_nrefs, __pyx_k_nrefs, sizeof(__pyx_k_nrefs), 0, 0, 1, 1},
  {&__pyx_n_s_nrows, __pyx_k_nrows, sizeof(__pyx_k_nrows), 0, 0, 1, 1},
  {&__pyx_n_s_nsol, __pyx_k_nsol, sizeof(__pyx_k_nsol), 0, 0, 1, 1},
  {&__pyx_n_s_nthreads, __pyx_k_nthreads, sizeof(__pyx_k_nthreads), 0, 0, 1, 1},
  {&__pyx_n_s_ntot, __pyx_k_ntot, sizeof(__pyx_k_ntot), 0, 0, 1, 1},
  {&__pyx_n_s_ntot2, __pyx_k_ntot2, sizeof(__pyx_k_ntot2), 0, 0, 1, 1},
  {&__pyx_n_s_num, __pyx_k_num, sizeof(__pyx_k_num), 0, 0, 1, 1},
  {&__pyx_n_s_num2, __pyx_k_num2, sizeof(__pyx_k_num2), 0, 0, 1, 1},
  {&__pyx_n_s_num_esp, __pyx_k_num_esp, sizeof(__pyx_k_num_esp), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
  {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
  {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
  {&__pyx_n_s_off, __pyx_k_off, sizeof(__pyx_k_off), 0, 0, 1, 1},
  {&__pyx_n_s_offset, __pyx_k_offset, sizeof(__pyx_k_offset), 0, 0, 1, 1},
  {&__pyx_n_s_ones, __pyx_k_ones, sizeof(__pyx_k_ones), 0, 0, 1, 1},
  {&__pyx_kp_u_only_GTC_or_EELT_are_available, __pyx_k_only_GTC_or_EELT_are_available, sizeof(__pyx_k_only_GTC_or_EELT_are_available), 0, 1, 0, 0},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_osecondary, __pyx_k_osecondary, sizeof(__pyx_k_osecondary), 0, 0, 1, 1},
  {&__pyx_n_s_out, __pyx_k_out, sizeof(__pyx_k_out), 0, 0, 1, 1},
  {&__pyx_n_u_ox, __pyx_k_ox, sizeof(__pyx_k_ox), 0, 1, 0, 1},
  {&__pyx_n_s_p0, __pyx_k_p0, sizeof(__pyx_k_p0), 0, 0, 1, 1},
  {&__pyx_n_s_pdb, __pyx_k_pdb, sizeof(__pyx_k_pdb), 0, 0, 1, 1},
  {&__pyx_n_s_period, __pyx_k_period, sizeof(__pyx_k_period), 0, 0, 1, 1},
  {&__pyx_n_s_pi, __pyx_k_pi, sizeof(__pyx_k_pi), 0, 0, 1, 1},
  {&__pyx_n_s_pl, __pyx_k_pl, sizeof(__pyx_k_pl), 0, 0, 1, 1},
  {&__pyx_n_s_plot, __pyx_k_plot, sizeof(__pyx_k_plot), 0, 0, 1, 1},
  {&__pyx_n_u_polar, __pyx_k_polar, sizeof(__pyx_k_polar), 0, 1, 0, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_kp_u_primary, __pyx_k_primary, sizeof(__pyx_k_primary), 0, 1, 0, 0},
  {&__pyx_n_s_primary_2, __pyx_k_primary_2, sizeof(__pyx_k_primary_2), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj, __pyx_k_primary_locals_primary_obj, sizeof(__pyx_k_primary_locals_primary_obj), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj___ini, __pyx_k_primary_locals_primary_obj___ini, sizeof(__pyx_k_primary_locals_primary_obj___ini), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj___ini_2, __pyx_k_primary_locals_primary_obj___ini_2, sizeof(__pyx_k_primary_locals_primary_obj___ini_2), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj_get_o, __pyx_k_primary_locals_primary_obj_get_o, sizeof(__pyx_k_primary_locals_primary_obj_get_o), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj_get_t, __pyx_k_primary_locals_primary_obj_get_t, sizeof(__pyx_k_primary_locals_primary_obj_get_t), 0, 0, 1, 1},
  {&__pyx_n_s_primary_locals_primary_obj_get_t_2, __pyx_k_primary_locals_primary_obj_get_t_2, sizeof(__pyx_k_primary_locals_primary_obj_get_t_2), 0, 0, 1, 1},
  {&__pyx_n_s_primary_obj, __pyx_k_primary_obj, sizeof(__pyx_k_primary_obj), 0, 0, 1, 1},
  {&__pyx_n_s_primary_shape, __pyx_k_primary_shape, sizeof(__pyx_k_primary_shape), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pymirrors, __pyx_k_pymirrors, sizeof(__pyx_k_pymirrors), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_u_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 1, 0, 1},
  {&__pyx_n_s_rad, __pyx_k_rad, sizeof(__pyx_k_rad), 0, 0, 1, 1},
  {&__pyx_n_s_rad1d, __pyx_k_rad1d, sizeof(__pyx_k_rad1d), 0, 0, 1, 1},
  {&__pyx_n_s_rad_max, __pyx_k_rad_max, sizeof(__pyx_k_rad_max), 0, 0, 1, 1},
  {&__pyx_n_s_rad_min, __pyx_k_rad_min, sizeof(__pyx_k_rad_min), 0, 0, 1, 1},
  {&__pyx_n_s_rad_to_azi_rat, __pyx_k_rad_to_azi_rat, sizeof(__pyx_k_rad_to_azi_rat), 0, 0, 1, 1},
  {&__pyx_n_s_radius, __pyx_k_radius, sizeof(__pyx_k_radius), 0, 0, 1, 1},
  {&__pyx_n_s_rads, __pyx_k_rads, sizeof(__pyx_k_rads), 0, 0, 1, 1},
  {&__pyx_n_s_rads_even, __pyx_k_rads_even, sizeof(__pyx_k_rads_even), 0, 0, 1, 1},
  {&__pyx_n_s_rads_odds, __pyx_k_rads_odds, sizeof(__pyx_k_rads_odds), 0, 0, 1, 1},
  {&__pyx_n_s_randn, __pyx_k_randn, sizeof(__pyx_k_randn), 0, 0, 1, 1},
  {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rc_1, __pyx_k_rc_1, sizeof(__pyx_k_rc_1), 0, 0, 1, 1},
  {&__pyx_n_s_rc_2, __pyx_k_rc_2, sizeof(__pyx_k_rc_2), 0, 0, 1, 1},
  {&__pyx_n_s_rdist, __pyx_k_rdist, sizeof(__pyx_k_rdist), 0, 0, 1, 1},
  {&__pyx_n_s_real, __pyx_k_real, sizeof(__pyx_k_real), 0, 0, 1, 1},
  {&__pyx_n_s_ref, __pyx_k_ref, sizeof(__pyx_k_ref), 0, 0, 1, 1},
  {&__pyx_n_s_ref_pos, __pyx_k_ref_pos, sizeof(__pyx_k_ref_pos), 0, 0, 1, 1},
  {&__pyx_n_s_ref_val, __pyx_k_ref_val, sizeof(__pyx_k_ref_val), 0, 0, 1, 1},
  {&__pyx_n_s_remove, __pyx_k_remove, sizeof(__pyx_k_remove), 0, 0, 1, 1},
  {&__pyx_n_s_res, __pyx_k_res, sizeof(__pyx_k_res), 0, 0, 1, 1},
  {&__pyx_n_s_res_full, __pyx_k_res_full, sizeof(__pyx_k_res_full), 0, 0, 1, 1},
  {&__pyx_n_s_resarea, __pyx_k_resarea, sizeof(__pyx_k_resarea), 0, 0, 1, 1},
  {&__pyx_n_s_resgx, __pyx_k_resgx, sizeof(__pyx_k_resgx), 0, 0, 1, 1},
  {&__pyx_n_s_resgy, __pyx_k_resgy, sizeof(__pyx_k_resgy), 0, 0, 1, 1},
  {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {&__pyx_n_s_resrad, __pyx_k_resrad, sizeof(__pyx_k_resrad), 0, 0, 1, 1},
  {&__pyx_n_s_result, __pyx_k_result, sizeof(__pyx_k_result), 0, 0, 1, 1},
  {&__pyx_n_s_rex, __pyx_k_rex, sizeof(__pyx_k_rex), 0, 0, 1, 1},
  {&__pyx_n_s_rey, __pyx_k_rey, sizeof(__pyx_k_rey), 0, 0, 1, 1},
  {&__pyx_n_s_rix, __pyx_k_rix, sizeof(__pyx_k_rix), 0, 0, 1, 1},
  {&__pyx_n_s_riy, __pyx_k_riy, sizeof(__pyx_k_riy), 0, 0, 1, 1},
  {&__pyx_n_s_rot, __pyx_k_rot, sizeof(__pyx_k_rot), 0, 0, 1, 1},
  {&__pyx_n_s_rotate_2d, __pyx_k_rotate_2d, sizeof(__pyx_k_rotate_2d), 0, 0, 1, 1},
  {&__pyx_n_s_round, __pyx_k_round, sizeof(__pyx_k_round), 0, 0, 1, 1},
  {&__pyx_n_s_rtd, __pyx_k_rtd, sizeof(__pyx_k_rtd), 0, 0, 1, 1},
  {&__pyx_n_s_rx, __pyx_k_rx, sizeof(__pyx_k_rx), 0, 0, 1, 1},
  {&__pyx_n_s_ry, __pyx_k_ry, sizeof(__pyx_k_ry), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_sa, __pyx_k_sa, sizeof(__pyx_k_sa), 0, 0, 1, 1},
  {&__pyx_n_s_sangs, __pyx_k_sangs, sizeof(__pyx_k_sangs), 0, 0, 1, 1},
  {&__pyx_n_s_sazis, __pyx_k_sazis, sizeof(__pyx_k_sazis), 0, 0, 1, 1},
  {&__pyx_n_s_scatter, __pyx_k_scatter, sizeof(__pyx_k_scatter), 0, 0, 1, 1},
  {&__pyx_n_s_scipy_interpolate, __pyx_k_scipy_interpolate, sizeof(__pyx_k_scipy_interpolate), 0, 0, 1, 1},
  {&__pyx_n_s_sdx, __pyx_k_sdx, sizeof(__pyx_k_sdx), 0, 0, 1, 1},
  {&__pyx_n_s_sdy, __pyx_k_sdy, sizeof(__pyx_k_sdy), 0, 0, 1, 1},
  {&__pyx_kp_u_sec, __pyx_k_sec, sizeof(__pyx_k_sec), 0, 1, 0, 0},
  {&__pyx_n_s_sec_ext_radius, __pyx_k_sec_ext_radius, sizeof(__pyx_k_sec_ext_radius), 0, 0, 1, 1},
  {&__pyx_n_s_sec_int_radius, __pyx_k_sec_int_radius, sizeof(__pyx_k_sec_int_radius), 0, 0, 1, 1},
  {&__pyx_n_s_sec_num, __pyx_k_sec_num, sizeof(__pyx_k_sec_num), 0, 0, 1, 1},
  {&__pyx_n_s_sec_num_esp, __pyx_k_sec_num_esp, sizeof(__pyx_k_sec_num_esp), 0, 0, 1, 1},
  {&__pyx_n_s_secondary, __pyx_k_secondary, sizeof(__pyx_k_secondary), 0, 0, 1, 1},
  {&__pyx_n_s_secondary_locals_mirror_obj, __pyx_k_secondary_locals_mirror_obj, sizeof(__pyx_k_secondary_locals_mirror_obj), 0, 0, 1, 1},
  {&__pyx_n_s_secondary_locals_mirror_obj___in, __pyx_k_secondary_locals_mirror_obj___in, sizeof(__pyx_k_secondary_locals_mirror_obj___in), 0, 0, 1, 1},
  {&__pyx_n_s_secondary_locals_mirror_obj_get, __pyx_k_secondary_locals_mirror_obj_get, sizeof(__pyx_k_secondary_locals_mirror_obj_get), 0, 0, 1, 1},
  {&__pyx_n_s_secondary_locals_mirror_obj_get_2, __pyx_k_secondary_locals_mirror_obj_get_2, sizeof(__pyx_k_secondary_locals_mirror_obj_get_2), 0, 0, 1, 1},
  {&__pyx_n_s_secondary_shape, __pyx_k_secondary_shape, sizeof(__pyx_k_secondary_shape), 0, 0, 1, 1},
  {&__pyx_n_s_seed, __pyx_k_seed, sizeof(__pyx_k_seed), 0, 0, 1, 1},
  {&__pyx_n_s_segments, __pyx_k_segments, sizeof(__pyx_k_segments), 0, 0, 1, 1},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_set_aspect, __pyx_k_set_aspect, sizeof(__pyx_k_set_aspect), 0, 0, 1, 1},
  {&__pyx_n_s_set_trace, __pyx_k_set_trace, sizeof(__pyx_k_set_trace), 0, 0, 1, 1},
  {&__pyx_n_s_set_xlim, __pyx_k_set_xlim, sizeof(__pyx_k_set_xlim), 0, 0, 1, 1},
  {&__pyx_n_s_set_ylim, __pyx_k_set_ylim, sizeof(__pyx_k_set_ylim), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_show, __pyx_k_show, sizeof(__pyx_k_show), 0, 0, 1, 1},
  {&__pyx_n_s_sign, __pyx_k_sign, sizeof(__pyx_k_sign), 0, 0, 1, 1},
  {&__pyx_n_s_sin, __pyx_k_sin, sizeof(__pyx_k_sin), 0, 0, 1, 1},
  {&__pyx_n_s_six, __pyx_k_six, sizeof(__pyx_k_six), 0, 0, 1, 1},
  {&__pyx_n_s_siy, __pyx_k_siy, sizeof(__pyx_k_siy), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_sn, __pyx_k_sn, sizeof(__pyx_k_sn), 0, 0, 1, 1},
  {&__pyx_n_s_snell, __pyx_k_snell, sizeof(__pyx_k_snell), 0, 0, 1, 1},
  {&__pyx_n_s_sol, __pyx_k_sol, sizeof(__pyx_k_sol), 0, 0, 1, 1},
  {&__pyx_n_s_sol1, __pyx_k_sol1, sizeof(__pyx_k_sol1), 0, 0, 1, 1},
  {&__pyx_n_s_sol2, __pyx_k_sol2, sizeof(__pyx_k_sol2), 0, 0, 1, 1},
  {&__pyx_n_s_sort, __pyx_k_sort, sizeof(__pyx_k_sort), 0, 0, 1, 1},
  {&__pyx_kp_u_sqr_meters, __pyx_k_sqr_meters, sizeof(__pyx_k_sqr_meters), 0, 1, 0, 0},
  {&__pyx_n_s_sqrt, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {&__pyx_n_s_srads, __pyx_k_srads, sizeof(__pyx_k_srads), 0, 0, 1, 1},
  {&__pyx_n_s_srs, __pyx_k_srs, sizeof(__pyx_k_srs), 0, 0, 1, 1},
  {&__pyx_n_s_stcnt, __pyx_k_stcnt, sizeof(__pyx_k_stcnt), 0, 0, 1, 1},
  {&__pyx_n_s_step, __pyx_k_step, sizeof(__pyx_k_step), 0, 0, 1, 1},
  {&__pyx_n_s_step2, __pyx_k_step2, sizeof(__pyx_k_step2), 0, 0, 1, 1},
  {&__pyx_n_s_stop, __pyx_k_stop, sizeof(__pyx_k_stop), 0, 0, 1, 1},
  {&__pyx_n_s_subplots, __pyx_k_subplots, sizeof(__pyx_k_subplots), 0, 0, 1, 1},
  {&__pyx_n_s_sum, __pyx_k_sum, sizeof(__pyx_k_sum), 0, 0, 1, 1},
  {&__pyx_n_s_sx, __pyx_k_sx, sizeof(__pyx_k_sx), 0, 0, 1, 1},
  {&__pyx_n_s_sxprim, __pyx_k_sxprim, sizeof(__pyx_k_sxprim), 0, 0, 1, 1},
  {&__pyx_n_s_sy, __pyx_k_sy, sizeof(__pyx_k_sy), 0, 0, 1, 1},
  {&__pyx_n_s_syprim, __pyx_k_syprim, sizeof(__pyx_k_syprim), 0, 0, 1, 1},
  {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {&__pyx_n_s_t1, __pyx_k_t1, sizeof(__pyx_k_t1), 0, 0, 1, 1},
  {&__pyx_n_s_t2, __pyx_k_t2, sizeof(__pyx_k_t2), 0, 0, 1, 1},
  {&__pyx_kp_u_t_i_i, __pyx_k_t_i_i, sizeof(__pyx_k_t_i_i), 0, 1, 0, 0},
  {&__pyx_n_s_tarea, __pyx_k_tarea, sizeof(__pyx_k_tarea), 0, 0, 1, 1},
  {&__pyx_n_s_tau, __pyx_k_tau, sizeof(__pyx_k_tau), 0, 0, 1, 1},
  {&__pyx_n_s_tau_d, __pyx_k_tau_d, sizeof(__pyx_k_tau_d), 0, 0, 1, 1},
  {&__pyx_n_s_tau_o, __pyx_k_tau_o, sizeof(__pyx_k_tau_o), 0, 0, 1, 1},
  {&__pyx_n_s_teles, __pyx_k_teles, sizeof(__pyx_k_teles), 0, 0, 1, 1},
  {&__pyx_n_s_telescope, __pyx_k_telescope, sizeof(__pyx_k_telescope), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_th, __pyx_k_th, sizeof(__pyx_k_th), 0, 0, 1, 1},
  {&__pyx_n_s_th1, __pyx_k_th1, sizeof(__pyx_k_th1), 0, 0, 1, 1},
  {&__pyx_n_s_th_1, __pyx_k_th_1, sizeof(__pyx_k_th_1), 0, 0, 1, 1},
  {&__pyx_n_s_th_m_d, __pyx_k_th_m_d, sizeof(__pyx_k_th_m_d), 0, 0, 1, 1},
  {&__pyx_n_s_th_m_o, __pyx_k_th_m_o, sizeof(__pyx_k_th_m_o), 0, 0, 1, 1},
  {&__pyx_n_s_th_max, __pyx_k_th_max, sizeof(__pyx_k_th_max), 0, 0, 1, 1},
  {&__pyx_n_s_theta1, __pyx_k_theta1, sizeof(__pyx_k_theta1), 0, 0, 1, 1},
  {&__pyx_n_s_theta2, __pyx_k_theta2, sizeof(__pyx_k_theta2), 0, 0, 1, 1},
  {&__pyx_n_s_theta3, __pyx_k_theta3, sizeof(__pyx_k_theta3), 0, 0, 1, 1},
  {&__pyx_n_s_thetaref, __pyx_k_thetaref, sizeof(__pyx_k_thetaref), 0, 0, 1, 1},
  {&__pyx_n_s_thetas, __pyx_k_thetas, sizeof(__pyx_k_thetas), 0, 0, 1, 1},
  {&__pyx_n_s_thick, __pyx_k_thick, sizeof(__pyx_k_thick), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_n_s_time_map, __pyx_k_time_map, sizeof(__pyx_k_time_map), 0, 0, 1, 1},
  {&__pyx_n_s_tlong, __pyx_k_tlong, sizeof(__pyx_k_tlong), 0, 0, 1, 1},
  {&__pyx_n_s_tm, __pyx_k_tm, sizeof(__pyx_k_tm), 0, 0, 1, 1},
  {&__pyx_n_s_tm1, __pyx_k_tm1, sizeof(__pyx_k_tm1), 0, 0, 1, 1},
  {&__pyx_n_s_tm2, __pyx_k_tm2, sizeof(__pyx_k_tm2), 0, 0, 1, 1},
  {&__pyx_n_s_tm3, __pyx_k_tm3, sizeof(__pyx_k_tm3), 0, 0, 1, 1},
  {&__pyx_n_s_tm4, __pyx_k_tm4, sizeof(__pyx_k_tm4), 0, 0, 1, 1},
  {&__pyx_n_s_to_be_rolled, __pyx_k_to_be_rolled, sizeof(__pyx_k_to_be_rolled), 0, 0, 1, 1},
  {&__pyx_n_s_totn, __pyx_k_totn, sizeof(__pyx_k_totn), 0, 0, 1, 1},
  {&__pyx_n_s_touse, __pyx_k_touse, sizeof(__pyx_k_touse), 0, 0, 1, 1},
  {&__pyx_n_s_tpar, __pyx_k_tpar, sizeof(__pyx_k_tpar), 0, 0, 1, 1},
  {&__pyx_n_s_tpar1, __pyx_k_tpar1, sizeof(__pyx_k_tpar1), 0, 0, 1, 1},
  {&__pyx_n_s_tpar2, __pyx_k_tpar2, sizeof(__pyx_k_tpar2), 0, 0, 1, 1},
  {&__pyx_n_s_tper, __pyx_k_tper, sizeof(__pyx_k_tper), 0, 0, 1, 1},
  {&__pyx_n_s_tper1, __pyx_k_tper1, sizeof(__pyx_k_tper1), 0, 0, 1, 1},
  {&__pyx_n_s_tper2, __pyx_k_tper2, sizeof(__pyx_k_tper2), 0, 0, 1, 1},
  {&__pyx_n_s_tstep, __pyx_k_tstep, sizeof(__pyx_k_tstep), 0, 0, 1, 1},
  {&__pyx_n_s_txt, __pyx_k_txt, sizeof(__pyx_k_txt), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
  {&__pyx_n_s_upplim, __pyx_k_upplim, sizeof(__pyx_k_upplim), 0, 0, 1, 1},
  {&__pyx_n_s_uts, __pyx_k_uts, sizeof(__pyx_k_uts), 0, 0, 1, 1},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_vec, __pyx_k_vec, sizeof(__pyx_k_vec), 0, 0, 1, 1},
  {&__pyx_n_s_vectors, __pyx_k_vectors, sizeof(__pyx_k_vectors), 0, 0, 1, 1},
  {&__pyx_n_s_verbose, __pyx_k_verbose, sizeof(__pyx_k_verbose), 0, 0, 1, 1},
  {&__pyx_n_s_vmax, __pyx_k_vmax, sizeof(__pyx_k_vmax), 0, 0, 1, 1},
  {&__pyx_n_s_vstack, __pyx_k_vstack, sizeof(__pyx_k_vstack), 0, 0, 1, 1},
  {&__pyx_n_s_vx_alp, __pyx_k_vx_alp, sizeof(__pyx_k_vx_alp), 0, 0, 1, 1},
  {&__pyx_n_s_vy_alp, __pyx_k_vy_alp, sizeof(__pyx_k_vy_alp), 0, 0, 1, 1},
  {&__pyx_n_s_vz_alp, __pyx_k_vz_alp, sizeof(__pyx_k_vz_alp), 0, 0, 1, 1},
  {&__pyx_n_s_where, __pyx_k_where, sizeof(__pyx_k_where), 0, 0, 1, 1},
  {&__pyx_n_s_wpos, __pyx_k_wpos, sizeof(__pyx_k_wpos), 0, 0, 1, 1},
  {&__pyx_n_s_ww, __pyx_k_ww, sizeof(__pyx_k_ww), 0, 0, 1, 1},
  {&__pyx_n_s_ww2, __pyx_k_ww2, sizeof(__pyx_k_ww2), 0, 0, 1, 1},
  {&__pyx_n_s_wwn, __pyx_k_wwn, sizeof(__pyx_k_wwn), 0, 0, 1, 1},
  {&__pyx_n_s_wwn2, __pyx_k_wwn2, sizeof(__pyx_k_wwn2), 0, 0, 1, 1},
  {&__pyx_n_s_wws, __pyx_k_wws, sizeof(__pyx_k_wws), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_x1, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
  {&__pyx_n_s_x1d, __pyx_k_x1d, sizeof(__pyx_k_x1d), 0, 0, 1, 1},
  {&__pyx_n_s_x2, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
  {&__pyx_n_s_x_alp, __pyx_k_x_alp, sizeof(__pyx_k_x_alp), 0, 0, 1, 1},
  {&__pyx_n_s_x_alpha, __pyx_k_x_alpha, sizeof(__pyx_k_x_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_x_even, __pyx_k_x_even, sizeof(__pyx_k_x_even), 0, 0, 1, 1},
  {&__pyx_n_s_x_fact_even, __pyx_k_x_fact_even, sizeof(__pyx_k_x_fact_even), 0, 0, 1, 1},
  {&__pyx_n_s_x_fact_odds, __pyx_k_x_fact_odds, sizeof(__pyx_k_x_fact_odds), 0, 0, 1, 1},
  {&__pyx_n_s_x_odds, __pyx_k_x_odds, sizeof(__pyx_k_x_odds), 0, 0, 1, 1},
  {&__pyx_n_s_x_sec, __pyx_k_x_sec, sizeof(__pyx_k_x_sec), 0, 0, 1, 1},
  {&__pyx_n_s_xc, __pyx_k_xc, sizeof(__pyx_k_xc), 0, 0, 1, 1},
  {&__pyx_n_s_xer, __pyx_k_xer, sizeof(__pyx_k_xer), 0, 0, 1, 1},
  {&__pyx_n_s_xf, __pyx_k_xf, sizeof(__pyx_k_xf), 0, 0, 1, 1},
  {&__pyx_n_s_xir, __pyx_k_xir, sizeof(__pyx_k_xir), 0, 0, 1, 1},
  {&__pyx_n_s_xpos, __pyx_k_xpos, sizeof(__pyx_k_xpos), 0, 0, 1, 1},
  {&__pyx_n_s_xs1, __pyx_k_xs1, sizeof(__pyx_k_xs1), 0, 0, 1, 1},
  {&__pyx_n_s_xs2, __pyx_k_xs2, sizeof(__pyx_k_xs2), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_y1, __pyx_k_y1, sizeof(__pyx_k_y1), 0, 0, 1, 1},
  {&__pyx_n_s_y1d, __pyx_k_y1d, sizeof(__pyx_k_y1d), 0, 0, 1, 1},
  {&__pyx_n_s_y2, __pyx_k_y2, sizeof(__pyx_k_y2), 0, 0, 1, 1},
  {&__pyx_n_s_y_alp, __pyx_k_y_alp, sizeof(__pyx_k_y_alp), 0, 0, 1, 1},
  {&__pyx_n_s_y_alpha, __pyx_k_y_alpha, sizeof(__pyx_k_y_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_y_even, __pyx_k_y_even, sizeof(__pyx_k_y_even), 0, 0, 1, 1},
  {&__pyx_n_s_y_fact_even, __pyx_k_y_fact_even, sizeof(__pyx_k_y_fact_even), 0, 0, 1, 1},
  {&__pyx_n_s_y_fact_odds, __pyx_k_y_fact_odds, sizeof(__pyx_k_y_fact_odds), 0, 0, 1, 1},
  {&__pyx_n_s_y_odds, __pyx_k_y_odds, sizeof(__pyx_k_y_odds), 0, 0, 1, 1},
  {&__pyx_n_s_y_sec, __pyx_k_y_sec, sizeof(__pyx_k_y_sec), 0, 0, 1, 1},
  {&__pyx_n_s_yc, __pyx_k_yc, sizeof(__pyx_k_yc), 0, 0, 1, 1},
  {&__pyx_n_s_yer, __pyx_k_yer, sizeof(__pyx_k_yer), 0, 0, 1, 1},
  {&__pyx_n_s_yir, __pyx_k_yir, sizeof(__pyx_k_yir), 0, 0, 1, 1},
  {&__pyx_n_s_ypos, __pyx_k_ypos, sizeof(__pyx_k_ypos), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {&__pyx_n_s_z_1, __pyx_k_z_1, sizeof(__pyx_k_z_1), 0, 0, 1, 1},
  {&__pyx_n_s_z_2, __pyx_k_z_2, sizeof(__pyx_k_z_2), 0, 0, 1, 1},
  {&__pyx_n_s_zerodux, __pyx_k_zerodux, sizeof(__pyx_k_zerodux), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {&__pyx_n_s_zs1, __pyx_k_zs1, sizeof(__pyx_k_zs1), 0, 0, 1, 1},
  {&__pyx_n_s_zs2, __pyx_k_zs2, sizeof(__pyx_k_zs2), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_object = __Pyx_GetBuiltinName(__pyx_n_s_object); if (!__pyx_builtin_object) __PYX_ERR(0, 28, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 247, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 504, __pyx_L1_error)
  __pyx_builtin_exit = __Pyx_GetBuiltinName(__pyx_n_s_exit); if (!__pyx_builtin_exit) __PYX_ERR(0, 1694, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 272, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(1, 856, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(1, 1038, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "mirror_lib_v04.pyx":237
 * 
 *       elif (name.upper() == 'SYMMETRY'):
 *         print('Not yet')             # <<<<<<<<<<<<<<
 *       else:
 *         print("only GTC or EELT are available!")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_Not_yet); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "mirror_lib_v04.pyx":239
 *         print('Not yet')
 *       else:
 *         print("only GTC or EELT are available!")             # <<<<<<<<<<<<<<
 *         sys.exit()
 * 
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_only_GTC_or_EELT_are_available); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "mirror_lib_v04.pyx":28
 * def init_telescope(name, num):
 * #
 *   class telescope(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, name, num):
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "mirror_lib_v04.pyx":30
 *   class telescope(object):
 * 
 *     def __init__(self, name, num):             # <<<<<<<<<<<<<<
 *       if (name.upper() == 'GTC'):
 *         self.ID = 'GTC'
 */
  __pyx_tuple__4 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_name, __pyx_n_s_num, __pyx_n_s_diam_1, __pyx_n_s_fr_1); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);
  __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__4, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init, 30, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(0, 30, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":258
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):
 * 
 *   class beam(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, alp, x_alp, y_alp):
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "mirror_lib_v04.pyx":260
 *   class beam(object):
 * 
 *     def __init__(self, alp, x_alp, y_alp):             # <<<<<<<<<<<<<<
 * 
 *       self.alp = alp * 1.
 */
  __pyx_tuple__7 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_alp, __pyx_n_s_x_alp, __pyx_n_s_y_alp); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init, 260, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 260, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":359
 * #
 *               if (inum_esp!= rads.size):
 *                 print("")             # <<<<<<<<<<<<<<
 *                 print("\t Warning!, number of segments inside maximum radius is too big")
 *                 print(" %i -> %i" % (inum_esp,rads.size,))
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_u__10); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "mirror_lib_v04.pyx":360
 *               if (inum_esp!= rads.size):
 *                 print("")
 *                 print("\t Warning!, number of segments inside maximum radius is too big")             # <<<<<<<<<<<<<<
 *                 print(" %i -> %i" % (inum_esp,rads.size,))
 *                 print("")
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_u_Warning_number_of_segments_insi); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "mirror_lib_v04.pyx":445
 *                   condit = 1
 *           elif (iprimary_shape=='anular'):
 *               x = np.zeros((1,), dtype=np.float64)             # <<<<<<<<<<<<<<
 *               y = np.zeros((1,), dtype=np.float64)
 *               rads = np.zeros((1,)) + iradius
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_tuple__13); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "mirror_lib_v04.pyx":452
 * 
 *           else:
 *             print('primary:')             # <<<<<<<<<<<<<<
 *             print('\tUnknown primary mirror shape!')
 *             print('')
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_u_primary); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "mirror_lib_v04.pyx":453
 *           else:
 *             print('primary:')
 *             print('\tUnknown primary mirror shape!')             # <<<<<<<<<<<<<<
 *             print('')
 *             stop()
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_u_Unknown_primary_mirror_shape); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "mirror_lib_v04.pyx":293
 *             , mltch):
 * 
 *         def get_primary_geometry(inum_esp \             # <<<<<<<<<<<<<<
 *             , iradius, irad_min, irad_max, iprimary_shape):
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(43, __pyx_n_s_inum_esp, __pyx_n_s_iradius, __pyx_n_s_irad_min, __pyx_n_s_irad_max, __pyx_n_s_iprimary_shape, __pyx_n_s_ones, __pyx_n_s_x_odds, __pyx_n_s__17, __pyx_n_s_y_odds, __pyx_n_s_x_even, __pyx_n_s_y_even, __pyx_n_s_ap, __pyx_n_s_x_fact_odds, __pyx_n_s_y_fact_odds, __pyx_n_s_x_fact_even, __pyx_n_s_y_fact_even, __pyx_n_s_rads_odds, __pyx_n_s_rads_even, __pyx_n_s_sort, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_rads, __pyx_n_s_ww, __pyx_n_s_area, __pyx_n_s_b, __pyx_n_s_h, __pyx_n_s_family, __pyx_n_s_condit, __pyx_n_s_num, __pyx_n_s_step, __pyx_n_s_Nperfamily, __pyx_n_s_diff, __pyx_n_s_wwn, __pyx_n_s_azis, __pyx_n_s_wws, __pyx_n_s_condit2, __pyx_n_s_num2, __pyx_n_s_stcnt, __pyx_n_s_step2, __pyx_n_s_diff2, __pyx_n_s_wwn2, __pyx_n_s_ww2, __pyx_n_s_it_nnn); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(5, 0, 43, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_primary_geometry, 293, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(0, 293, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":479
 *         if (type(mltch)!=int):
 *           print("")
 *           print("\tMultiplechange MUST be an integer!")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_u_Multiplechange_MUST_be_an_integ); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "mirror_lib_v04.pyx":486
 *         if (mltch<1):
 *           print("")
 *           print("\tMultiplechange MUST be >=1!")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_u_Multiplechange_MUST_be_1); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "mirror_lib_v04.pyx":491
 *         if (self.N%mltch!=0):
 *           print("")
 *           print("\tMultiplechange MUST give MODULUS(N,MLT)==0")             # <<<<<<<<<<<<<<
 *           print("")
 *           sys.exit()
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_u_Multiplechange_MUST_give_MODULU); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "mirror_lib_v04.pyx":588
 *         # ... but rather simulation steps in between mirror changes!
 *         if (self.days_for_each_timestep < 1.):
 *           print('At least one time step per change is needed, returning nan')             # <<<<<<<<<<<<<<
 *           sys.exit()
 *         #
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_u_At_least_one_time_step_per_chang); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "mirror_lib_v04.pyx":682
 *       elif (order.upper() == 'AZIMUTHAL'):
 *         #sort = np.argsort(self.azimuth+180./np.pi)[::-1]
 *         sort = np.argsort(self.azimuth)[::-1]             # <<<<<<<<<<<<<<
 * 
 *         off = 0
 */
  __pyx_slice__24 = PySlice_New(Py_None, Py_None, __pyx_int_neg_1); if (unlikely(!__pyx_slice__24)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__24);
  __Pyx_GIVEREF(__pyx_slice__24);

  /* "mirror_lib_v04.pyx":701
 *         sort = np.int32(self.azimuth * 0)
 *       else:
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")             # <<<<<<<<<<<<<<
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_u_THE_ORDER_MUST_BE_ONE_OF_THE_FOL); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "mirror_lib_v04.pyx":702
 *       else:
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")
 *         print("\tRANDOM")             # <<<<<<<<<<<<<<
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_RANDOM_2); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "mirror_lib_v04.pyx":703
 *         print("THE ORDER MUST BE ONE OF THE FOLLOWINGS:")
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")             # <<<<<<<<<<<<<<
 *         print("\tLINEAL")
 *         print("\tAZIMUTHAL")
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_u_SYMMETRIC_2); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "mirror_lib_v04.pyx":704
 *         print("\tRANDOM")
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")             # <<<<<<<<<<<<<<
 *         print("\tAZIMUTHAL")
 *         sys.exit()
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_u_LINEAL_2); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "mirror_lib_v04.pyx":705
 *         print("\tSYMMETRIC")
 *         print("\tLINEAL")
 *         print("\tAZIMUTHAL")             # <<<<<<<<<<<<<<
 *         sys.exit()
 *       #.stop()
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_u_AZIMUTHAL_2); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "mirror_lib_v04.pyx":764
 *             # wrong??:self.time_map[cnt,:,0] = (np.arange(self.Ntimes \
 *             # wrong??:    , dtype=np.float64) * self.tstep + offset) % self.period
 *             self.time_map[cnt,:,0] = (np.arange(self.Ntimes \             # <<<<<<<<<<<<<<
 *                 , dtype=np.float64) * self.tstep + offset * self.tstep) % self.period
 *             # in days.
 */
  __pyx_slice__30 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__30)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);

  /* "mirror_lib_v04.pyx":813
 * #
 * 
 *         initial_num_cln_since_last_sch = (self.time_map[:,0,0] \             # <<<<<<<<<<<<<<
 *             / self.tstep) / self.cleandustcadence
 * 
 */
  __pyx_tuple__31 = PyTuple_Pack(3, __pyx_slice__30, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "mirror_lib_v04.pyx":288
 *     , ideal=False, multiplechange=1):
 * #
 *   class primary_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "mirror_lib_v04.pyx":290
 *   class primary_obj(object):
 * 
 *     def __init__(self,telescope,tstep,tlong,cleandust,period,deltat \             # <<<<<<<<<<<<<<
 *             , mltch):
 * 
 */
  __pyx_tuple__33 = PyTuple_Pack(18, __pyx_n_s_self, __pyx_n_s_telescope, __pyx_n_s_tstep, __pyx_n_s_tlong, __pyx_n_s_cleandust, __pyx_n_s_period, __pyx_n_s_deltat, __pyx_n_s_mltch, __pyx_n_s_get_primary_geometry, __pyx_n_s_get_primary_geometry, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_rads, __pyx_n_s_family, __pyx_n_s_Nperfamily, __pyx_n_s_i, __pyx_n_s_ideltat, __pyx_n_s_iperiod); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);
  __pyx_codeobj__34 = (PyObject*)__Pyx_PyCode_New(8, 0, 18, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init, 290, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__34)) __PYX_ERR(0, 290, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":610
 *         return
 *       #
 *     def get_order(self, order):             # <<<<<<<<<<<<<<
 * 
 *       if (order.upper() == 'RANDOM'):
 */
  __pyx_tuple__35 = PyTuple_Pack(26, __pyx_n_s_self, __pyx_n_s_order, __pyx_n_s_sort, __pyx_n_s_fsort, __pyx_n_s_it_nnn, __pyx_n_s_ww, __pyx_n_s_ref_pos, __pyx_n_s_it_x, __pyx_n_s_it_y, __pyx_n_s_it_a, __pyx_n_s_it_sort, __pyx_n_s_it_index, __pyx_n_s_azi360, __pyx_n_s_init_val, __pyx_n_s_dif, __pyx_n_s_adif, __pyx_n_s_iff_azi, __pyx_n_s_itf_sort, __pyx_n_s_it_nn2, __pyx_n_s_it2_a, __pyx_n_s_ww2, __pyx_n_s_ref_val, __pyx_n_s_off, __pyx_n_s_touse, __pyx_n_s_rdist, __pyx_n_s_ref); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);
  __pyx_codeobj__36 = (PyObject*)__Pyx_PyCode_New(2, 0, 26, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_order, 610, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__36)) __PYX_ERR(0, 610, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":738
 *       return
 *     #
 *     def get_times_new(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */
  __pyx_tuple__37 = PyTuple_Pack(22, __pyx_n_s_self, __pyx_n_s_ideal, __pyx_n_s_to_be_rolled, __pyx_n_s_frac, __pyx_n_s_cnt, __pyx_n_s_i, __pyx_n_s_offset, __pyx_n_s_uts, __pyx_n_s_initial_num_cln_since_last_sch, __pyx_n_s_inital_amount_dust_in_sim_steps, __pyx_n_s_first_acc_amount_dust_in_sim_ste, __pyx_n_s_aux, __pyx_n_s_ginit_dust_val, __pyx_n_s_bu_ginit_dust_val, __pyx_n_s_ww, __pyx_n_s_it_sgm, __pyx_n_s_it_ttt, __pyx_n_s_aux_seg_chg, __pyx_n_s_excess_sim_step, __pyx_n_s_init_dust_val, __pyx_n_s_last_dust_val, __pyx_n_s_dum); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(2, 0, 22, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_times_new, 738, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(0, 738, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":959
 *     #
 * 
 *     def get_times(self, ideal):             # <<<<<<<<<<<<<<
 *     #
 * 
 */
  __pyx_tuple__39 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_ideal, __pyx_n_s_to_be_rolled, __pyx_n_s_i, __pyx_n_s_offset); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_times, 959, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(0, 959, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1029
 *   #
 *   if ( (deltat==0.) & (period==0.) ):
 *     print('deltat and period are 0, one of them must not be 0!')             # <<<<<<<<<<<<<<
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_kp_u_deltat_and_period_are_0_one_of_t); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "mirror_lib_v04.pyx":1032
 *     return np.nan
 *   if ( (deltat!=0.) & (period!=0.) ):
 *     print('deltat and period are non 0, one of them must be 0!')             # <<<<<<<<<<<<<<
 *     return np.nan
 *   #
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_u_deltat_and_period_are_non_0_one); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 1032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "mirror_lib_v04.pyx":1229
 *         sdy = isec_ext_radius * np.sin(sangs)
 * 
 *         sx = x[ww][:,None] + sdx[None,:]             # <<<<<<<<<<<<<<
 *         sy = y[ww][:,None] + sdy[None,:]
 * 
 */
  __pyx_tuple__43 = PyTuple_Pack(2, __pyx_slice__30, Py_None); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 1229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_tuple__44 = PyTuple_Pack(2, Py_None, __pyx_slice__30); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 1229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "mirror_lib_v04.pyx":1248
 * 
 *         # Remove duplicated points:
 *         diffs = np.abs(sx[1:]-sx[0:-1]) + np.abs(sy[1:]-sy[0:-1])             # <<<<<<<<<<<<<<
 *         ww = np.where(diffs > 1.e-5)
 * 
 */
  __pyx_slice__45 = PySlice_New(__pyx_int_1, Py_None, Py_None); if (unlikely(!__pyx_slice__45)) __PYX_ERR(0, 1248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__45);
  __Pyx_GIVEREF(__pyx_slice__45);
  __pyx_slice__46 = PySlice_New(__pyx_int_0, __pyx_int_neg_1, Py_None); if (unlikely(!__pyx_slice__46)) __PYX_ERR(0, 1248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__46);
  __Pyx_GIVEREF(__pyx_slice__46);

  /* "mirror_lib_v04.pyx":1268
 * 
 *       else:
 *         print('Secondary:')             # <<<<<<<<<<<<<<
 *         print('\tShape unknown!')
 *         print('')
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_u_Secondary); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "mirror_lib_v04.pyx":1269
 *       else:
 *         print('Secondary:')
 *         print('\tShape unknown!')             # <<<<<<<<<<<<<<
 *         print('')
 *         stop()
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_u_Shape_unknown); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "mirror_lib_v04.pyx":1108
 * def secondary(telescope):
 * #
 *   class mirror_obj(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self,telescope):
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "mirror_lib_v04.pyx":1110
 *   class mirror_obj(object):
 * 
 *     def __init__(self,telescope):             # <<<<<<<<<<<<<<
 *       vmax = telescope.sec_ext_radius * np.sqrt(telescope.sec_num_esp) * 1.1
 *       if (telescope.ID == 'GTC'):
 */
  __pyx_tuple__50 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_telescope, __pyx_n_s_vmax); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 1110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init, 1110, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(0, 1110, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1145
 *       return
 * #
 *     def get_secondary_geometry(self,inum_esp, isec_ext_radius \             # <<<<<<<<<<<<<<
 *         , isec_int_radius,ishape):
 * 
 */
  __pyx_tuple__52 = PyTuple_Pack(33, __pyx_n_s_self, __pyx_n_s_inum_esp, __pyx_n_s_isec_ext_radius, __pyx_n_s_isec_int_radius, __pyx_n_s_ishape, __pyx_n_s_ones, __pyx_n_s_x_odds, __pyx_n_s__17, __pyx_n_s_y_odds, __pyx_n_s_x_even, __pyx_n_s_y_even, __pyx_n_s_ap, __pyx_n_s_x_fact_odds, __pyx_n_s_y_fact_odds, __pyx_n_s_x_fact_even, __pyx_n_s_y_fact_even, __pyx_n_s_rads_odds, __pyx_n_s_rads_even, __pyx_n_s_sort, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_rads, __pyx_n_s_ww, __pyx_n_s_last, __pyx_n_s_sangs, __pyx_n_s_srads, __pyx_n_s_sdx, __pyx_n_s_sdy, __pyx_n_s_sx, __pyx_n_s_sy, __pyx_n_s_srs, __pyx_n_s_sazis, __pyx_n_s_diffs); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(5, 0, 33, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_secondary_geometry, 1145, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 1145, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1275
 *       return
 * 
 *     def get_mirror(self, telescope):             # <<<<<<<<<<<<<<
 * #
 *       self.get_secondary_geometry(telescope.sec_num_esp \
 */
  __pyx_tuple__54 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_telescope); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_mirror, 1275, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 1275, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1297
 * def dirt_timing(lamb, time):
 * #
 *   def zerodux(lamb, angstrom=True):             # <<<<<<<<<<<<<<
 *   #
 *     if (angstrom == True):
 */
  __pyx_tuple__56 = PyTuple_Pack(6, __pyx_n_s_lamb, __pyx_n_s_angstrom, __pyx_n_s_lamb_mu, __pyx_n_s_b, __pyx_n_s_c, __pyx_n_s_n); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_zerodux, 1297, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __pyx_tuple__58 = PyTuple_Pack(1, ((PyObject *)Py_True)); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "mirror_lib_v04.pyx":1311
 *     return n
 * #
 *   def indexes(elem, lam_in):             # <<<<<<<<<<<<<<
 * #la longitud de onda entra en amstrons
 *     if (elem.upper() == 'DUST'):
 */
  __pyx_tuple__59 = PyTuple_Pack(11, __pyx_n_s_elem, __pyx_n_s_lam_in, __pyx_n_s_lam, __pyx_n_s_n2, __pyx_n_s_n_out, __pyx_n_s_n, __pyx_n_s_interpol, __pyx_n_s_sort, __pyx_n_s_f, __pyx_n_s_k_out, __pyx_n_s_k); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 1311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);
  __pyx_codeobj__60 = (PyObject*)__Pyx_PyCode_New(2, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_indexes, 1311, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__60)) __PYX_ERR(0, 1311, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1488
 *       return n_out,k_out
 * #
 *   def thick(th_max, tau, t):             # <<<<<<<<<<<<<<
 * #
 *     th = th_max * (1.e0 - np.exp( -t / tau))
 */
  __pyx_tuple__61 = PyTuple_Pack(4, __pyx_n_s_th_max, __pyx_n_s_tau, __pyx_n_s_t, __pyx_n_s_th); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 1488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(3, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__61, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_thick, 1488, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(0, 1488, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1493
 *     return th
 * #
 *   def Dthick(alpha, t):             # <<<<<<<<<<<<<<
 * #
 *     th = alpha * t
 */
  __pyx_tuple__63 = PyTuple_Pack(3, __pyx_n_s_alpha, __pyx_n_s_t, __pyx_n_s_th); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 1493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_Dthick, 1493, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 1493, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1499
 *     return th
 * #
 *   class materials(object):             # <<<<<<<<<<<<<<
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "mirror_lib_v04.pyx":1501
 *   class materials(object):
 * #
 *     def __init__(self, n_s, n_in, n_d, n_c, n_ox, d_ox, d_c, d_s, d_d, lamb):             # <<<<<<<<<<<<<<
 *       self.n_s = n_s + 0j
 *       self.n_in = n_in + 0j
 */
  __pyx_tuple__66 = PyTuple_Pack(11, __pyx_n_s_self, __pyx_n_s_n_s, __pyx_n_s_n_in, __pyx_n_s_n_d, __pyx_n_s_n_c, __pyx_n_s_n_ox, __pyx_n_s_d_ox, __pyx_n_s_d_c, __pyx_n_s_d_s, __pyx_n_s_d_d, __pyx_n_s_lamb); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init, 1501, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 1501, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1542
 *   d_mir = 1.2e3   #angstroms
 * 
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )             # <<<<<<<<<<<<<<
 *   d_c = (d_mir - d_ox)  #el espesor del conductor sera el original (d_mir) menos lo que se ha oxidado.
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )
 */
  __pyx_tuple__68 = PyTuple_Pack(3, __pyx_slice__30, __pyx_slice__30, __pyx_int_0); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 1542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "mirror_lib_v04.pyx":1544
 *   d_ox = 1. * thick( th_m_o , tau_o , time[:,:,0] )
 *   d_c = (d_mir - d_ox)  #el espesor del conductor sera el original (d_mir) menos lo que se ha oxidado.
 *   d_d = 1. * Dthick ( alpha, time[:,:,2] )             # <<<<<<<<<<<<<<
 * 
 *   d_s = d_d.real * 0. + 1.e4
 */
  __pyx_tuple__69 = PyTuple_Pack(3, __pyx_slice__30, __pyx_slice__30, __pyx_int_2); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 1544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "mirror_lib_v04.pyx":1558
 * def get_intersection_focus(dir_cos, x, z, f):
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]             # <<<<<<<<<<<<<<
 * 
 *   b = z - a * x
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_int_2, __pyx_slice__30); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_tuple__71 = PyTuple_Pack(2, __pyx_int_0, __pyx_slice__30); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "mirror_lib_v04.pyx":1631
 *   # ... each variable.
 * 
 *   def get_conic_sols(ia,ib,ic):             # <<<<<<<<<<<<<<
 *     isol1=(-ib+np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 *     isol2=(-ib-np.sqrt(ib**2-4.*ia*ic))/(2.*ia)
 */
  __pyx_tuple__72 = PyTuple_Pack(5, __pyx_n_s_ia, __pyx_n_s_ib, __pyx_n_s_ic, __pyx_n_s_isol1, __pyx_n_s_isol2); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 1631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_conic_sols, 1631, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 1631, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1637
 * 
 *   if ( ( (k==0) & (e==0) ) | ( (r==0) & (f==0) ) ):
 *     print('new2_get_gcurv requires either k/e and r/f')             # <<<<<<<<<<<<<<
 *     sys.exit()
 * 
 */
  __pyx_tuple__74 = PyTuple_Pack(1, __pyx_kp_u_new2_get_gcurv_requires_either_k); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 1637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "mirror_lib_v04.pyx":1692
 *      print('')
 *      print('\t Unknown layout: %s for ray tracing!' % (layout,))
 *      print('\t Allowed options are: "polar", "cartesian"')             # <<<<<<<<<<<<<<
 *      print('')
 *      exit(1)
 */
  __pyx_tuple__75 = PyTuple_Pack(1, __pyx_kp_u_Allowed_options_are_polar_carte); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 1692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "mirror_lib_v04.pyx":1820
 * 
 *   else:
 *     print('Get geometry:')             # <<<<<<<<<<<<<<
 *     print('\tUnknown layout.')
 *     print('')
 */
  __pyx_tuple__77 = PyTuple_Pack(1, __pyx_kp_u_Get_geometry); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 1820, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "mirror_lib_v04.pyx":1821
 *   else:
 *     print('Get geometry:')
 *     print('\tUnknown layout.')             # <<<<<<<<<<<<<<
 *     print('')
 *     stop()
 */
  __pyx_tuple__78 = PyTuple_Pack(1, __pyx_kp_u_Unknown_layout_2); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "mirror_lib_v04.pyx":2102
 *       ca = np.cos(a2)
 *       sa = np.sin(a2)
 *       rot = np.array([ca, -sa, sa, ca]).reshape(2,2)             # <<<<<<<<<<<<<<
 * #
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_int_2, __pyx_int_2); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 2102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "mirror_lib_v04.pyx":2106
 *       out = np.dot(rot, np.vstack([dumgx,dumgy]))
 *       dumxg = out[0,:] * 1.
 *       dumyg = out[1,:] * 1.             # <<<<<<<<<<<<<<
 * # Select pixels that fulfil second criterion:
 *       ww = np.where( np.abs(dumyg) <= costhU)[0]
 */
  __pyx_tuple__80 = PyTuple_Pack(2, __pyx_int_1, __pyx_slice__30); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 2106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "mirror_lib_v04.pyx":2156
 * # Otherwise:
 *     else:
 *       print('Primary shape unknown!')             # <<<<<<<<<<<<<<
 *       print('')
 *       print('')
 */
  __pyx_tuple__81 = PyTuple_Pack(1, __pyx_kp_u_Primary_shape_unknown); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 2156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "mirror_lib_v04.pyx":1959
 * #
 *   if (osecondary==True):
 *     print(" !! PLOT !!")             # <<<<<<<<<<<<<<
 *     pl.figure(1)
 *     pl.clf()
 */
  __pyx_tuple__82 = PyTuple_Pack(1, __pyx_kp_u_PLOT); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 1959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "mirror_lib_v04.pyx":2080
 * ###<OBSOLETE>::
 * #
 *   def check_primary_id(iteles, ixpos, iypos, igxs, igys, igrad, igarea):             # <<<<<<<<<<<<<<
 * #
 *     if (iteles.primary_shape == 'hexagonal'):
 */
  __pyx_tuple__83 = PyTuple_Pack(24, __pyx_n_s_iteles, __pyx_n_s_ixpos, __pyx_n_s_iypos, __pyx_n_s_igxs, __pyx_n_s_igys, __pyx_n_s_igrad, __pyx_n_s_igarea, __pyx_n_s_dumgx, __pyx_n_s_dumgy, __pyx_n_s_resgx, __pyx_n_s_resgy, __pyx_n_s_a, __pyx_n_s_costhU, __pyx_n_s_ww, __pyx_n_s_resrad, __pyx_n_s_resarea, __pyx_n_s_a2, __pyx_n_s_ca, __pyx_n_s_sa, __pyx_n_s_rot, __pyx_n_s_out, __pyx_n_s_dumxg, __pyx_n_s_dumyg, __pyx_n_s_dumrad); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(7, 0, 24, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_check_primary_id, 2080, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 2080, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2163
 *     return resgx + ixpos, resgy + iypos, resrad, resarea
 * 
 *   def check_primary(teles, six, siy, x, y, nthreads):             # <<<<<<<<<<<<<<
 *     if (teles.primary_shape == 'hexagonal'):
 * 
 */
  __pyx_tuple__85 = PyTuple_Pack(18, __pyx_n_s_teles, __pyx_n_s_six, __pyx_n_s_siy, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_nthreads, __pyx_n_s_hangs, __pyx_n_s_sxprim, __pyx_n_s_syprim, __pyx_n_s_rx, __pyx_n_s_ry, __pyx_n_s_ix, __pyx_n_s_iy, __pyx_n_s_wpos, __pyx_n_s_rix, __pyx_n_s_riy, __pyx_n_s_rex, __pyx_n_s_rey); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(6, 0, 18, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__85, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_check_primary, 2163, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(0, 2163, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2210
 *     ax.scatter(x1d,y1d,color='k', s=0.1, edgecolor=None)
 *     pl.draw()
 *     print('?')             # <<<<<<<<<<<<<<
 * 
 *   for it_sgm in range(segments.N):
 */
  __pyx_tuple__88 = PyTuple_Pack(1, __pyx_kp_u__87); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 2210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "mirror_lib_v04.pyx":2435
 * #
 * #
 *   def snell(n1, n2, theta1):             # <<<<<<<<<<<<<<
 * 
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 */
  __pyx_tuple__91 = PyTuple_Pack(3, __pyx_n_s_n1, __pyx_n_s_n2, __pyx_n_s_theta1); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 2435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__91, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_snell, 2435, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 2435, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2439
 *     return np.arcsin(n1 * np.sin(theta1) / n2)
 * #
 *   def tpar(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 */
  __pyx_tuple__93 = PyTuple_Pack(4, __pyx_n_s_n1, __pyx_n_s_n2, __pyx_n_s_theta1, __pyx_n_s_theta2); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_tpar, 2439, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 2439, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2443
 *     return (2. * n1 * np.cos(theta1)) / (n1 * np.cos(theta1) + n2 * np.cos(theta2))
 * #
 *   def tper(n1, n2, theta1, theta2):             # <<<<<<<<<<<<<<
 * 
 *     return (2. * n1 * np.cos(theta2)) / (n1 * np.cos(theta2) + n2 * np.cos(theta1))
 */
  __pyx_tuple__95 = PyTuple_Pack(4, __pyx_n_s_n1, __pyx_n_s_n2, __pyx_n_s_theta1, __pyx_n_s_theta2); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_tper, 2443, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 2443, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2520
 *   d = d / 4. * np.pi
 * #
 *   mat = np.zeros((4,4))             # <<<<<<<<<<<<<<
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 */
  __pyx_tuple__97 = PyTuple_Pack(2, __pyx_int_4, __pyx_int_4); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);

  /* "mirror_lib_v04.pyx":2521
 * #
 *   mat = np.zeros((4,4))
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))             # <<<<<<<<<<<<<<
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 */
  __pyx_tuple__98 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);

  /* "mirror_lib_v04.pyx":2522
 *   mat = np.zeros((4,4))
 *   mat[0,0] = np.exp(mean_dust.real * (2. * a - 1.))
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))             # <<<<<<<<<<<<<<
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))
 */
  __pyx_tuple__99 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__99)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__99);
  __Pyx_GIVEREF(__pyx_tuple__99);

  /* "mirror_lib_v04.pyx":2524
 *   mat[1,1] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[2,2] = np.exp(mean_dust.real * ((a + d) - 1.))
 *   mat[3,3] = np.exp(mean_dust.real * (2. * d - 1.))             # <<<<<<<<<<<<<<
 * #
 *   return mat
 */
  __pyx_tuple__100 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);

  /* "mirror_lib_v04.pyx":2593
 *       ntot2=ntot2+nn
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \             # <<<<<<<<<<<<<<
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea
 *       #
 */
  __pyx_tuple__101 = PyTuple_Pack(3, __pyx_slice__30, __pyx_slice__30, __pyx_slice__30); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 2593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);

  /* "mirror_lib_v04.pyx":2594
 * 
 *       res[it_tms,it_sgm,:,:]=np.sum(res_full[:,:,:] \
 *           * segments.area['%i' % (it_sgm,)][:,None,None], axis=0) / tarea             # <<<<<<<<<<<<<<
 *       #
 *       #
 */
  __pyx_tuple__102 = PyTuple_Pack(3, __pyx_slice__30, Py_None, Py_None); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 2594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":272
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__103 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(1, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":276
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__104 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(1, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":306
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__105 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(1, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":856
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__106 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(1, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":880
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__107 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(1, 880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1038
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__108 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(1, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1044
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__109 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(1, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);

  /* "mirror_lib_v04.pyx":26
 *         , double* yverts, long nrays, double* xc, double* yc, long* result)
 * #
 * def init_telescope(name, num):             # <<<<<<<<<<<<<<
 * #
 *   class telescope(object):
 */
  __pyx_tuple__111 = PyTuple_Pack(5, __pyx_n_s_name, __pyx_n_s_num, __pyx_n_s_telescope, __pyx_n_s_avail, __pyx_n_s_teles); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__111, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init_telescope, 26, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 26, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":256
 * #                                                                              #
 * #
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):             # <<<<<<<<<<<<<<
 * 
 *   class beam(object):
 */
  __pyx_tuple__113 = PyTuple_Pack(7, __pyx_n_s_alpha, __pyx_n_s_x_alpha, __pyx_n_s_y_alpha, __pyx_n_s_degrees, __pyx_n_s_beam, __pyx_n_s_alp, __pyx_n_s_beams); if (unlikely(!__pyx_tuple__113)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__113);
  __Pyx_GIVEREF(__pyx_tuple__113);
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(4, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__113, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_init_beam, 256, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(0, 256, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */
  __pyx_tuple__115 = PyTuple_Pack(12, __pyx_n_s_telescope, __pyx_n_s_order, __pyx_n_s_tstep, __pyx_n_s_tlong, __pyx_n_s_cleandust, __pyx_n_s_period, __pyx_n_s_deltat, __pyx_n_s_SimulatedTime, __pyx_n_s_ideal, __pyx_n_s_multiplechange, __pyx_n_s_primary_obj, __pyx_n_s_segments); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(10, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__115, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_primary_2, 284, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 284, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1045
 * #
 * 
 * def cinside(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] xir \
 *     , ar [double, ndim=1] yir \
 */
  __pyx_tuple__117 = PyTuple_Pack(14, __pyx_n_s_xir, __pyx_n_s_yir, __pyx_n_s_xer, __pyx_n_s_yer, __pyx_n_s_xc, __pyx_n_s_yc, __pyx_n_s_nthreads, __pyx_n_s_vectors, __pyx_n_s_complementary, __pyx_n_s_verbose, __pyx_n_s_cnrays, __pyx_n_s_res, __pyx_n_s_nrefs, __pyx_n_s_ww); if (unlikely(!__pyx_tuple__117)) __PYX_ERR(0, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__117);
  __Pyx_GIVEREF(__pyx_tuple__117);
  __pyx_codeobj__118 = (PyObject*)__Pyx_PyCode_New(10, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__117, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_cinside, 1045, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__118)) __PYX_ERR(0, 1045, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1106
 * 
 * 
 * def secondary(telescope):             # <<<<<<<<<<<<<<
 * #
 *   class mirror_obj(object):
 */
  __pyx_tuple__119 = PyTuple_Pack(3, __pyx_n_s_telescope, __pyx_n_s_mirror_obj, __pyx_n_s_secondary); if (unlikely(!__pyx_tuple__119)) __PYX_ERR(0, 1106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__119);
  __Pyx_GIVEREF(__pyx_tuple__119);
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__119, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_secondary, 1106, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(0, 1106, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1295
 * 
 * #
 * def dirt_timing(lamb, time):             # <<<<<<<<<<<<<<
 * #
 *   def zerodux(lamb, angstrom=True):
 */
  __pyx_tuple__121 = PyTuple_Pack(32, __pyx_n_s_lamb, __pyx_n_s_time, __pyx_n_s_zerodux, __pyx_n_s_zerodux, __pyx_n_s_indexes, __pyx_n_s_indexes, __pyx_n_s_thick, __pyx_n_s_thick, __pyx_n_s_Dthick, __pyx_n_s_Dthick, __pyx_n_s_materials, __pyx_n_s_alpha, __pyx_n_s_n_s, __pyx_n_s_n_in, __pyx_n_s_n_d, __pyx_n_s_elem_esp, __pyx_n_s_n_g, __pyx_n_s_k_g, __pyx_n_s_n_c, __pyx_n_s_elem_ox, __pyx_n_s_n_ox, __pyx_n_s_k_ox, __pyx_n_s_tau_o, __pyx_n_s_tau_d, __pyx_n_s_th_m_o, __pyx_n_s_th_m_d, __pyx_n_s_d_mir, __pyx_n_s_d_ox, __pyx_n_s_d_c, __pyx_n_s_d_d, __pyx_n_s_d_s, __pyx_n_s_material); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(2, 0, 32, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__121, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_dirt_timing, 1295, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(0, 1295, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1556
 * # ---------------------------------------------------------------------
 * #
 * def get_intersection_focus(dir_cos, x, z, f):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */
  __pyx_tuple__123 = PyTuple_Pack(7, __pyx_n_s_dir_cos, __pyx_n_s_x, __pyx_n_s_z, __pyx_n_s_f, __pyx_n_s_a, __pyx_n_s_b, __pyx_n_s_xf); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 1556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);
  __pyx_codeobj__124 = (PyObject*)__Pyx_PyCode_New(4, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__123, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_intersection_focus, 1556, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__124)) __PYX_ERR(0, 1556, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1566
 *   return xf
 * 
 * def get_intersection(dir_cos, x, z, r, k, offset):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */
  __pyx_tuple__125 = PyTuple_Pack(24, __pyx_n_s_dir_cos, __pyx_n_s_x, __pyx_n_s_z, __pyx_n_s_r, __pyx_n_s_k, __pyx_n_s_offset, __pyx_n_s_a, __pyx_n_s_b, __pyx_n_s_cte1, __pyx_n_s_cte2, __pyx_n_s_ctea, __pyx_n_s_cteb, __pyx_n_s_cteq, __pyx_n_s_ctel, __pyx_n_s_ctei, __pyx_n_s_xs2, __pyx_n_s_xs1, __pyx_n_s_dir_cos_n1, __pyx_n_s_zs1, __pyx_n_s_dir_cos_n2, __pyx_n_s_zs2, __pyx_n_s_adiff1, __pyx_n_s_adiff2, __pyx_n_s_ww); if (unlikely(!__pyx_tuple__125)) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__125);
  __Pyx_GIVEREF(__pyx_tuple__125);
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(6, 0, 24, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__125, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_intersection, 1566, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(0, 1566, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1604
 *   return x,z,dir_cos
 * 
 * def rotate_2d(vec, ang):             # <<<<<<<<<<<<<<
 * 
 *   cs = np.cos(ang)
 */
  __pyx_tuple__127 = PyTuple_Pack(5, __pyx_n_s_vec, __pyx_n_s_ang, __pyx_n_s_cs, __pyx_n_s_sn, __pyx_n_s_res); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 1604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_rotate_2d, 1604, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(0, 1604, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1616
 * 
 * 
 * def get_direction_cosines(x,y,z):             # <<<<<<<<<<<<<<
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 */
  __pyx_tuple__129 = PyTuple_Pack(7, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z, __pyx_n_s_dd, __pyx_n_s_l, __pyx_n_s_m, __pyx_n_s_n); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);
  __pyx_codeobj__130 = (PyObject*)__Pyx_PyCode_New(3, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__129, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_direction_cosines, 1616, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__130)) __PYX_ERR(0, 1616, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1625
 *   return np.array([l,m,n])
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):             # <<<<<<<<<<<<<<
 *   #
 *   # Following: https://en.wikipedia.org/wiki/Conic_constant
 */
  __pyx_tuple__131 = PyTuple_Pack(21, __pyx_n_s_x, __pyx_n_s_k, __pyx_n_s_r, __pyx_n_s_f, __pyx_n_s_e, __pyx_n_s_norm, __pyx_n_s_ind, __pyx_n_s_get_conic_sols, __pyx_n_s_get_conic_sols, __pyx_n_s_b, __pyx_n_s_a, __pyx_n_s_c, __pyx_n_s_n_x, __pyx_n_s_n_y, __pyx_n_s_sol, __pyx_n_s_sol1, __pyx_n_s_sol2, __pyx_n_s_t1, __pyx_n_s_t2, __pyx_n_s_nsol, __pyx_n_s_dir_cos); if (unlikely(!__pyx_tuple__131)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__131);
  __Pyx_GIVEREF(__pyx_tuple__131);
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(7, 0, 21, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__131, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_new2_get_gcurv, 1625, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 1625, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1687
 * # ---------------------------------------------------------------------
 * #
 * def get_primary_rays(layout, telescope):             # <<<<<<<<<<<<<<
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 */
  __pyx_tuple__133 = PyTuple_Pack(28, __pyx_n_s_layout, __pyx_n_s_telescope, __pyx_n_s_factor, __pyx_n_s_azi_val, __pyx_n_s_rad_to_azi_rat, __pyx_n_s_irads, __pyx_n_s_drads, __pyx_n_s_val, __pyx_n_s_iangs, __pyx_n_s_dangs, __pyx_n_s_ixs, __pyx_n_s_iys, __pyx_n_s_d1s, __pyx_n_s_d2s, __pyx_n_s_x1d, __pyx_n_s_y1d, __pyx_n_s_rad, __pyx_n_s_area, __pyx_n_s_ang_ref, __pyx_n_s_angs, __pyx_n_s_nds, __pyx_n_s_ww, __pyx_n_s_totn, __pyx_n_s_offset, __pyx_n_s_itn, __pyx_n_s_itnum, __pyx_n_s_ix1s, __pyx_n_s_iy1s); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(2, 0, 28, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_primary_rays, 1687, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(0, 1687, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */
  __pyx_tuple__135 = PyTuple_Pack(56, __pyx_n_s_telescope, __pyx_n_s_beam, __pyx_n_s_secondary, __pyx_n_s_segments, __pyx_n_s_nthreads, __pyx_n_s_osecondary, __pyx_n_s_layout, __pyx_n_s_check_rays, __pyx_n_s_stop, __pyx_n_s_x1d, __pyx_n_s_y1d, __pyx_n_s_rad1d, __pyx_n_s_area1d, __pyx_n_s_fg, __pyx_n_s_ax, __pyx_n_s_ww, __pyx_n_s_check_primary_id, __pyx_n_s_check_primary_id, __pyx_n_s_check_primary, __pyx_n_s_check_primary, __pyx_n_s_ntot, __pyx_n_s_fg1, __pyx_n_s_ax1, __pyx_n_s_fg2, __pyx_n_s_ax2, __pyx_n_s_it_sgm, __pyx_n_s_tm1, __pyx_n_s_wpos, __pyx_n_s_wwn, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_rad, __pyx_n_s_area, __pyx_n_s_th, __pyx_n_s_cs, __pyx_n_s_sn, __pyx_n_s_x1, __pyx_n_s_y1, __pyx_n_s_dir_cos_i, __pyx_n_s_dir_cos_n1, __pyx_n_s_z_1, __pyx_n_s_i_1, __pyx_n_s_dir_cos_o1, __pyx_n_s_x2, __pyx_n_s_z_2, __pyx_n_s_dir_cos_n2, __pyx_n_s_i_2_2, __pyx_n_s_y2, __pyx_n_s_x_sec, __pyx_n_s_y_sec, __pyx_n_s_tm2, __pyx_n_s_isin, __pyx_n_s_tm3, __pyx_n_s_tm4, __pyx_n_s_txt, __pyx_n_s_uts); if (unlikely(!__pyx_tuple__135)) __PYX_ERR(0, 1946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__135);
  __Pyx_GIVEREF(__pyx_tuple__135);
  __pyx_codeobj__136 = (PyObject*)__Pyx_PyCode_New(8, 0, 56, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__135, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_geometry, 1946, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__136)) __PYX_ERR(0, 1946, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2370
 * #
 * 
 * def chex_syst(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] i \
 *     , ar [double, ndim=1] th_1 \
 */
  __pyx_tuple__137 = PyTuple_Pack(21, __pyx_n_s_i, __pyx_n_s_th_1, __pyx_n_s_i_22, __pyx_n_s_lamb, __pyx_n_s_n_s, __pyx_n_s_n_c, __pyx_n_s_n_ox, __pyx_n_s_n_d, __pyx_n_s_n_in, __pyx_n_s_d_s, __pyx_n_s_d_c, __pyx_n_s_d_ox, __pyx_n_s_d_d, __pyx_n_s_nthreads, __pyx_n_s_cnrays, __pyx_n_s_cnlayers, __pyx_n_s_clamb, __pyx_n_s_cnarr, __pyx_n_s_ckarr, __pyx_n_s_cdarr, __pyx_n_s_result); if (unlikely(!__pyx_tuple__137)) __PYX_ERR(0, 2370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__137);
  __Pyx_GIVEREF(__pyx_tuple__137);
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(14, 0, 21, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__137, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_chex_syst, 2370, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(0, 2370, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2432
 * #
 * 
 * def get_mdust(n, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __pyx_tuple__139 = PyTuple_Pack(33, __pyx_n_s_n, __pyx_n_s_mean_dust, __pyx_n_s_snell, __pyx_n_s_snell, __pyx_n_s_tpar, __pyx_n_s_tpar, __pyx_n_s_tper, __pyx_n_s_tper, __pyx_n_s_calculate, __pyx_n_s_rtd, __pyx_n_s_upplim, __pyx_n_s_n1, __pyx_n_s_n2, __pyx_n_s_n3, __pyx_n_s_num, __pyx_n_s_dtor, __pyx_n_s_thetas, __pyx_n_s_dtheta, __pyx_n_s_int1, __pyx_n_s_int3, __pyx_n_s_it_th1, __pyx_n_s_theta1, __pyx_n_s_theta2, __pyx_n_s_theta3, __pyx_n_s_tpar1, __pyx_n_s_tpar2, __pyx_n_s_tper1, __pyx_n_s_tper2, __pyx_n_s_it1, __pyx_n_s_it3, __pyx_n_s_a, __pyx_n_s_d_2, __pyx_n_s_mat); if (unlikely(!__pyx_tuple__139)) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__139);
  __Pyx_GIVEREF(__pyx_tuple__139);
  __pyx_codeobj__140 = (PyObject*)__Pyx_PyCode_New(2, 0, 33, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__139, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_mdust, 2432, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__140)) __PYX_ERR(0, 2432, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2532
 * #
 * 
 * def new_get_mdust(p0, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __pyx_tuple__141 = PyTuple_Pack(3, __pyx_n_s_p0, __pyx_n_s_mean_dust, __pyx_n_s_mat); if (unlikely(!__pyx_tuple__141)) __PYX_ERR(0, 2532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__141);
  __Pyx_GIVEREF(__pyx_tuple__141);
  __pyx_codeobj__142 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__141, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_new_get_mdust, 2532, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__142)) __PYX_ERR(0, 2532, __pyx_L1_error)

  /* "mirror_lib_v04.pyx":2547
 * #
 * 
 * def get_mueller_time(segments, materials,cdust=False, thetaref=0., nthreads=1):             # <<<<<<<<<<<<<<
 * 
 *   import apy_utils as uts
 */
  __pyx_tuple__143 = PyTuple_Pack(20, __pyx_n_s_segments, __pyx_n_s_materials, __pyx_n_s_cdust, __pyx_n_s_thetaref, __pyx_n_s_nthreads, __pyx_n_s_uts, __pyx_n_s_tarea, __pyx_n_s_it, __pyx_n_s_res, __pyx_n_s_avg_res, __pyx_n_s_it_tms, __pyx_n_s_npts_seg, __pyx_n_s_ntot2, __pyx_n_s_it_sgm, __pyx_n_s_mmpa_full, __pyx_n_s_mmpd, __pyx_n_s_res_full, __pyx_n_s_nn, __pyx_n_s__17, __pyx_n_s_txt); if (unlikely(!__pyx_tuple__143)) __PYX_ERR(0, 2547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__143);
  __Pyx_GIVEREF(__pyx_tuple__143);
  __pyx_codeobj__144 = (PyObject*)__Pyx_PyCode_New(5, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__143, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mirror_lib_v04_pyx, __pyx_n_s_get_mueller_time, 2547, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__144)) __PYX_ERR(0, 2547, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyList_Type_remove.type = (PyObject*)&PyList_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_ = PyFloat_FromDouble(1.); if (unlikely(!__pyx_float_1_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_ = PyFloat_FromDouble(2.); if (unlikely(!__pyx_float_2_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_ = PyFloat_FromDouble(3.); if (unlikely(!__pyx_float_3_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_ = PyFloat_FromDouble(4.); if (unlikely(!__pyx_float_4_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_ = PyFloat_FromDouble(6.); if (unlikely(!__pyx_float_6_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_1 = PyFloat_FromDouble(0.1); if (unlikely(!__pyx_float_0_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_2 = PyFloat_FromDouble(0.2); if (unlikely(!__pyx_float_0_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_1 = PyFloat_FromDouble(1.1); if (unlikely(!__pyx_float_1_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_5 = PyFloat_FromDouble(1.5); if (unlikely(!__pyx_float_1_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_20_ = PyFloat_FromDouble(20.); if (unlikely(!__pyx_float_20_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_33_ = PyFloat_FromDouble(33.); if (unlikely(!__pyx_float_33_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_2 = PyFloat_FromDouble(5.2); if (unlikely(!__pyx_float_5_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_4 = PyFloat_FromDouble(5.4); if (unlikely(!__pyx_float_5_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_59_ = PyFloat_FromDouble(59.); if (unlikely(!__pyx_float_59_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_60_ = PyFloat_FromDouble(60.); if (unlikely(!__pyx_float_60_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_11 = PyFloat_FromDouble(0.11); if (unlikely(!__pyx_float_0_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_12 = PyFloat_FromDouble(0.12); if (unlikely(!__pyx_float_0_12)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_e0 = PyFloat_FromDouble(0.e0); if (unlikely(!__pyx_float_0_e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_e0 = PyFloat_FromDouble(1.e0); if (unlikely(!__pyx_float_1_e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_e4 = PyFloat_FromDouble(1.e4); if (unlikely(!__pyx_float_1_e4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_100_ = PyFloat_FromDouble(100.); if (unlikely(!__pyx_float_100_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_120_ = PyFloat_FromDouble(120.); if (unlikely(!__pyx_float_120_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_180_ = PyFloat_FromDouble(180.); if (unlikely(!__pyx_float_180_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_e0 = PyFloat_FromDouble(2.e0); if (unlikely(!__pyx_float_2_e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001 = PyFloat_FromDouble(0.001); if (unlikely(!__pyx_float_0_001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_519 = PyFloat_FromDouble(0.519); if (unlikely(!__pyx_float_0_519)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_936 = PyFloat_FromDouble(0.936); if (unlikely(!__pyx_float_0_936)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_1e2 = PyFloat_FromDouble(1.1e2); if (unlikely(!__pyx_float_1_1e2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_eneg_3 = PyFloat_FromDouble(1.e-3); if (unlikely(!__pyx_float_1_eneg_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_eneg_4 = PyFloat_FromDouble(1.e-4); if (unlikely(!__pyx_float_1_eneg_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_eneg_5 = PyFloat_FromDouble(1.e-5); if (unlikely(!__pyx_float_1_eneg_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_eneg_6 = PyFloat_FromDouble(1.e-6); if (unlikely(!__pyx_float_1_eneg_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_313 = PyFloat_FromDouble(9.313); if (unlikely(!__pyx_float_9_313)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_100_e0 = PyFloat_FromDouble(100.e0); if (unlikely(!__pyx_float_100_e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_31_415 = PyFloat_FromDouble(31.415); if (unlikely(!__pyx_float_31_415)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_44eneg_2 = PyFloat_FromDouble(2.44e-2); if (unlikely(!__pyx_float_2_44eneg_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_09eneg_2 = PyFloat_FromDouble(6.09e-2); if (unlikely(!__pyx_float_6_09eneg_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_79eneg_3 = PyFloat_FromDouble(8.79e-3); if (unlikely(!__pyx_float_8_79eneg_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000124 = PyFloat_FromDouble(0.000124); if (unlikely(!__pyx_float_0_000124)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000131 = PyFloat_FromDouble(0.000131); if (unlikely(!__pyx_float_0_000131)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000138 = PyFloat_FromDouble(0.000138); if (unlikely(!__pyx_float_0_000138)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000155 = PyFloat_FromDouble(0.000155); if (unlikely(!__pyx_float_0_000155)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000177 = PyFloat_FromDouble(0.000177); if (unlikely(!__pyx_float_0_000177)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000207 = PyFloat_FromDouble(0.000207); if (unlikely(!__pyx_float_0_000207)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000248 = PyFloat_FromDouble(0.000248); if (unlikely(!__pyx_float_0_000248)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000310 = PyFloat_FromDouble(0.000310); if (unlikely(!__pyx_float_0_000310)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000354 = PyFloat_FromDouble(0.000354); if (unlikely(!__pyx_float_0_000354)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000413 = PyFloat_FromDouble(0.000413); if (unlikely(!__pyx_float_0_000413)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000496 = PyFloat_FromDouble(0.000496); if (unlikely(!__pyx_float_0_000496)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000620 = PyFloat_FromDouble(0.000620); if (unlikely(!__pyx_float_0_000620)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000653 = PyFloat_FromDouble(0.000653); if (unlikely(!__pyx_float_0_000653)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000689 = PyFloat_FromDouble(0.000689); if (unlikely(!__pyx_float_0_000689)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000729 = PyFloat_FromDouble(0.000729); if (unlikely(!__pyx_float_0_000729)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000740 = PyFloat_FromDouble(0.000740); if (unlikely(!__pyx_float_0_000740)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000777 = PyFloat_FromDouble(0.000777); if (unlikely(!__pyx_float_0_000777)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000785 = PyFloat_FromDouble(0.000785); if (unlikely(!__pyx_float_0_000785)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000793 = PyFloat_FromDouble(0.000793); if (unlikely(!__pyx_float_0_000793)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000794 = PyFloat_FromDouble(0.000794); if (unlikely(!__pyx_float_0_000794)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000795 = PyFloat_FromDouble(0.000795); if (unlikely(!__pyx_float_0_000795)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000796 = PyFloat_FromDouble(0.000796); if (unlikely(!__pyx_float_0_000796)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000798 = PyFloat_FromDouble(0.000798); if (unlikely(!__pyx_float_0_000798)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000799 = PyFloat_FromDouble(0.000799); if (unlikely(!__pyx_float_0_000799)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000800 = PyFloat_FromDouble(0.000800); if (unlikely(!__pyx_float_0_000800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000805 = PyFloat_FromDouble(0.000805); if (unlikely(!__pyx_float_0_000805)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000816 = PyFloat_FromDouble(0.000816); if (unlikely(!__pyx_float_0_000816)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000827 = PyFloat_FromDouble(0.000827); if (unlikely(!__pyx_float_0_000827)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000855 = PyFloat_FromDouble(0.000855); if (unlikely(!__pyx_float_0_000855)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000886 = PyFloat_FromDouble(0.000886); if (unlikely(!__pyx_float_0_000886)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_000954 = PyFloat_FromDouble(0.000954); if (unlikely(!__pyx_float_0_000954)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001033 = PyFloat_FromDouble(0.001033); if (unlikely(!__pyx_float_0_001033)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001127 = PyFloat_FromDouble(0.001127); if (unlikely(!__pyx_float_0_001127)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001240 = PyFloat_FromDouble(0.001240); if (unlikely(!__pyx_float_0_001240)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001378 = PyFloat_FromDouble(0.001378); if (unlikely(!__pyx_float_0_001378)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001550 = PyFloat_FromDouble(0.001550); if (unlikely(!__pyx_float_0_001550)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001771 = PyFloat_FromDouble(0.001771); if (unlikely(!__pyx_float_0_001771)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_002066 = PyFloat_FromDouble(0.002066); if (unlikely(!__pyx_float_0_002066)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_002480 = PyFloat_FromDouble(0.002480); if (unlikely(!__pyx_float_0_002480)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_003100 = PyFloat_FromDouble(0.003100); if (unlikely(!__pyx_float_0_003100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_004133 = PyFloat_FromDouble(0.004133); if (unlikely(!__pyx_float_0_004133)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_004959 = PyFloat_FromDouble(0.004959); if (unlikely(!__pyx_float_0_004959)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_006199 = PyFloat_FromDouble(0.006199); if (unlikely(!__pyx_float_0_006199)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_006526 = PyFloat_FromDouble(0.006526); if (unlikely(!__pyx_float_0_006526)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_006888 = PyFloat_FromDouble(0.006888); if (unlikely(!__pyx_float_0_006888)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_007293 = PyFloat_FromDouble(0.007293); if (unlikely(!__pyx_float_0_007293)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_007749 = PyFloat_FromDouble(0.007749); if (unlikely(!__pyx_float_0_007749)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_008266 = PyFloat_FromDouble(0.008266); if (unlikely(!__pyx_float_0_008266)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_008551 = PyFloat_FromDouble(0.008551); if (unlikely(!__pyx_float_0_008551)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_008856 = PyFloat_FromDouble(0.008856); if (unlikely(!__pyx_float_0_008856)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_009184 = PyFloat_FromDouble(0.009184); if (unlikely(!__pyx_float_0_009184)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_009537 = PyFloat_FromDouble(0.009537); if (unlikely(!__pyx_float_0_009537)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_009919 = PyFloat_FromDouble(0.009919); if (unlikely(!__pyx_float_0_009919)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_010332 = PyFloat_FromDouble(0.010332); if (unlikely(!__pyx_float_0_010332)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_010781 = PyFloat_FromDouble(0.010781); if (unlikely(!__pyx_float_0_010781)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_011271 = PyFloat_FromDouble(0.011271); if (unlikely(!__pyx_float_0_011271)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_011808 = PyFloat_FromDouble(0.011808); if (unlikely(!__pyx_float_0_011808)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_012399 = PyFloat_FromDouble(0.012399); if (unlikely(!__pyx_float_0_012399)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_012652 = PyFloat_FromDouble(0.012652); if (unlikely(!__pyx_float_0_012652)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_012915 = PyFloat_FromDouble(0.012915); if (unlikely(!__pyx_float_0_012915)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_013190 = PyFloat_FromDouble(0.013190); if (unlikely(!__pyx_float_0_013190)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_013477 = PyFloat_FromDouble(0.013477); if (unlikely(!__pyx_float_0_013477)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_013776 = PyFloat_FromDouble(0.013776); if (unlikely(!__pyx_float_0_013776)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_014089 = PyFloat_FromDouble(0.014089); if (unlikely(!__pyx_float_0_014089)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_014417 = PyFloat_FromDouble(0.014417); if (unlikely(!__pyx_float_0_014417)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_014760 = PyFloat_FromDouble(0.014760); if (unlikely(!__pyx_float_0_014760)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_015120 = PyFloat_FromDouble(0.015120); if (unlikely(!__pyx_float_0_015120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_015498 = PyFloat_FromDouble(0.015498); if (unlikely(!__pyx_float_0_015498)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_015694 = PyFloat_FromDouble(0.015694); if (unlikely(!__pyx_float_0_015694)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_015896 = PyFloat_FromDouble(0.015896); if (unlikely(!__pyx_float_0_015896)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016102 = PyFloat_FromDouble(0.016102); if (unlikely(!__pyx_float_0_016102)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016314 = PyFloat_FromDouble(0.016314); if (unlikely(!__pyx_float_0_016314)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016422 = PyFloat_FromDouble(0.016422); if (unlikely(!__pyx_float_0_016422)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016531 = PyFloat_FromDouble(0.016531); if (unlikely(!__pyx_float_0_016531)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016642 = PyFloat_FromDouble(0.016642); if (unlikely(!__pyx_float_0_016642)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016755 = PyFloat_FromDouble(0.016755); if (unlikely(!__pyx_float_0_016755)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016777 = PyFloat_FromDouble(0.016777); if (unlikely(!__pyx_float_0_016777)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016800 = PyFloat_FromDouble(0.016800); if (unlikely(!__pyx_float_0_016800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016823 = PyFloat_FromDouble(0.016823); if (unlikely(!__pyx_float_0_016823)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016846 = PyFloat_FromDouble(0.016846); if (unlikely(!__pyx_float_0_016846)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016869 = PyFloat_FromDouble(0.016869); if (unlikely(!__pyx_float_0_016869)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016892 = PyFloat_FromDouble(0.016892); if (unlikely(!__pyx_float_0_016892)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016915 = PyFloat_FromDouble(0.016915); if (unlikely(!__pyx_float_0_016915)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016938 = PyFloat_FromDouble(0.016938); if (unlikely(!__pyx_float_0_016938)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016961 = PyFloat_FromDouble(0.016961); if (unlikely(!__pyx_float_0_016961)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_016984 = PyFloat_FromDouble(0.016984); if (unlikely(!__pyx_float_0_016984)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017008 = PyFloat_FromDouble(0.017008); if (unlikely(!__pyx_float_0_017008)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017031 = PyFloat_FromDouble(0.017031); if (unlikely(!__pyx_float_0_017031)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017054 = PyFloat_FromDouble(0.017054); if (unlikely(!__pyx_float_0_017054)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017078 = PyFloat_FromDouble(0.017078); if (unlikely(!__pyx_float_0_017078)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017101 = PyFloat_FromDouble(0.017101); if (unlikely(!__pyx_float_0_017101)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017125 = PyFloat_FromDouble(0.017125); if (unlikely(!__pyx_float_0_017125)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017149 = PyFloat_FromDouble(0.017149); if (unlikely(!__pyx_float_0_017149)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017172 = PyFloat_FromDouble(0.017172); if (unlikely(!__pyx_float_0_017172)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017196 = PyFloat_FromDouble(0.017196); if (unlikely(!__pyx_float_0_017196)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017208 = PyFloat_FromDouble(0.017208); if (unlikely(!__pyx_float_0_017208)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017220 = PyFloat_FromDouble(0.017220); if (unlikely(!__pyx_float_0_017220)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017463 = PyFloat_FromDouble(0.017463); if (unlikely(!__pyx_float_0_017463)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_017712 = PyFloat_FromDouble(0.017712); if (unlikely(!__pyx_float_0_017712)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_018233 = PyFloat_FromDouble(0.018233); if (unlikely(!__pyx_float_0_018233)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_018786 = PyFloat_FromDouble(0.018786); if (unlikely(!__pyx_float_0_018786)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_019373 = PyFloat_FromDouble(0.019373); if (unlikely(!__pyx_float_0_019373)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_019998 = PyFloat_FromDouble(0.019998); if (unlikely(!__pyx_float_0_019998)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_020664 = PyFloat_FromDouble(0.020664); if (unlikely(!__pyx_float_0_020664)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_022543 = PyFloat_FromDouble(0.022543); if (unlikely(!__pyx_float_0_022543)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_024797 = PyFloat_FromDouble(0.024797); if (unlikely(!__pyx_float_0_024797)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_027552 = PyFloat_FromDouble(0.027552); if (unlikely(!__pyx_float_0_027552)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_030996 = PyFloat_FromDouble(0.030996); if (unlikely(!__pyx_float_0_030996)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_035424 = PyFloat_FromDouble(0.035424); if (unlikely(!__pyx_float_0_035424)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_035753 = PyFloat_FromDouble(0.035753); if (unlikely(!__pyx_float_0_035753)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_036437 = PyFloat_FromDouble(0.036437); if (unlikely(!__pyx_float_0_036437)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_038468 = PyFloat_FromDouble(0.038468); if (unlikely(!__pyx_float_0_038468)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_041328 = PyFloat_FromDouble(0.041328); if (unlikely(!__pyx_float_0_041328)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_044168 = PyFloat_FromDouble(0.044168); if (unlikely(!__pyx_float_0_044168)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_046304 = PyFloat_FromDouble(0.046304); if (unlikely(!__pyx_float_0_046304)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_049594 = PyFloat_FromDouble(0.049594); if (unlikely(!__pyx_float_0_049594)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_054863 = PyFloat_FromDouble(0.054863); if (unlikely(!__pyx_float_0_054863)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_057167 = PyFloat_FromDouble(0.057167); if (unlikely(!__pyx_float_0_057167)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_061993 = PyFloat_FromDouble(0.061993); if (unlikely(!__pyx_float_0_061993)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_065255 = PyFloat_FromDouble(0.065255); if (unlikely(!__pyx_float_0_065255)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_067041 = PyFloat_FromDouble(0.067041); if (unlikely(!__pyx_float_0_067041)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_068881 = PyFloat_FromDouble(0.068881); if (unlikely(!__pyx_float_0_068881)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_072505 = PyFloat_FromDouble(0.072505); if (unlikely(!__pyx_float_0_072505)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_072932 = PyFloat_FromDouble(0.072932); if (unlikely(!__pyx_float_0_072932)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_077491 = PyFloat_FromDouble(0.077491); if (unlikely(!__pyx_float_0_077491)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_078472 = PyFloat_FromDouble(0.078472); if (unlikely(!__pyx_float_0_078472)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_079478 = PyFloat_FromDouble(0.079478); if (unlikely(!__pyx_float_0_079478)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_079990 = PyFloat_FromDouble(0.079990); if (unlikely(!__pyx_float_0_079990)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_080510 = PyFloat_FromDouble(0.080510); if (unlikely(!__pyx_float_0_080510)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_081036 = PyFloat_FromDouble(0.081036); if (unlikely(!__pyx_float_0_081036)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_081569 = PyFloat_FromDouble(0.081569); if (unlikely(!__pyx_float_0_081569)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_082109 = PyFloat_FromDouble(0.082109); if (unlikely(!__pyx_float_0_082109)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_082657 = PyFloat_FromDouble(0.082657); if (unlikely(!__pyx_float_0_082657)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_083774 = PyFloat_FromDouble(0.083774); if (unlikely(!__pyx_float_0_083774)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_084921 = PyFloat_FromDouble(0.084921); if (unlikely(!__pyx_float_0_084921)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_086101 = PyFloat_FromDouble(0.086101); if (unlikely(!__pyx_float_0_086101)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_088561 = PyFloat_FromDouble(0.088561); if (unlikely(!__pyx_float_0_088561)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_094236 = PyFloat_FromDouble(0.094236); if (unlikely(!__pyx_float_0_094236)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_094517 = PyFloat_FromDouble(0.094517); if (unlikely(!__pyx_float_0_094517)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_095373 = PyFloat_FromDouble(0.095373); if (unlikely(!__pyx_float_0_095373)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_103320 = PyFloat_FromDouble(0.103320); if (unlikely(!__pyx_float_0_103320)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_112710 = PyFloat_FromDouble(0.112710); if (unlikely(!__pyx_float_0_112710)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_123990 = PyFloat_FromDouble(0.123990); if (unlikely(!__pyx_float_0_123990)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_126770 = PyFloat_FromDouble(0.126770); if (unlikely(!__pyx_float_0_126770)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_137760 = PyFloat_FromDouble(0.137760); if (unlikely(!__pyx_float_0_137760)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_1388e0 = PyFloat_FromDouble(0.1388e0); if (unlikely(!__pyx_float_0_1388e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_150650 = PyFloat_FromDouble(0.150650); if (unlikely(!__pyx_float_0_150650)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_154980 = PyFloat_FromDouble(0.154980); if (unlikely(!__pyx_float_0_154980)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_177120 = PyFloat_FromDouble(0.177120); if (unlikely(!__pyx_float_0_177120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_179430 = PyFloat_FromDouble(0.179430); if (unlikely(!__pyx_float_0_179430)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_181370 = PyFloat_FromDouble(0.181370); if (unlikely(!__pyx_float_0_181370)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_205690 = PyFloat_FromDouble(0.205690); if (unlikely(!__pyx_float_0_205690)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_206600 = PyFloat_FromDouble(0.206600); if (unlikely(!__pyx_float_0_206600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_206640 = PyFloat_FromDouble(0.206640); if (unlikely(!__pyx_float_0_206640)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_210100 = PyFloat_FromDouble(0.210100); if (unlikely(!__pyx_float_0_210100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_213800 = PyFloat_FromDouble(0.213800); if (unlikely(!__pyx_float_0_213800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_217500 = PyFloat_FromDouble(0.217500); if (unlikely(!__pyx_float_0_217500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_221400 = PyFloat_FromDouble(0.221400); if (unlikely(!__pyx_float_0_221400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_225400 = PyFloat_FromDouble(0.225400); if (unlikely(!__pyx_float_0_225400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_229600 = PyFloat_FromDouble(0.229600); if (unlikely(!__pyx_float_0_229600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_233440 = PyFloat_FromDouble(0.233440); if (unlikely(!__pyx_float_0_233440)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_233900 = PyFloat_FromDouble(0.233900); if (unlikely(!__pyx_float_0_233900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_238400 = PyFloat_FromDouble(0.238400); if (unlikely(!__pyx_float_0_238400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_243100 = PyFloat_FromDouble(0.243100); if (unlikely(!__pyx_float_0_243100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_247970 = PyFloat_FromDouble(0.247970); if (unlikely(!__pyx_float_0_247970)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_248000 = PyFloat_FromDouble(0.248000); if (unlikely(!__pyx_float_0_248000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_253000 = PyFloat_FromDouble(0.253000); if (unlikely(!__pyx_float_0_253000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_258300 = PyFloat_FromDouble(0.258300); if (unlikely(!__pyx_float_0_258300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_259360 = PyFloat_FromDouble(0.259360); if (unlikely(!__pyx_float_0_259360)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_263800 = PyFloat_FromDouble(0.263800); if (unlikely(!__pyx_float_0_263800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_269500 = PyFloat_FromDouble(0.269500); if (unlikely(!__pyx_float_0_269500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_275500 = PyFloat_FromDouble(0.275500); if (unlikely(!__pyx_float_0_275500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_280030 = PyFloat_FromDouble(0.280030); if (unlikely(!__pyx_float_0_280030)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_281800 = PyFloat_FromDouble(0.281800); if (unlikely(!__pyx_float_0_281800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_282710 = PyFloat_FromDouble(0.282710); if (unlikely(!__pyx_float_0_282710)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_288300 = PyFloat_FromDouble(0.288300); if (unlikely(!__pyx_float_0_288300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_295200 = PyFloat_FromDouble(0.295200); if (unlikely(!__pyx_float_0_295200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_302400 = PyFloat_FromDouble(0.302400); if (unlikely(!__pyx_float_0_302400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_303730 = PyFloat_FromDouble(0.303730); if (unlikely(!__pyx_float_0_303730)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_309960 = PyFloat_FromDouble(0.309960); if (unlikely(!__pyx_float_0_309960)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_310000 = PyFloat_FromDouble(0.310000); if (unlikely(!__pyx_float_0_310000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_314740 = PyFloat_FromDouble(0.314740); if (unlikely(!__pyx_float_0_314740)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_317900 = PyFloat_FromDouble(0.317900); if (unlikely(!__pyx_float_0_317900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_326280 = PyFloat_FromDouble(0.326280); if (unlikely(!__pyx_float_0_326280)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_326300 = PyFloat_FromDouble(0.326300); if (unlikely(!__pyx_float_0_326300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_335100 = PyFloat_FromDouble(0.335100); if (unlikely(!__pyx_float_0_335100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_340310 = PyFloat_FromDouble(0.340310); if (unlikely(!__pyx_float_0_340310)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_344400 = PyFloat_FromDouble(0.344400); if (unlikely(!__pyx_float_0_344400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_354200 = PyFloat_FromDouble(0.354200); if (unlikely(!__pyx_float_0_354200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_364660 = PyFloat_FromDouble(0.364660); if (unlikely(!__pyx_float_0_364660)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_364700 = PyFloat_FromDouble(0.364700); if (unlikely(!__pyx_float_0_364700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_371970 = PyFloat_FromDouble(0.371970); if (unlikely(!__pyx_float_0_371970)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_375700 = PyFloat_FromDouble(0.375700); if (unlikely(!__pyx_float_0_375700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_387500 = PyFloat_FromDouble(0.387500); if (unlikely(!__pyx_float_0_387500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_398770 = PyFloat_FromDouble(0.398770); if (unlikely(!__pyx_float_0_398770)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_399900 = PyFloat_FromDouble(0.399900); if (unlikely(!__pyx_float_0_399900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_413280 = PyFloat_FromDouble(0.413280); if (unlikely(!__pyx_float_0_413280)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_413300 = PyFloat_FromDouble(0.413300); if (unlikely(!__pyx_float_0_413300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_427500 = PyFloat_FromDouble(0.427500); if (unlikely(!__pyx_float_0_427500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_442800 = PyFloat_FromDouble(0.442800); if (unlikely(!__pyx_float_0_442800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_459200 = PyFloat_FromDouble(0.459200); if (unlikely(!__pyx_float_0_459200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_476870 = PyFloat_FromDouble(0.476870); if (unlikely(!__pyx_float_0_476870)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_476900 = PyFloat_FromDouble(0.476900); if (unlikely(!__pyx_float_0_476900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_491310 = PyFloat_FromDouble(0.491310); if (unlikely(!__pyx_float_0_491310)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_495900 = PyFloat_FromDouble(0.495900); if (unlikely(!__pyx_float_0_495900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_516600 = PyFloat_FromDouble(0.516600); if (unlikely(!__pyx_float_0_516600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_521350 = PyFloat_FromDouble(0.521350); if (unlikely(!__pyx_float_0_521350)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_539100 = PyFloat_FromDouble(0.539100); if (unlikely(!__pyx_float_0_539100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_563570 = PyFloat_FromDouble(0.563570); if (unlikely(!__pyx_float_0_563570)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_563600 = PyFloat_FromDouble(0.563600); if (unlikely(!__pyx_float_0_563600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_572510 = PyFloat_FromDouble(0.572510); if (unlikely(!__pyx_float_0_572510)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_590400 = PyFloat_FromDouble(0.590400); if (unlikely(!__pyx_float_0_590400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_607900 = PyFloat_FromDouble(0.607900); if (unlikely(!__pyx_float_0_607900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_619900 = PyFloat_FromDouble(0.619900); if (unlikely(!__pyx_float_0_619900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_619930 = PyFloat_FromDouble(0.619930); if (unlikely(!__pyx_float_0_619930)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_632420 = PyFloat_FromDouble(0.632420); if (unlikely(!__pyx_float_0_632420)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_652250 = PyFloat_FromDouble(0.652250); if (unlikely(!__pyx_float_0_652250)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_652500 = PyFloat_FromDouble(0.652500); if (unlikely(!__pyx_float_0_652500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_679120 = PyFloat_FromDouble(0.679120); if (unlikely(!__pyx_float_0_679120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_688800 = PyFloat_FromDouble(0.688800); if (unlikely(!__pyx_float_0_688800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_688810 = PyFloat_FromDouble(0.688810); if (unlikely(!__pyx_float_0_688810)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_727800 = PyFloat_FromDouble(0.727800); if (unlikely(!__pyx_float_0_727800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_729300 = PyFloat_FromDouble(0.729300); if (unlikely(!__pyx_float_0_729300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_729320 = PyFloat_FromDouble(0.729320); if (unlikely(!__pyx_float_0_729320)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_774900 = PyFloat_FromDouble(0.774900); if (unlikely(!__pyx_float_0_774900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_774910 = PyFloat_FromDouble(0.774910); if (unlikely(!__pyx_float_0_774910)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_794780 = PyFloat_FromDouble(0.794780); if (unlikely(!__pyx_float_0_794780)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_815120 = PyFloat_FromDouble(0.815120); if (unlikely(!__pyx_float_0_815120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_815690 = PyFloat_FromDouble(0.815690); if (unlikely(!__pyx_float_0_815690)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_826600 = PyFloat_FromDouble(0.826600); if (unlikely(!__pyx_float_0_826600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_837740 = PyFloat_FromDouble(0.837740); if (unlikely(!__pyx_float_0_837740)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_873400 = PyFloat_FromDouble(0.873400); if (unlikely(!__pyx_float_0_873400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_880130 = PyFloat_FromDouble(0.880130); if (unlikely(!__pyx_float_0_880130)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_885600 = PyFloat_FromDouble(0.885600); if (unlikely(!__pyx_float_0_885600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_885610 = PyFloat_FromDouble(0.885610); if (unlikely(!__pyx_float_0_885610)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_911660 = PyFloat_FromDouble(0.911660); if (unlikely(!__pyx_float_0_911660)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_918020 = PyFloat_FromDouble(0.918020); if (unlikely(!__pyx_float_0_918020)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_939280 = PyFloat_FromDouble(0.939280); if (unlikely(!__pyx_float_0_939280)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_941890 = PyFloat_FromDouble(0.941890); if (unlikely(!__pyx_float_0_941890)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_953700 = PyFloat_FromDouble(0.953700); if (unlikely(!__pyx_float_0_953700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_958340 = PyFloat_FromDouble(0.958340); if (unlikely(!__pyx_float_0_958340)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_968630 = PyFloat_FromDouble(0.968630); if (unlikely(!__pyx_float_0_968630)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_970480 = PyFloat_FromDouble(0.970480); if (unlikely(!__pyx_float_0_970480)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_979980 = PyFloat_FromDouble(0.979980); if (unlikely(!__pyx_float_0_979980)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_987610 = PyFloat_FromDouble(0.987610); if (unlikely(!__pyx_float_0_987610)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_987930 = PyFloat_FromDouble(0.987930); if (unlikely(!__pyx_float_0_987930)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_988270 = PyFloat_FromDouble(0.988270); if (unlikely(!__pyx_float_0_988270)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_988830 = PyFloat_FromDouble(0.988830); if (unlikely(!__pyx_float_0_988830)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_989090 = PyFloat_FromDouble(0.989090); if (unlikely(!__pyx_float_0_989090)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_989120 = PyFloat_FromDouble(0.989120); if (unlikely(!__pyx_float_0_989120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_989340 = PyFloat_FromDouble(0.989340); if (unlikely(!__pyx_float_0_989340)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_989410 = PyFloat_FromDouble(0.989410); if (unlikely(!__pyx_float_0_989410)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_989660 = PyFloat_FromDouble(0.989660); if (unlikely(!__pyx_float_0_989660)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_990070 = PyFloat_FromDouble(0.990070); if (unlikely(!__pyx_float_0_990070)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_990540 = PyFloat_FromDouble(0.990540); if (unlikely(!__pyx_float_0_990540)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_991110 = PyFloat_FromDouble(0.991110); if (unlikely(!__pyx_float_0_991110)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_991230 = PyFloat_FromDouble(0.991230); if (unlikely(!__pyx_float_0_991230)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_991390 = PyFloat_FromDouble(0.991390); if (unlikely(!__pyx_float_0_991390)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_991430 = PyFloat_FromDouble(0.991430); if (unlikely(!__pyx_float_0_991430)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_992330 = PyFloat_FromDouble(0.992330); if (unlikely(!__pyx_float_0_992330)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_992650 = PyFloat_FromDouble(0.992650); if (unlikely(!__pyx_float_0_992650)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_992850 = PyFloat_FromDouble(0.992850); if (unlikely(!__pyx_float_0_992850)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_993130 = PyFloat_FromDouble(0.993130); if (unlikely(!__pyx_float_0_993130)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_994150 = PyFloat_FromDouble(0.994150); if (unlikely(!__pyx_float_0_994150)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_994570 = PyFloat_FromDouble(0.994570); if (unlikely(!__pyx_float_0_994570)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_994800 = PyFloat_FromDouble(0.994800); if (unlikely(!__pyx_float_0_994800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_996520 = PyFloat_FromDouble(0.996520); if (unlikely(!__pyx_float_0_996520)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_996940 = PyFloat_FromDouble(0.996940); if (unlikely(!__pyx_float_0_996940)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_997910 = PyFloat_FromDouble(0.997910); if (unlikely(!__pyx_float_0_997910)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_997970 = PyFloat_FromDouble(0.997970); if (unlikely(!__pyx_float_0_997970)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_998600 = PyFloat_FromDouble(0.998600); if (unlikely(!__pyx_float_0_998600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_998980 = PyFloat_FromDouble(0.998980); if (unlikely(!__pyx_float_0_998980)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999240 = PyFloat_FromDouble(0.999240); if (unlikely(!__pyx_float_0_999240)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999400 = PyFloat_FromDouble(0.999400); if (unlikely(!__pyx_float_0_999400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999530 = PyFloat_FromDouble(0.999530); if (unlikely(!__pyx_float_0_999530)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999610 = PyFloat_FromDouble(0.999610); if (unlikely(!__pyx_float_0_999610)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999680 = PyFloat_FromDouble(0.999680); if (unlikely(!__pyx_float_0_999680)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999740 = PyFloat_FromDouble(0.999740); if (unlikely(!__pyx_float_0_999740)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999790 = PyFloat_FromDouble(0.999790); if (unlikely(!__pyx_float_0_999790)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999810 = PyFloat_FromDouble(0.999810); if (unlikely(!__pyx_float_0_999810)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999830 = PyFloat_FromDouble(0.999830); if (unlikely(!__pyx_float_0_999830)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999840 = PyFloat_FromDouble(0.999840); if (unlikely(!__pyx_float_0_999840)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999850 = PyFloat_FromDouble(0.999850); if (unlikely(!__pyx_float_0_999850)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999860 = PyFloat_FromDouble(0.999860); if (unlikely(!__pyx_float_0_999860)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999870 = PyFloat_FromDouble(0.999870); if (unlikely(!__pyx_float_0_999870)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999880 = PyFloat_FromDouble(0.999880); if (unlikely(!__pyx_float_0_999880)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999890 = PyFloat_FromDouble(0.999890); if (unlikely(!__pyx_float_0_999890)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999900 = PyFloat_FromDouble(0.999900); if (unlikely(!__pyx_float_0_999900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999910 = PyFloat_FromDouble(0.999910); if (unlikely(!__pyx_float_0_999910)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999920 = PyFloat_FromDouble(0.999920); if (unlikely(!__pyx_float_0_999920)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999930 = PyFloat_FromDouble(0.999930); if (unlikely(!__pyx_float_0_999930)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999940 = PyFloat_FromDouble(0.999940); if (unlikely(!__pyx_float_0_999940)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999950 = PyFloat_FromDouble(0.999950); if (unlikely(!__pyx_float_0_999950)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999970 = PyFloat_FromDouble(0.999970); if (unlikely(!__pyx_float_0_999970)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999980 = PyFloat_FromDouble(0.999980); if (unlikely(!__pyx_float_0_999980)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999984 = PyFloat_FromDouble(0.999984); if (unlikely(!__pyx_float_0_999984)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999989 = PyFloat_FromDouble(0.999989); if (unlikely(!__pyx_float_0_999989)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999991 = PyFloat_FromDouble(0.999991); if (unlikely(!__pyx_float_0_999991)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999993 = PyFloat_FromDouble(0.999993); if (unlikely(!__pyx_float_0_999993)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999994 = PyFloat_FromDouble(0.999994); if (unlikely(!__pyx_float_0_999994)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_999995 = PyFloat_FromDouble(0.999995); if (unlikely(!__pyx_float_0_999995)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_001200 = PyFloat_FromDouble(1.001200); if (unlikely(!__pyx_float_1_001200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_001900 = PyFloat_FromDouble(1.001900); if (unlikely(!__pyx_float_1_001900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_004100 = PyFloat_FromDouble(1.004100); if (unlikely(!__pyx_float_1_004100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_005800 = PyFloat_FromDouble(1.005800); if (unlikely(!__pyx_float_1_005800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_006000 = PyFloat_FromDouble(1.006000); if (unlikely(!__pyx_float_1_006000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_006500 = PyFloat_FromDouble(1.006500); if (unlikely(!__pyx_float_1_006500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_007000 = PyFloat_FromDouble(1.007000); if (unlikely(!__pyx_float_1_007000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_007400 = PyFloat_FromDouble(1.007400); if (unlikely(!__pyx_float_1_007400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_007500 = PyFloat_FromDouble(1.007500); if (unlikely(!__pyx_float_1_007500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_007700 = PyFloat_FromDouble(1.007700); if (unlikely(!__pyx_float_1_007700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_007800 = PyFloat_FromDouble(1.007800); if (unlikely(!__pyx_float_1_007800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_009500 = PyFloat_FromDouble(1.009500); if (unlikely(!__pyx_float_1_009500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_010600 = PyFloat_FromDouble(1.010600); if (unlikely(!__pyx_float_1_010600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_010800 = PyFloat_FromDouble(1.010800); if (unlikely(!__pyx_float_1_010800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_011000 = PyFloat_FromDouble(1.011000); if (unlikely(!__pyx_float_1_011000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_011800 = PyFloat_FromDouble(1.011800); if (unlikely(!__pyx_float_1_011800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_013200 = PyFloat_FromDouble(1.013200); if (unlikely(!__pyx_float_1_013200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_015100 = PyFloat_FromDouble(1.015100); if (unlikely(!__pyx_float_1_015100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_015600 = PyFloat_FromDouble(1.015600); if (unlikely(!__pyx_float_1_015600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_016100 = PyFloat_FromDouble(1.016100); if (unlikely(!__pyx_float_1_016100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_016700 = PyFloat_FromDouble(1.016700); if (unlikely(!__pyx_float_1_016700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_016900 = PyFloat_FromDouble(1.016900); if (unlikely(!__pyx_float_1_016900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_017300 = PyFloat_FromDouble(1.017300); if (unlikely(!__pyx_float_1_017300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_017400 = PyFloat_FromDouble(1.017400); if (unlikely(!__pyx_float_1_017400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_017900 = PyFloat_FromDouble(1.017900); if (unlikely(!__pyx_float_1_017900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_018100 = PyFloat_FromDouble(1.018100); if (unlikely(!__pyx_float_1_018100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_019200 = PyFloat_FromDouble(1.019200); if (unlikely(!__pyx_float_1_019200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_019400 = PyFloat_FromDouble(1.019400); if (unlikely(!__pyx_float_1_019400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_020600 = PyFloat_FromDouble(1.020600); if (unlikely(!__pyx_float_1_020600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_021900 = PyFloat_FromDouble(1.021900); if (unlikely(!__pyx_float_1_021900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_022600 = PyFloat_FromDouble(1.022600); if (unlikely(!__pyx_float_1_022600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_024600 = PyFloat_FromDouble(1.024600); if (unlikely(!__pyx_float_1_024600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_024900 = PyFloat_FromDouble(1.024900); if (unlikely(!__pyx_float_1_024900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_025500 = PyFloat_FromDouble(1.025500); if (unlikely(!__pyx_float_1_025500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_025900 = PyFloat_FromDouble(1.025900); if (unlikely(!__pyx_float_1_025900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_026200 = PyFloat_FromDouble(1.026200); if (unlikely(!__pyx_float_1_026200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_030500 = PyFloat_FromDouble(1.030500); if (unlikely(!__pyx_float_1_030500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_033000 = PyFloat_FromDouble(1.033000); if (unlikely(!__pyx_float_1_033000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_033200 = PyFloat_FromDouble(1.033200); if (unlikely(!__pyx_float_1_033200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_034900 = PyFloat_FromDouble(1.034900); if (unlikely(!__pyx_float_1_034900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_072800 = PyFloat_FromDouble(1.072800); if (unlikely(!__pyx_float_1_072800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_127000 = PyFloat_FromDouble(1.127000); if (unlikely(!__pyx_float_1_127000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_127100 = PyFloat_FromDouble(1.127100); if (unlikely(!__pyx_float_1_127100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_239900 = PyFloat_FromDouble(1.239900); if (unlikely(!__pyx_float_1_239900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_240000 = PyFloat_FromDouble(1.240000); if (unlikely(!__pyx_float_1_240000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_315700 = PyFloat_FromDouble(1.315700); if (unlikely(!__pyx_float_1_315700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_328100 = PyFloat_FromDouble(1.328100); if (unlikely(!__pyx_float_1_328100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_366000 = PyFloat_FromDouble(1.366000); if (unlikely(!__pyx_float_1_366000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_377600 = PyFloat_FromDouble(1.377600); if (unlikely(!__pyx_float_1_377600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_378000 = PyFloat_FromDouble(1.378000); if (unlikely(!__pyx_float_1_378000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_389900 = PyFloat_FromDouble(1.389900); if (unlikely(!__pyx_float_1_389900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_399800 = PyFloat_FromDouble(1.399800); if (unlikely(!__pyx_float_1_399800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_435900 = PyFloat_FromDouble(1.435900); if (unlikely(!__pyx_float_1_435900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_486700 = PyFloat_FromDouble(1.486700); if (unlikely(!__pyx_float_1_486700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_549800 = PyFloat_FromDouble(1.549800); if (unlikely(!__pyx_float_1_549800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_550000 = PyFloat_FromDouble(1.550000); if (unlikely(!__pyx_float_1_550000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_572400 = PyFloat_FromDouble(1.572400); if (unlikely(!__pyx_float_1_572400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_578200 = PyFloat_FromDouble(1.578200); if (unlikely(!__pyx_float_1_578200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_678400 = PyFloat_FromDouble(1.678400); if (unlikely(!__pyx_float_1_678400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_726000 = PyFloat_FromDouble(1.726000); if (unlikely(!__pyx_float_1_726000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_736000 = PyFloat_FromDouble(1.736000); if (unlikely(!__pyx_float_1_736000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_742000 = PyFloat_FromDouble(1.742000); if (unlikely(!__pyx_float_1_742000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_746000 = PyFloat_FromDouble(1.746000); if (unlikely(!__pyx_float_1_746000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_749000 = PyFloat_FromDouble(1.749000); if (unlikely(!__pyx_float_1_749000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_751000 = PyFloat_FromDouble(1.751000); if (unlikely(!__pyx_float_1_751000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_752600 = PyFloat_FromDouble(1.752600); if (unlikely(!__pyx_float_1_752600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_754200 = PyFloat_FromDouble(1.754200); if (unlikely(!__pyx_float_1_754200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_755800 = PyFloat_FromDouble(1.755800); if (unlikely(!__pyx_float_1_755800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_757400 = PyFloat_FromDouble(1.757400); if (unlikely(!__pyx_float_1_757400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_759000 = PyFloat_FromDouble(1.759000); if (unlikely(!__pyx_float_1_759000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_760600 = PyFloat_FromDouble(1.760600); if (unlikely(!__pyx_float_1_760600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_762200 = PyFloat_FromDouble(1.762200); if (unlikely(!__pyx_float_1_762200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_763800 = PyFloat_FromDouble(1.763800); if (unlikely(!__pyx_float_1_763800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_765400 = PyFloat_FromDouble(1.765400); if (unlikely(!__pyx_float_1_765400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_767000 = PyFloat_FromDouble(1.767000); if (unlikely(!__pyx_float_1_767000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_768568 = PyFloat_FromDouble(1.768568); if (unlikely(!__pyx_float_1_768568)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_770144 = PyFloat_FromDouble(1.770144); if (unlikely(!__pyx_float_1_770144)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_771000 = PyFloat_FromDouble(1.771000); if (unlikely(!__pyx_float_1_771000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_771200 = PyFloat_FromDouble(1.771200); if (unlikely(!__pyx_float_1_771200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_771736 = PyFloat_FromDouble(1.771736); if (unlikely(!__pyx_float_1_771736)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_773352 = PyFloat_FromDouble(1.773352); if (unlikely(!__pyx_float_1_773352)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_775000 = PyFloat_FromDouble(1.775000); if (unlikely(!__pyx_float_1_775000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_776656 = PyFloat_FromDouble(1.776656); if (unlikely(!__pyx_float_1_776656)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_778368 = PyFloat_FromDouble(1.778368); if (unlikely(!__pyx_float_1_778368)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_780152 = PyFloat_FromDouble(1.780152); if (unlikely(!__pyx_float_1_780152)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_782024 = PyFloat_FromDouble(1.782024); if (unlikely(!__pyx_float_1_782024)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_784000 = PyFloat_FromDouble(1.784000); if (unlikely(!__pyx_float_1_784000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_786192 = PyFloat_FromDouble(1.786192); if (unlikely(!__pyx_float_1_786192)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_788496 = PyFloat_FromDouble(1.788496); if (unlikely(!__pyx_float_1_788496)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_790904 = PyFloat_FromDouble(1.790904); if (unlikely(!__pyx_float_1_790904)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_793408 = PyFloat_FromDouble(1.793408); if (unlikely(!__pyx_float_1_793408)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_796000 = PyFloat_FromDouble(1.796000); if (unlikely(!__pyx_float_1_796000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_798608 = PyFloat_FromDouble(1.798608); if (unlikely(!__pyx_float_1_798608)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_801304 = PyFloat_FromDouble(1.801304); if (unlikely(!__pyx_float_1_801304)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_804096 = PyFloat_FromDouble(1.804096); if (unlikely(!__pyx_float_1_804096)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_806992 = PyFloat_FromDouble(1.806992); if (unlikely(!__pyx_float_1_806992)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_810000 = PyFloat_FromDouble(1.810000); if (unlikely(!__pyx_float_1_810000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_813576 = PyFloat_FromDouble(1.813576); if (unlikely(!__pyx_float_1_813576)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_817168 = PyFloat_FromDouble(1.817168); if (unlikely(!__pyx_float_1_817168)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_820672 = PyFloat_FromDouble(1.820672); if (unlikely(!__pyx_float_1_820672)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_823984 = PyFloat_FromDouble(1.823984); if (unlikely(!__pyx_float_1_823984)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_827000 = PyFloat_FromDouble(1.827000); if (unlikely(!__pyx_float_1_827000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_829104 = PyFloat_FromDouble(1.829104); if (unlikely(!__pyx_float_1_829104)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_830100 = PyFloat_FromDouble(1.830100); if (unlikely(!__pyx_float_1_830100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_830832 = PyFloat_FromDouble(1.830832); if (unlikely(!__pyx_float_1_830832)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_832208 = PyFloat_FromDouble(1.832208); if (unlikely(!__pyx_float_1_832208)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_833256 = PyFloat_FromDouble(1.833256); if (unlikely(!__pyx_float_1_833256)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_833552 = PyFloat_FromDouble(1.833552); if (unlikely(!__pyx_float_1_833552)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_833608 = PyFloat_FromDouble(1.833608); if (unlikely(!__pyx_float_1_833608)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_833664 = PyFloat_FromDouble(1.833664); if (unlikely(!__pyx_float_1_833664)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_833776 = PyFloat_FromDouble(1.833776); if (unlikely(!__pyx_float_1_833776)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_834000 = PyFloat_FromDouble(1.834000); if (unlikely(!__pyx_float_1_834000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_834224 = PyFloat_FromDouble(1.834224); if (unlikely(!__pyx_float_1_834224)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_834336 = PyFloat_FromDouble(1.834336); if (unlikely(!__pyx_float_1_834336)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_834392 = PyFloat_FromDouble(1.834392); if (unlikely(!__pyx_float_1_834392)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_834448 = PyFloat_FromDouble(1.834448); if (unlikely(!__pyx_float_1_834448)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_920500 = PyFloat_FromDouble(1.920500); if (unlikely(!__pyx_float_1_920500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_973900 = PyFloat_FromDouble(1.973900); if (unlikely(!__pyx_float_1_973900)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_066000 = PyFloat_FromDouble(2.066000); if (unlikely(!__pyx_float_2_066000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_066400 = PyFloat_FromDouble(2.066400); if (unlikely(!__pyx_float_2_066400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_160600 = PyFloat_FromDouble(2.160600); if (unlikely(!__pyx_float_2_160600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_280200 = PyFloat_FromDouble(2.280200); if (unlikely(!__pyx_float_2_280200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_473800 = PyFloat_FromDouble(2.473800); if (unlikely(!__pyx_float_2_473800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_479700 = PyFloat_FromDouble(2.479700); if (unlikely(!__pyx_float_2_479700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_480000 = PyFloat_FromDouble(2.480000); if (unlikely(!__pyx_float_2_480000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_615400 = PyFloat_FromDouble(2.615400); if (unlikely(!__pyx_float_2_615400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_694500 = PyFloat_FromDouble(2.694500); if (unlikely(!__pyx_float_2_694500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_755200 = PyFloat_FromDouble(2.755200); if (unlikely(!__pyx_float_2_755200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_766800 = PyFloat_FromDouble(2.766800); if (unlikely(!__pyx_float_2_766800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_767500 = PyFloat_FromDouble(2.767500); if (unlikely(!__pyx_float_2_767500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_099600 = PyFloat_FromDouble(3.099600); if (unlikely(!__pyx_float_3_099600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_262800 = PyFloat_FromDouble(3.262800); if (unlikely(!__pyx_float_3_262800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_337200 = PyFloat_FromDouble(3.337200); if (unlikely(!__pyx_float_3_337200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_444000 = PyFloat_FromDouble(3.444000); if (unlikely(!__pyx_float_3_444000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_646600 = PyFloat_FromDouble(3.646600); if (unlikely(!__pyx_float_3_646600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_874500 = PyFloat_FromDouble(3.874500); if (unlikely(!__pyx_float_3_874500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_899678 = PyFloat_FromDouble(3.899678); if (unlikely(!__pyx_float_3_899678)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_938000 = PyFloat_FromDouble(3.938000); if (unlikely(!__pyx_float_3_938000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_132800 = PyFloat_FromDouble(4.132800); if (unlikely(!__pyx_float_4_132800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_428000 = PyFloat_FromDouble(4.428000); if (unlikely(!__pyx_float_4_428000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_709700 = PyFloat_FromDouble(4.709700); if (unlikely(!__pyx_float_4_709700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_768700 = PyFloat_FromDouble(4.768700); if (unlikely(!__pyx_float_4_768700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_073500 = PyFloat_FromDouble(5.073500); if (unlikely(!__pyx_float_5_073500)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_166000 = PyFloat_FromDouble(5.166000); if (unlikely(!__pyx_float_5_166000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_490300 = PyFloat_FromDouble(5.490300); if (unlikely(!__pyx_float_5_490300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_635700 = PyFloat_FromDouble(5.635700); if (unlikely(!__pyx_float_5_635700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_956400 = PyFloat_FromDouble(5.956400); if (unlikely(!__pyx_float_5_956400)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_199300 = PyFloat_FromDouble(6.199300); if (unlikely(!__pyx_float_6_199300)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_480800 = PyFloat_FromDouble(6.480800); if (unlikely(!__pyx_float_6_480800)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_888100 = PyFloat_FromDouble(6.888100); if (unlikely(!__pyx_float_6_888100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_079600 = PyFloat_FromDouble(7.079600); if (unlikely(!__pyx_float_7_079600)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_749100 = PyFloat_FromDouble(7.749100); if (unlikely(!__pyx_float_7_749100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_775700 = PyFloat_FromDouble(7.775700); if (unlikely(!__pyx_float_7_775700)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_588100 = PyFloat_FromDouble(8.588100); if (unlikely(!__pyx_float_8_588100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_856100 = PyFloat_FromDouble(8.856100); if (unlikely(!__pyx_float_8_856100)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_558000 = PyFloat_FromDouble(9.558000); if (unlikely(!__pyx_float_9_558000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_332000 = PyFloat_FromDouble(10.332000); if (unlikely(!__pyx_float_10_332000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_742000 = PyFloat_FromDouble(10.742000); if (unlikely(!__pyx_float_10_742000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_12_195000 = PyFloat_FromDouble(12.195000); if (unlikely(!__pyx_float_12_195000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_12_399000 = PyFloat_FromDouble(12.399000); if (unlikely(!__pyx_float_12_399000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_13_776000 = PyFloat_FromDouble(13.776000); if (unlikely(!__pyx_float_13_776000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_14_088000 = PyFloat_FromDouble(14.088000); if (unlikely(!__pyx_float_14_088000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_14_739410 = PyFloat_FromDouble(14.739410); if (unlikely(!__pyx_float_14_739410)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_15_498000 = PyFloat_FromDouble(15.498000); if (unlikely(!__pyx_float_15_498000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_16_754999 = PyFloat_FromDouble(16.754999); if (unlikely(!__pyx_float_16_754999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_17_712000 = PyFloat_FromDouble(17.712000); if (unlikely(!__pyx_float_17_712000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_19_075001 = PyFloat_FromDouble(19.075001); if (unlikely(!__pyx_float_19_075001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_20_664000 = PyFloat_FromDouble(20.664000); if (unlikely(!__pyx_float_20_664000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_20_837000 = PyFloat_FromDouble(20.837000); if (unlikely(!__pyx_float_20_837000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_22_542999 = PyFloat_FromDouble(22.542999); if (unlikely(!__pyx_float_22_542999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_24_797001 = PyFloat_FromDouble(24.797001); if (unlikely(!__pyx_float_24_797001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_26_216000 = PyFloat_FromDouble(26.216000); if (unlikely(!__pyx_float_26_216000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_27_552000 = PyFloat_FromDouble(27.552000); if (unlikely(!__pyx_float_27_552000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_30_996000 = PyFloat_FromDouble(30.996000); if (unlikely(!__pyx_float_30_996000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_33_333000 = PyFloat_FromDouble(33.333000); if (unlikely(!__pyx_float_33_333000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_33_519001 = PyFloat_FromDouble(33.519001); if (unlikely(!__pyx_float_33_519001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_38_460999 = PyFloat_FromDouble(38.460999); if (unlikely(!__pyx_float_38_460999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_40_000000 = PyFloat_FromDouble(40.000000); if (unlikely(!__pyx_float_40_000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_43_775002 = PyFloat_FromDouble(43.775002); if (unlikely(!__pyx_float_43_775002)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_44_444000 = PyFloat_FromDouble(44.444000); if (unlikely(!__pyx_float_44_444000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_50_000000 = PyFloat_FromDouble(50.000000); if (unlikely(!__pyx_float_50_000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_50_951000 = PyFloat_FromDouble(50.951000); if (unlikely(!__pyx_float_50_951000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_54_412998 = PyFloat_FromDouble(54.412998); if (unlikely(!__pyx_float_54_412998)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_57_144001 = PyFloat_FromDouble(57.144001); if (unlikely(!__pyx_float_57_144001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_58_580002 = PyFloat_FromDouble(58.580002); if (unlikely(!__pyx_float_58_580002)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_63_554001 = PyFloat_FromDouble(63.554001); if (unlikely(!__pyx_float_63_554001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_66_666000 = PyFloat_FromDouble(66.666000); if (unlikely(!__pyx_float_66_666000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_68_535004 = PyFloat_FromDouble(68.535004); if (unlikely(!__pyx_float_68_535004)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_75_748001 = PyFloat_FromDouble(75.748001); if (unlikely(!__pyx_float_75_748001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_80_000999 = PyFloat_FromDouble(80.000999); if (unlikely(!__pyx_float_80_000999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_91_955002 = PyFloat_FromDouble(91.955002); if (unlikely(!__pyx_float_91_955002)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_99_996002 = PyFloat_FromDouble(99.996002); if (unlikely(!__pyx_float_99_996002)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_08915181 = PyFloat_FromDouble(1.08915181); if (unlikely(!__pyx_float_1_08915181)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_102_099998 = PyFloat_FromDouble(102.099998); if (unlikely(!__pyx_float_102_099998)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_125_000000 = PyFloat_FromDouble(125.000000); if (unlikely(!__pyx_float_125_000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_125_139999 = PyFloat_FromDouble(125.139999); if (unlikely(!__pyx_float_125_139999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_137_759995 = PyFloat_FromDouble(137.759995); if (unlikely(!__pyx_float_137_759995)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_140_050003 = PyFloat_FromDouble(140.050003); if (unlikely(!__pyx_float_140_050003)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_153_850006 = PyFloat_FromDouble(153.850006); if (unlikely(!__pyx_float_153_850006)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_157_300003 = PyFloat_FromDouble(157.300003); if (unlikely(!__pyx_float_157_300003)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_177_119995 = PyFloat_FromDouble(177.119995); if (unlikely(!__pyx_float_177_119995)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_177_929993 = PyFloat_FromDouble(177.929993); if (unlikely(!__pyx_float_177_929993)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_200_000000 = PyFloat_FromDouble(200.000000); if (unlikely(!__pyx_float_200_000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_202_630005 = PyFloat_FromDouble(202.630005); if (unlikely(!__pyx_float_202_630005)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_233_559998 = PyFloat_FromDouble(233.559998); if (unlikely(!__pyx_float_233_559998)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_274_380005 = PyFloat_FromDouble(274.380005); if (unlikely(!__pyx_float_274_380005)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_318_809998 = PyFloat_FromDouble(318.809998); if (unlikely(!__pyx_float_318_809998)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_339_619995 = PyFloat_FromDouble(339.619995); if (unlikely(!__pyx_float_339_619995)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_364_040009 = PyFloat_FromDouble(364.040009); if (unlikely(!__pyx_float_364_040009)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_397_929993 = PyFloat_FromDouble(397.929993); if (unlikely(!__pyx_float_397_929993)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_423_959991 = PyFloat_FromDouble(423.959991); if (unlikely(!__pyx_float_423_959991)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_3182408e0 = PyFloat_FromDouble(1.3182408e0); if (unlikely(!__pyx_float_1_3182408e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_012800e_02 = PyFloat_FromDouble(1.012800e+02); if (unlikely(!__pyx_float_1_012800e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_07044083e0 = PyFloat_FromDouble(1.07044083e0); if (unlikely(!__pyx_float_1_07044083e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_072600eneg_06 = PyFloat_FromDouble(1.072600e-06); if (unlikely(!__pyx_float_1_072600eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_089600e_02 = PyFloat_FromDouble(1.089600e+02); if (unlikely(!__pyx_float_1_089600e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_096900e_01 = PyFloat_FromDouble(1.096900e+01); if (unlikely(!__pyx_float_1_096900e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_098700eneg_02 = PyFloat_FromDouble(1.098700e-02); if (unlikely(!__pyx_float_1_098700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_10202242e0 = PyFloat_FromDouble(1.10202242e0); if (unlikely(!__pyx_float_1_10202242e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_102600eneg_05 = PyFloat_FromDouble(1.102600e-05); if (unlikely(!__pyx_float_1_102600eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_104100eneg_01 = PyFloat_FromDouble(1.104100e-01); if (unlikely(!__pyx_float_1_104100eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_155500e_00 = PyFloat_FromDouble(1.155500e+00); if (unlikely(!__pyx_float_1_155500e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_163600eneg_05 = PyFloat_FromDouble(1.163600e-05); if (unlikely(!__pyx_float_1_163600eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_165100eneg_02 = PyFloat_FromDouble(1.165100e-02); if (unlikely(!__pyx_float_1_165100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_181100eneg_04 = PyFloat_FromDouble(1.181100e-04); if (unlikely(!__pyx_float_1_181100eneg_04)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_183900e_02 = PyFloat_FromDouble(1.183900e+02); if (unlikely(!__pyx_float_1_183900e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_224500e_01 = PyFloat_FromDouble(1.224500e+01); if (unlikely(!__pyx_float_1_224500e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_247600eneg_02 = PyFloat_FromDouble(1.247600e-02); if (unlikely(!__pyx_float_1_247600eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_248800eneg_07 = PyFloat_FromDouble(1.248800e-07); if (unlikely(!__pyx_float_1_248800eneg_07)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_272000eneg_07 = PyFloat_FromDouble(1.272000e-07); if (unlikely(!__pyx_float_1_272000eneg_07)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_28604141e0 = PyFloat_FromDouble(1.28604141e0); if (unlikely(!__pyx_float_1_28604141e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_294900e_02 = PyFloat_FromDouble(1.294900e+02); if (unlikely(!__pyx_float_1_294900e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_360900e_02 = PyFloat_FromDouble(1.360900e+02); if (unlikely(!__pyx_float_1_360900e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_364200eneg_05 = PyFloat_FromDouble(1.364200e-05); if (unlikely(!__pyx_float_1_364200eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_372800eneg_02 = PyFloat_FromDouble(1.372800e-02); if (unlikely(!__pyx_float_1_372800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_377500e_00 = PyFloat_FromDouble(1.377500e+00); if (unlikely(!__pyx_float_1_377500e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_378400e_01 = PyFloat_FromDouble(1.378400e+01); if (unlikely(!__pyx_float_1_378400e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_442300e_02 = PyFloat_FromDouble(1.442300e+02); if (unlikely(!__pyx_float_1_442300e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_477300eneg_02 = PyFloat_FromDouble(1.477300e-02); if (unlikely(!__pyx_float_1_477300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_534500e_02 = PyFloat_FromDouble(1.534500e+02); if (unlikely(!__pyx_float_1_534500e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_543700eneg_02 = PyFloat_FromDouble(1.543700e-02); if (unlikely(!__pyx_float_1_543700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_562800eneg_05 = PyFloat_FromDouble(1.562800e-05); if (unlikely(!__pyx_float_1_562800eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_565600e_01 = PyFloat_FromDouble(1.565600e+01); if (unlikely(!__pyx_float_1_565600e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_589400eneg_02 = PyFloat_FromDouble(1.589400e-02); if (unlikely(!__pyx_float_1_589400eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_630400eneg_02 = PyFloat_FromDouble(1.630400e-02); if (unlikely(!__pyx_float_1_630400eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_636600e_00 = PyFloat_FromDouble(1.636600e+00); if (unlikely(!__pyx_float_1_636600e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_648100e_02 = PyFloat_FromDouble(1.648100e+02); if (unlikely(!__pyx_float_1_648100e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_658900eneg_01 = PyFloat_FromDouble(1.658900e-01); if (unlikely(!__pyx_float_1_658900eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_776500eneg_02 = PyFloat_FromDouble(1.776500e-02); if (unlikely(!__pyx_float_1_776500eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_799100e_01 = PyFloat_FromDouble(1.799100e+01); if (unlikely(!__pyx_float_1_799100e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_817800e_02 = PyFloat_FromDouble(1.817800e+02); if (unlikely(!__pyx_float_1_817800e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_914500eneg_02 = PyFloat_FromDouble(1.914500e-02); if (unlikely(!__pyx_float_1_914500eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_917300eneg_07 = PyFloat_FromDouble(1.917300e-07); if (unlikely(!__pyx_float_1_917300eneg_07)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_951900e_00 = PyFloat_FromDouble(1.951900e+00); if (unlikely(!__pyx_float_1_951900e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_956400eneg_02 = PyFloat_FromDouble(1.956400e-02); if (unlikely(!__pyx_float_1_956400eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_999900e_02 = PyFloat_FromDouble(1.999900e+02); if (unlikely(!__pyx_float_1_999900e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_001200eneg_02 = PyFloat_FromDouble(2.001200e-02); if (unlikely(!__pyx_float_2_001200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_007200eneg_02 = PyFloat_FromDouble(2.007200e-02); if (unlikely(!__pyx_float_2_007200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_060600eneg_02 = PyFloat_FromDouble(2.060600e-02); if (unlikely(!__pyx_float_2_060600eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_081000e_02 = PyFloat_FromDouble(2.081000e+02); if (unlikely(!__pyx_float_2_081000e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_098200e_01 = PyFloat_FromDouble(2.098200e+01); if (unlikely(!__pyx_float_2_098200e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_158600eneg_05 = PyFloat_FromDouble(2.158600e-05); if (unlikely(!__pyx_float_2_158600eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_200100eneg_04 = PyFloat_FromDouble(2.200100e-04); if (unlikely(!__pyx_float_2_200100eneg_04)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_234000eneg_02 = PyFloat_FromDouble(2.234000e-02); if (unlikely(!__pyx_float_2_234000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_301900e_02 = PyFloat_FromDouble(2.301900e+02); if (unlikely(!__pyx_float_2_301900e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_342000eneg_01 = PyFloat_FromDouble(2.342000e-01); if (unlikely(!__pyx_float_2_342000eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_342100eneg_02 = PyFloat_FromDouble(2.342100e-02); if (unlikely(!__pyx_float_2_342100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_349200eneg_03 = PyFloat_FromDouble(2.349200e-03); if (unlikely(!__pyx_float_2_349200eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_356300e_00 = PyFloat_FromDouble(2.356300e+00); if (unlikely(!__pyx_float_2_356300e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_368700eneg_05 = PyFloat_FromDouble(2.368700e-05); if (unlikely(!__pyx_float_2_368700eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_385300eneg_02 = PyFloat_FromDouble(2.385300e-02); if (unlikely(!__pyx_float_2_385300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_395500eneg_02 = PyFloat_FromDouble(2.395500e-02); if (unlikely(!__pyx_float_2_395500eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_402000eneg_02 = PyFloat_FromDouble(2.402000e-02); if (unlikely(!__pyx_float_2_402000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_406300eneg_02 = PyFloat_FromDouble(2.406300e-02); if (unlikely(!__pyx_float_2_406300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_418400eneg_02 = PyFloat_FromDouble(2.418400e-02); if (unlikely(!__pyx_float_2_418400eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_422700eneg_02 = PyFloat_FromDouble(2.422700e-02); if (unlikely(!__pyx_float_2_422700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_422800eneg_02 = PyFloat_FromDouble(2.422800e-02); if (unlikely(!__pyx_float_2_422800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_428200eneg_02 = PyFloat_FromDouble(2.428200e-02); if (unlikely(!__pyx_float_2_428200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_434300e_02 = PyFloat_FromDouble(2.434300e+02); if (unlikely(!__pyx_float_2_434300e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_434300eneg_02 = PyFloat_FromDouble(2.434300e-02); if (unlikely(!__pyx_float_2_434300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_437500eneg_02 = PyFloat_FromDouble(2.437500e-02); if (unlikely(!__pyx_float_2_437500eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_441500eneg_02 = PyFloat_FromDouble(2.441500e-02); if (unlikely(!__pyx_float_2_441500eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_447600eneg_02 = PyFloat_FromDouble(2.447600e-02); if (unlikely(!__pyx_float_2_447600eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_449900eneg_02 = PyFloat_FromDouble(2.449900e-02); if (unlikely(!__pyx_float_2_449900eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_450100eneg_02 = PyFloat_FromDouble(2.450100e-02); if (unlikely(!__pyx_float_2_450100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_475700eneg_02 = PyFloat_FromDouble(2.475700e-02); if (unlikely(!__pyx_float_2_475700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_477000eneg_02 = PyFloat_FromDouble(2.477000e-02); if (unlikely(!__pyx_float_2_477000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_483100eneg_02 = PyFloat_FromDouble(2.483100e-02); if (unlikely(!__pyx_float_2_483100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_484300eneg_06 = PyFloat_FromDouble(2.484300e-06); if (unlikely(!__pyx_float_2_484300eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_492800eneg_02 = PyFloat_FromDouble(2.492800e-02); if (unlikely(!__pyx_float_2_492800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_500400e_01 = PyFloat_FromDouble(2.500400e+01); if (unlikely(!__pyx_float_2_500400e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_518000eneg_02 = PyFloat_FromDouble(2.518000e-02); if (unlikely(!__pyx_float_2_518000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_543200eneg_02 = PyFloat_FromDouble(2.543200e-02); if (unlikely(!__pyx_float_2_543200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_545200eneg_02 = PyFloat_FromDouble(2.545200e-02); if (unlikely(!__pyx_float_2_545200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_546000eneg_02 = PyFloat_FromDouble(2.546000e-02); if (unlikely(!__pyx_float_2_546000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_582600e_02 = PyFloat_FromDouble(2.582600e+02); if (unlikely(!__pyx_float_2_582600e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_601800eneg_02 = PyFloat_FromDouble(2.601800e-02); if (unlikely(!__pyx_float_2_601800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_682600eneg_02 = PyFloat_FromDouble(2.682600e-02); if (unlikely(!__pyx_float_2_682600eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_753400e_02 = PyFloat_FromDouble(2.753400e+02); if (unlikely(!__pyx_float_2_753400e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_758000e_01 = PyFloat_FromDouble(2.758000e+01); if (unlikely(!__pyx_float_2_758000e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_768100eneg_02 = PyFloat_FromDouble(2.768100e-02); if (unlikely(!__pyx_float_2_768100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_823200eneg_02 = PyFloat_FromDouble(2.823200e-02); if (unlikely(!__pyx_float_2_823200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_895600eneg_02 = PyFloat_FromDouble(2.895600e-02); if (unlikely(!__pyx_float_2_895600eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_902900e_00 = PyFloat_FromDouble(2.902900e+00); if (unlikely(!__pyx_float_2_902900e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_929300eneg_01 = PyFloat_FromDouble(2.929300e-01); if (unlikely(!__pyx_float_2_929300eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_954200e_02 = PyFloat_FromDouble(2.954200e+02); if (unlikely(!__pyx_float_2_954200e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_992000eneg_02 = PyFloat_FromDouble(2.992000e-02); if (unlikely(!__pyx_float_2_992000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_073700e_01 = PyFloat_FromDouble(3.073700e+01); if (unlikely(!__pyx_float_3_073700e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_091800eneg_02 = PyFloat_FromDouble(3.091800e-02); if (unlikely(!__pyx_float_3_091800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_111500eneg_05 = PyFloat_FromDouble(3.111500e-05); if (unlikely(!__pyx_float_3_111500eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_146300eneg_07 = PyFloat_FromDouble(3.146300e-07); if (unlikely(!__pyx_float_3_146300eneg_07)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_207900eneg_05 = PyFloat_FromDouble(3.207900e-05); if (unlikely(!__pyx_float_3_207900eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_210800e_02 = PyFloat_FromDouble(3.210800e+02); if (unlikely(!__pyx_float_3_210800e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_218300e_01 = PyFloat_FromDouble(3.218300e+01); if (unlikely(!__pyx_float_3_218300e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_240900eneg_02 = PyFloat_FromDouble(3.240900e-02); if (unlikely(!__pyx_float_3_240900eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_291100eneg_05 = PyFloat_FromDouble(3.291100e-05); if (unlikely(!__pyx_float_3_291100eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_306100eneg_02 = PyFloat_FromDouble(3.306100e-02); if (unlikely(!__pyx_float_3_306100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_339200eneg_02 = PyFloat_FromDouble(3.339200e-02); if (unlikely(!__pyx_float_3_339200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_381400e_01 = PyFloat_FromDouble(3.381400e+01); if (unlikely(!__pyx_float_3_381400e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_414100eneg_03 = PyFloat_FromDouble(3.414100e-03); if (unlikely(!__pyx_float_3_414100eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_440000eneg_03 = PyFloat_FromDouble(3.440000e-03); if (unlikely(!__pyx_float_3_440000eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_476700eneg_03 = PyFloat_FromDouble(3.476700e-03); if (unlikely(!__pyx_float_3_476700eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_487700eneg_03 = PyFloat_FromDouble(3.487700e-03); if (unlikely(!__pyx_float_3_487700eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_495700eneg_03 = PyFloat_FromDouble(3.495700e-03); if (unlikely(!__pyx_float_3_495700eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_510800eneg_03 = PyFloat_FromDouble(3.510800e-03); if (unlikely(!__pyx_float_3_510800eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_524900eneg_03 = PyFloat_FromDouble(3.524900e-03); if (unlikely(!__pyx_float_3_524900eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_531100eneg_02 = PyFloat_FromDouble(3.531100e-02); if (unlikely(!__pyx_float_3_531100eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_542500eneg_03 = PyFloat_FromDouble(3.542500e-03); if (unlikely(!__pyx_float_3_542500eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_543500e_02 = PyFloat_FromDouble(3.543500e+02); if (unlikely(!__pyx_float_3_543500e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_560800e_01 = PyFloat_FromDouble(3.560800e+01); if (unlikely(!__pyx_float_3_560800e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_588300eneg_02 = PyFloat_FromDouble(3.588300e-02); if (unlikely(!__pyx_float_3_588300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_621800eneg_03 = PyFloat_FromDouble(3.621800e-03); if (unlikely(!__pyx_float_3_621800eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_673000eneg_03 = PyFloat_FromDouble(3.673000e-03); if (unlikely(!__pyx_float_3_673000eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_708100e_00 = PyFloat_FromDouble(3.708100e+00); if (unlikely(!__pyx_float_3_708100e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_759500e_01 = PyFloat_FromDouble(3.759500e+01); if (unlikely(!__pyx_float_3_759500e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_849700eneg_05 = PyFloat_FromDouble(3.849700e-05); if (unlikely(!__pyx_float_3_849700eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_892600eneg_03 = PyFloat_FromDouble(3.892600e-03); if (unlikely(!__pyx_float_3_892600eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_911500eneg_01 = PyFloat_FromDouble(3.911500e-01); if (unlikely(!__pyx_float_3_911500eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_916500e_00 = PyFloat_FromDouble(3.916500e+00); if (unlikely(!__pyx_float_3_916500e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_917100e_02 = PyFloat_FromDouble(3.917100e+02); if (unlikely(!__pyx_float_3_917100e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_982600e_01 = PyFloat_FromDouble(3.982600e+01); if (unlikely(!__pyx_float_3_982600e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_048400eneg_06 = PyFloat_FromDouble(4.048400e-06); if (unlikely(!__pyx_float_4_048400eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_089200e_02 = PyFloat_FromDouble(4.089200e+02); if (unlikely(!__pyx_float_4_089200e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_109200eneg_03 = PyFloat_FromDouble(4.109200e-03); if (unlikely(!__pyx_float_4_109200eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_113100eneg_05 = PyFloat_FromDouble(4.113100e-05); if (unlikely(!__pyx_float_4_113100eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_116400eneg_03 = PyFloat_FromDouble(4.116400e-03); if (unlikely(!__pyx_float_4_116400eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_186300eneg_03 = PyFloat_FromDouble(4.186300e-03); if (unlikely(!__pyx_float_4_186300eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_236700e_01 = PyFloat_FromDouble(4.236700e+01); if (unlikely(!__pyx_float_4_236700e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_239700eneg_03 = PyFloat_FromDouble(4.239700e-03); if (unlikely(!__pyx_float_4_239700eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_296200e_02 = PyFloat_FromDouble(4.296200e+02); if (unlikely(!__pyx_float_4_296200e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_350300eneg_04 = PyFloat_FromDouble(4.350300e-04); if (unlikely(!__pyx_float_4_350300eneg_04)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_369600eneg_03 = PyFloat_FromDouble(4.369600e-03); if (unlikely(!__pyx_float_4_369600eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_395700e_00 = PyFloat_FromDouble(4.395700e+00); if (unlikely(!__pyx_float_4_395700e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_420200eneg_02 = PyFloat_FromDouble(4.420200e-02); if (unlikely(!__pyx_float_4_420200eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_525700e_01 = PyFloat_FromDouble(4.525700e+01); if (unlikely(!__pyx_float_4_525700e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_585000e_02 = PyFloat_FromDouble(4.585000e+02); if (unlikely(!__pyx_float_4_585000e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_677100eneg_05 = PyFloat_FromDouble(4.677100e-05); if (unlikely(!__pyx_float_4_677100eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_713800eneg_05 = PyFloat_FromDouble(4.713800e-05); if (unlikely(!__pyx_float_4_713800eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_832000eneg_02 = PyFloat_FromDouble(4.832000e-02); if (unlikely(!__pyx_float_4_832000eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_837000e_02 = PyFloat_FromDouble(4.837000e+02); if (unlikely(!__pyx_float_4_837000e_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_859300e_01 = PyFloat_FromDouble(4.859300e+01); if (unlikely(!__pyx_float_4_859300e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_999800eneg_05 = PyFloat_FromDouble(4.999800e-05); if (unlikely(!__pyx_float_4_999800eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_000400eneg_03 = PyFloat_FromDouble(5.000400e-03); if (unlikely(!__pyx_float_5_000400eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_000800e_00 = PyFloat_FromDouble(5.000800e+00); if (unlikely(!__pyx_float_5_000800e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_251800e_01 = PyFloat_FromDouble(5.251800e+01); if (unlikely(!__pyx_float_5_251800e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_334900eneg_02 = PyFloat_FromDouble(5.334900e-02); if (unlikely(!__pyx_float_5_334900eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_367600e_00 = PyFloat_FromDouble(5.367600e+00); if (unlikely(!__pyx_float_5_367600e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_510200eneg_07 = PyFloat_FromDouble(5.510200e-07); if (unlikely(!__pyx_float_5_510200eneg_07)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_669700eneg_02 = PyFloat_FromDouble(5.669700e-02); if (unlikely(!__pyx_float_5_669700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_715600e_01 = PyFloat_FromDouble(5.715600e+01); if (unlikely(!__pyx_float_5_715600e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_746900eneg_03 = PyFloat_FromDouble(5.746900e-03); if (unlikely(!__pyx_float_5_746900eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_778100e_00 = PyFloat_FromDouble(5.778100e+00); if (unlikely(!__pyx_float_5_778100e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_797400eneg_05 = PyFloat_FromDouble(5.797400e-05); if (unlikely(!__pyx_float_5_797400eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_5_908600eneg_01 = PyFloat_FromDouble(5.908600e-01); if (unlikely(!__pyx_float_5_908600eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_048400eneg_06 = PyFloat_FromDouble(6.048400e-06); if (unlikely(!__pyx_float_6_048400eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_140700eneg_02 = PyFloat_FromDouble(6.140700e-02); if (unlikely(!__pyx_float_6_140700eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_163300eneg_05 = PyFloat_FromDouble(6.163300e-05); if (unlikely(!__pyx_float_6_163300eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_190100eneg_06 = PyFloat_FromDouble(6.190100e-06); if (unlikely(!__pyx_float_6_190100eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_241800e_00 = PyFloat_FromDouble(6.241800e+00); if (unlikely(!__pyx_float_6_241800e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_284100e_01 = PyFloat_FromDouble(6.284100e+01); if (unlikely(!__pyx_float_6_284100e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_481800eneg_06 = PyFloat_FromDouble(6.481800e-06); if (unlikely(!__pyx_float_6_481800eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_619100eneg_03 = PyFloat_FromDouble(6.619100e-03); if (unlikely(!__pyx_float_6_619100eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_783900e_00 = PyFloat_FromDouble(6.783900e+00); if (unlikely(!__pyx_float_6_783900e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_804900eneg_06 = PyFloat_FromDouble(6.804900e-06); if (unlikely(!__pyx_float_6_804900eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_834800eneg_02 = PyFloat_FromDouble(6.834800e-02); if (unlikely(!__pyx_float_6_834800eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_6_985700e_01 = PyFloat_FromDouble(6.985700e+01); if (unlikely(!__pyx_float_6_985700e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_140800eneg_06 = PyFloat_FromDouble(7.140800e-06); if (unlikely(!__pyx_float_7_140800eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_184700eneg_05 = PyFloat_FromDouble(7.184700e-05); if (unlikely(!__pyx_float_7_184700eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_299200eneg_05 = PyFloat_FromDouble(7.299200e-05); if (unlikely(!__pyx_float_7_299200eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_405200e_00 = PyFloat_FromDouble(7.405200e+00); if (unlikely(!__pyx_float_7_405200e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_486200eneg_05 = PyFloat_FromDouble(7.486200e-05); if (unlikely(!__pyx_float_7_486200eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_509900eneg_03 = PyFloat_FromDouble(7.509900e-03); if (unlikely(!__pyx_float_7_509900eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_716300eneg_01 = PyFloat_FromDouble(7.716300e-01); if (unlikely(!__pyx_float_7_716300eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_735400e_00 = PyFloat_FromDouble(7.735400e+00); if (unlikely(!__pyx_float_7_735400e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_827400e_01 = PyFloat_FromDouble(7.827400e+01); if (unlikely(!__pyx_float_7_827400e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_842200eneg_06 = PyFloat_FromDouble(7.842200e-06); if (unlikely(!__pyx_float_7_842200eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_846600eneg_03 = PyFloat_FromDouble(7.846600e-03); if (unlikely(!__pyx_float_7_846600eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_848000eneg_05 = PyFloat_FromDouble(7.848000e-05); if (unlikely(!__pyx_float_7_848000eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_7_995900eneg_02 = PyFloat_FromDouble(7.995900e-02); if (unlikely(!__pyx_float_7_995900eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_060100e_00 = PyFloat_FromDouble(8.060100e+00); if (unlikely(!__pyx_float_8_060100e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_113400e_00 = PyFloat_FromDouble(8.113400e+00); if (unlikely(!__pyx_float_8_113400e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_187800e_00 = PyFloat_FromDouble(8.187800e+00); if (unlikely(!__pyx_float_8_187800e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_241000eneg_08 = PyFloat_FromDouble(8.241000e-08); if (unlikely(!__pyx_float_8_241000eneg_08)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_257300e_00 = PyFloat_FromDouble(8.257300e+00); if (unlikely(!__pyx_float_8_257300e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_305800e_00 = PyFloat_FromDouble(8.305800e+00); if (unlikely(!__pyx_float_8_305800e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_356500e_00 = PyFloat_FromDouble(8.356500e+00); if (unlikely(!__pyx_float_8_356500e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_386600e_00 = PyFloat_FromDouble(8.386600e+00); if (unlikely(!__pyx_float_8_386600e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_471600eneg_03 = PyFloat_FromDouble(8.471600e-03); if (unlikely(!__pyx_float_8_471600eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_491400e_00 = PyFloat_FromDouble(8.491400e+00); if (unlikely(!__pyx_float_8_491400e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_541800eneg_05 = PyFloat_FromDouble(8.541800e-05); if (unlikely(!__pyx_float_8_541800eneg_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_597000e_00 = PyFloat_FromDouble(8.597000e+00); if (unlikely(!__pyx_float_8_597000e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_819700e_01 = PyFloat_FromDouble(8.819700e+01); if (unlikely(!__pyx_float_8_819700e_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_940000eneg_06 = PyFloat_FromDouble(8.940000e-06); if (unlikely(!__pyx_float_8_940000eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_065500e_00 = PyFloat_FromDouble(9.065500e+00); if (unlikely(!__pyx_float_9_065500e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_312100eneg_03 = PyFloat_FromDouble(9.312100e-03); if (unlikely(!__pyx_float_9_312100eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_422300eneg_02 = PyFloat_FromDouble(9.422300e-02); if (unlikely(!__pyx_float_9_422300eneg_02)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_493900e_00 = PyFloat_FromDouble(9.493900e+00); if (unlikely(!__pyx_float_9_493900e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_567700eneg_01 = PyFloat_FromDouble(9.567700e-01); if (unlikely(!__pyx_float_9_567700eneg_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_651700eneg_03 = PyFloat_FromDouble(9.651700e-03); if (unlikely(!__pyx_float_9_651700eneg_03)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_688700eneg_04 = PyFloat_FromDouble(9.688700e-04); if (unlikely(!__pyx_float_9_688700eneg_04)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_9_891400e_00 = PyFloat_FromDouble(9.891400e+00); if (unlikely(!__pyx_float_9_891400e_00)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_096714416e0 = PyFloat_FromDouble(0.096714416e0); if (unlikely(!__pyx_float_0_096714416e0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_00585997eneg_2 = PyFloat_FromDouble(1.00585997e-2); if (unlikely(!__pyx_float_1_00585997eneg_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_2_ = PyFloat_FromDouble(-2.); if (unlikely(!__pyx_float_neg_2_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_9_313 = PyFloat_FromDouble(-9.313); if (unlikely(!__pyx_float_neg_9_313)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_2_28962 = PyFloat_FromDouble(-2.28962); if (unlikely(!__pyx_float_neg_2_28962)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_0_993295 = PyFloat_FromDouble(-0.993295); if (unlikely(!__pyx_float_neg_0_993295)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_1_002250 = PyFloat_FromDouble(-1.002250); if (unlikely(!__pyx_float_neg_1_002250)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_1_504835 = PyFloat_FromDouble(-1.504835); if (unlikely(!__pyx_float_neg_1_504835)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_neg_3_899678 = PyFloat_FromDouble(-3.899678); if (unlikely(!__pyx_float_neg_3_899678)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_24 = PyInt_FromLong(24); if (unlikely(!__pyx_int_24)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_36 = PyInt_FromLong(36); if (unlikely(!__pyx_int_36)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_360 = PyInt_FromLong(360); if (unlikely(!__pyx_int_360)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_451 = PyInt_FromLong(451); if (unlikely(!__pyx_int_451)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_798 = PyInt_FromLong(798); if (unlikely(!__pyx_int_798)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1024 = PyInt_FromLong(1024); if (unlikely(!__pyx_int_1024)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4096 = PyInt_FromLong(4096); if (unlikely(!__pyx_int_4096)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_2 = PyInt_FromLong(-2); if (unlikely(!__pyx_int_neg_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_9pymirrors___pyx_scope_struct__get_geometry) < 0) __PYX_ERR(0, 1946, __pyx_L1_error)
  __pyx_type_9pymirrors___pyx_scope_struct__get_geometry.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9pymirrors___pyx_scope_struct__get_geometry.tp_dictoffset && __pyx_type_9pymirrors___pyx_scope_struct__get_geometry.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9pymirrors___pyx_scope_struct__get_geometry.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_9pymirrors___pyx_scope_struct__get_geometry = &__pyx_type_9pymirrors___pyx_scope_struct__get_geometry;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(1, 206, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(1, 229, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(1, 233, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(1, 242, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(1, 918, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initpymirrors(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initpymirrors(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_pymirrors(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_pymirrors(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_pymirrors(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'pymirrors' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_pymirrors(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pymirrors", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_pymirrors) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "pymirrors")) {
      if (unlikely(PyDict_SetItemString(modules, "pymirrors", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "mirror_lib_v04.pyx":2
 * #
 * import time as tm             # <<<<<<<<<<<<<<
 * import numpy as np
 * from pdb import set_trace as stop
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_time, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_tm, __pyx_t_1) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":3
 * #
 * import time as tm
 * import numpy as np             # <<<<<<<<<<<<<<
 * from pdb import set_trace as stop
 * import matplotlib.pyplot as pl
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":4
 * import time as tm
 * import numpy as np
 * from pdb import set_trace as stop             # <<<<<<<<<<<<<<
 * import matplotlib.pyplot as pl
 * pl.ion()
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_set_trace);
  __Pyx_GIVEREF(__pyx_n_s_set_trace);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_set_trace);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pdb, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_set_trace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_stop, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mirror_lib_v04.pyx":5
 * import numpy as np
 * from pdb import set_trace as stop
 * import matplotlib.pyplot as pl             # <<<<<<<<<<<<<<
 * pl.ion()
 * import sys
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s__110);
  __Pyx_GIVEREF(__pyx_n_s__110);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__110);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_matplotlib_pyplot, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pl, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":6
 * from pdb import set_trace as stop
 * import matplotlib.pyplot as pl
 * pl.ion()             # <<<<<<<<<<<<<<
 * import sys
 * #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ion); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":7
 * import matplotlib.pyplot as pl
 * pl.ion()
 * import sys             # <<<<<<<<<<<<<<
 * #
 * import cython
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_sys, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":26
 *         , double* yverts, long nrays, double* xc, double* yc, long* result)
 * #
 * def init_telescope(name, num):             # <<<<<<<<<<<<<<
 * #
 *   class telescope(object):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_1init_telescope, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_init_telescope, __pyx_t_1) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":256
 * #                                                                              #
 * #
 * def init_beam(alpha,x_alpha,y_alpha,degrees=False):             # <<<<<<<<<<<<<<
 * 
 *   class beam(object):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_3init_beam, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_init_beam, __pyx_t_1) < 0) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":285
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \             # <<<<<<<<<<<<<<
 *     , ideal=False, multiplechange=1):
 * #
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_inf); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__9 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":284
 * #                                                                              #
 * #
 * def primary(telescope, order, tstep, tlong, cleandust \             # <<<<<<<<<<<<<<
 *     , period=0., deltat=0. ,SimulatedTime=-np.inf \
 *     , ideal=False, multiplechange=1):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_5primary, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_primary_2, __pyx_t_1) < 0) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1045
 * #
 * 
 * def cinside(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] xir \
 *     , ar [double, ndim=1] yir \
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_7cinside, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cinside, __pyx_t_1) < 0) __PYX_ERR(0, 1045, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1106
 * 
 * 
 * def secondary(telescope):             # <<<<<<<<<<<<<<
 * #
 *   class mirror_obj(object):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_9secondary, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_secondary, __pyx_t_1) < 0) __PYX_ERR(0, 1106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1295
 * 
 * #
 * def dirt_timing(lamb, time):             # <<<<<<<<<<<<<<
 * #
 *   def zerodux(lamb, angstrom=True):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_11dirt_timing, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dirt_timing, __pyx_t_1) < 0) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1556
 * # ---------------------------------------------------------------------
 * #
 * def get_intersection_focus(dir_cos, x, z, f):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_13get_intersection_focus, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_intersection_focus, __pyx_t_1) < 0) __PYX_ERR(0, 1556, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1566
 *   return xf
 * 
 * def get_intersection(dir_cos, x, z, r, k, offset):             # <<<<<<<<<<<<<<
 * 
 *   a = dir_cos[2,:]/dir_cos[0,:]
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_15get_intersection, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_intersection, __pyx_t_1) < 0) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1604
 *   return x,z,dir_cos
 * 
 * def rotate_2d(vec, ang):             # <<<<<<<<<<<<<<
 * 
 *   cs = np.cos(ang)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_17rotate_2d, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rotate_2d, __pyx_t_1) < 0) __PYX_ERR(0, 1604, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1616
 * 
 * 
 * def get_direction_cosines(x,y,z):             # <<<<<<<<<<<<<<
 * 
 *   dd = np.sqrt(x**2 + y**2 + z**2)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_19get_direction_cosines, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_direction_cosines, __pyx_t_1) < 0) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1625
 *   return np.array([l,m,n])
 * 
 * def new2_get_gcurv(x,k=0.,r=0.,f=0.,e=0.,norm=False,ind=0.):             # <<<<<<<<<<<<<<
 *   #
 *   # Following: https://en.wikipedia.org/wiki/Conic_constant
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_21new2_get_gcurv, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_new2_get_gcurv, __pyx_t_1) < 0) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1687
 * # ---------------------------------------------------------------------
 * #
 * def get_primary_rays(layout, telescope):             # <<<<<<<<<<<<<<
 * 
 *   if ( (layout!='polar') & (layout!='cartesian') ):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_23get_primary_rays, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_primary_rays, __pyx_t_1) < 0) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1946
 * ###<OBSOLETE>::
 * 
 * def get_geometry(telescope, beam, secondary, segments \             # <<<<<<<<<<<<<<
 *     , nthreads=1, osecondary=False, layout='polar', check_rays=False):
 * #
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_25get_geometry, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_geometry, __pyx_t_1) < 0) __PYX_ERR(0, 1946, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2370
 * #
 * 
 * def chex_syst(\             # <<<<<<<<<<<<<<
 *     ar [double, ndim=1] i \
 *     , ar [double, ndim=1] th_1 \
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_27chex_syst, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_chex_syst, __pyx_t_1) < 0) __PYX_ERR(0, 2370, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2432
 * #
 * 
 * def get_mdust(n, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_29get_mdust, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_mdust, __pyx_t_1) < 0) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2532
 * #
 * 
 * def new_get_mdust(p0, mean_dust):             # <<<<<<<<<<<<<<
 * #
 * #
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_31new_get_mdust, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_new_get_mdust, __pyx_t_1) < 0) __PYX_ERR(0, 2532, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":2547
 * #
 * 
 * def get_mueller_time(segments, materials,cdust=False, thetaref=0., nthreads=1):             # <<<<<<<<<<<<<<
 * 
 *   import apy_utils as uts
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9pymirrors_33get_mueller_time, NULL, __pyx_n_s_pymirrors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_mueller_time, __pyx_t_1) < 0) __PYX_ERR(0, 2547, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mirror_lib_v04.pyx":1
 * #             # <<<<<<<<<<<<<<
 * import time as tm
 * import numpy as np
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../../usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd":1046
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pymirrors", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pymirrors");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* GetModuleGlobalName */
  #if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCall2Args */
  static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* CalculateMetaclass */
  static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* FetchCommonType */
  static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunction */
  #include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* Py3ClassCreate */
  static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* PyIntBinop */
  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_TrueDivideObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
            if (8 * sizeof(long) <= 53 || likely(labs(a) <= ((PY_LONG_LONG)1 << 53))) {
                return PyFloat_FromDouble((double)a / (double)b);
            }
            return PyInt_Type.tp_as_number->nb_true_divide(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT && 1 * PyLong_SHIFT < 53) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT && 1 * PyLong_SHIFT < 53) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT && 2 * PyLong_SHIFT < 53) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT && 2 * PyLong_SHIFT < 53) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT && 3 * PyLong_SHIFT < 53) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT && 3 * PyLong_SHIFT < 53) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_true_divide(op1, op2);
            }
        }
                if ((8 * sizeof(long) <= 53 || likely(labs(a) <= ((PY_LONG_LONG)1 << 53)))
                    || __Pyx_sst_abs(size) <= 52 / PyLong_SHIFT) {
                    return PyFloat_FromDouble((double)a / (double)b);
                }
                return PyLong_Type.tp_as_number->nb_true_divide(op1, op2);
            return PyLong_FromLong(x);
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("divide", return NULL)
            result = ((double)a) / (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
}
#endif

/* RaiseTooManyValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
  static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
  static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* PyFloatBinop */
  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
    }
        PyFPE_START_PROTECT("subtract", return NULL)
        result = a - b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* GetItemInt */
    static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
    #if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* SliceObject */
    static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* PyObjectFormat */
    #if CYTHON_USE_UNICODE_WRITER
static PyObject* __Pyx_PyObject_Format(PyObject* obj, PyObject* format_spec) {
    int ret;
    _PyUnicodeWriter writer;
    if (likely(PyFloat_CheckExact(obj))) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x03040000
        _PyUnicodeWriter_Init(&writer, 0);
#else
        _PyUnicodeWriter_Init(&writer);
#endif
        ret = _PyFloat_FormatAdvancedWriter(
            &writer,
            obj,
            format_spec, 0, PyUnicode_GET_LENGTH(format_spec));
    } else if (likely(PyLong_CheckExact(obj))) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x03040000
        _PyUnicodeWriter_Init(&writer, 0);
#else
        _PyUnicodeWriter_Init(&writer);
#endif
        ret = _PyLong_FormatAdvancedWriter(
            &writer,
            obj,
            format_spec, 0, PyUnicode_GET_LENGTH(format_spec));
    } else {
        return PyObject_Format(obj, format_spec);
    }
    if (unlikely(ret == -1)) {
        _PyUnicodeWriter_Dealloc(&writer);
        return NULL;
    }
    return _PyUnicodeWriter_Finish(&writer);
}
#endif

/* JoinPyUnicode */
    static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      CYTHON_UNUSED Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind;
    Py_ssize_t i, char_pos;
    void *result_udata;
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely(char_pos + ulength < 0))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    result_ulength++;
    value_count++;
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyFloatBinop */
    #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_RemainderObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceRemainder : PyNumber_Remainder)(op1, op2);
    }
        PyFPE_START_PROTECT("remainder", return NULL)
        result = fmod(a, b);
        if (result)
            result += ((result < 0) ^ (b < 0)) * b;
        else
            result = copysign(0.0, b);
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyIntBinop */
      #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyIntCompare */
      static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* None */
      static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* PyIntCompare */
      static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a != b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_TRUE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_TRUE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a != (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* PyIntBinop */
      #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = a % b;
            x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyInt_FromLong(x);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_remainder(op1, op2);
            }
        }
                x = a % b;
                x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla % llb;
                llx += ((llx != 0) & ((llx ^ llb) < 0)) * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    return (inplace ? PyNumber_InPlaceRemainder : PyNumber_Remainder)(op1, op2);
}
#endif

/* UnpackUnboundCMethod */
      static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
      #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* PyIntBinop */
      #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* Import */
      static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* PyFloatBinop */
      #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_NeObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a;
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            return (
                PyFloat_Type.tp_richcompare(op2, op1, Py_NE));
        }
    } else {
        return (
            PyObject_RichCompare(op1, op2, Py_NE));
    }
        if (a != b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
}
#endif

/* PyFloatBinop */
        #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
    }
        PyFPE_START_PROTECT("subtract", return NULL)
        result = a - b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyFloatBinop */
          #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_EqObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a;
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            return (
                PyFloat_Type.tp_richcompare(op2, op1, Py_EQ));
        }
    } else {
        return (
            PyObject_RichCompare(op1, op2, Py_EQ));
    }
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
}
#endif

/* ArgTypeTest */
            static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* IsLittleEndian */
            static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
            static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
              static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((unsigned)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* ExtTypeTest */
              static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* BufferIndexError */
              static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* PyErrFetchRestore */
              #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* PyFloatBinop */
              #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
    }
        PyFPE_START_PROTECT("add", return NULL)
        result = a + b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyFloatBinop */
                #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
    }
        PyFPE_START_PROTECT("add", return NULL)
        result = a + b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* ImportFrom */
                  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* py_abs */
                  #if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *n) {
    if (likely(Py_SIZE(n) == -1)) {
        return PyLong_FromLong(((PyLongObject*)n)->ob_digit[0]);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    {
        PyObject *copy = _PyLong_Copy((PyLongObject*)n);
        if (likely(copy)) {
            Py_SIZE(copy) = -(Py_SIZE(copy));
        }
        return copy;
    }
#else
    return PyNumber_Negative(n);
#endif
}
#endif

/* PyObjectFormatAndDecref */
                  static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f) {
    if (unlikely(!s)) return NULL;
    if (likely(PyUnicode_CheckExact(s))) return s;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyString_CheckExact(s))) {
        PyObject *result = PyUnicode_FromEncodedObject(s, NULL, "strict");
        Py_DECREF(s);
        return result;
    }
    #endif
    return __Pyx_PyObject_FormatAndDecref(s, f);
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f) {
    PyObject *result = PyObject_Format(s, f);
    Py_DECREF(s);
    return result;
}

/* PyIntBinop */
                  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_FloorDivideObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            if (unlikely(b == -1 && ((unsigned long)a) == 0-(unsigned long)a))
                return PyInt_Type.tp_as_number->nb_floor_divide(op1, op2);
            else {
                long q, r;
                q = a / b;
                r = a - q*b;
                q -= ((r != 0) & ((r ^ b) < 0));
                x = q;
            }
            return PyInt_FromLong(x);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_floor_divide(op1, op2);
            }
        }
                {
                    long q, r;
                    q = a / b;
                    r = a - q*b;
                    q -= ((r != 0) & ((r ^ b) < 0));
                    x = q;
                }
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                {
                    PY_LONG_LONG q, r;
                    q = lla / llb;
                    r = lla - q*llb;
                    q -= ((r != 0) & ((r ^ llb) < 0));
                    llx = q;
                }
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    return (inplace ? PyNumber_InPlaceFloorDivide : PyNumber_FloorDivide)(op1, op2);
}
#endif

/* SliceObject */
                  static CYTHON_INLINE int __Pyx_PyObject_SetSlice(PyObject* obj, PyObject* value,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_ass_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_ass_slice(obj, cstart, cstop, value);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_ass_subscript))
#endif
    {
        int result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_ass_subscript(obj, py_slice, value);
#else
        result = value ? PyObject_SetItem(obj, py_slice, value) : PyObject_DelItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object does not support slice %.10s",
        Py_TYPE(obj)->tp_name, value ? "assignment" : "deletion");
bad:
    return -1;
}

/* None */
                  static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* PyFloatBinop */
                  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* DictGetItem */
                    #if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* RaiseException */
                    #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* RaiseNoneIterError */
                    static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* GetTopmostException */
                    #if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
                    #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
                    #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
                    #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObject_GenericGetAttrNoDict */
                    #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* TypeImport */
                    #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* CLineInTraceback */
                    #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
                    static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
                    #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* Declarations */
                    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
                    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
        else if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view);
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


                    /* CIntFromPyVerify */
                    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* FromPy */
                    static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject* o) {
    Py_complex cval;
#if !CYTHON_COMPILING_IN_PYPY
    if (PyComplex_CheckExact(o))
        cval = ((PyComplexObject *)o)->cval;
    else
#endif
        cval = PyComplex_AsCComplex(o);
    return __pyx_t_double_complex_from_parts(
               (double)cval.real,
               (double)cval.imag);
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* Declarations */
                    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
                    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
                    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) ((enum NPY_TYPES) 0 - (enum NPY_TYPES) 1), const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
                    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
                    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
                    #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
                    static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
                    static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
